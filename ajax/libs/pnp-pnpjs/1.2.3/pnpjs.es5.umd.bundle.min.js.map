{"version":3,"sources":["webpack://pnp/webpack/universalModuleDefinition","webpack://pnp/webpack/bootstrap","webpack://pnp/./build/packages/common/es5/src/adalclient.js","webpack://pnp/./build/packages/common/es5/src/collections.js","webpack://pnp/./build/packages/common/es5/src/libconfig.js","webpack://pnp/./build/packages/common/es5/src/storage.js","webpack://pnp/./build/packages/common/es5/index.js","webpack://pnp/./node_modules/tslib/tslib.es6.js","webpack://pnp/./build/packages/common/es5/src/util.js","webpack://pnp/./build/packages/sp/es5/src/config/splibconfig.js","webpack://pnp/./build/packages/sp/es5/src/utils/toabsoluteurl.js","webpack://pnp/./build/packages/common/es5/src/netutil.js","webpack://pnp/(webpack)/buildin/global.js","webpack://pnp/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp/./build/packages/logging/es5/src/logger.js","webpack://pnp/./build/packages/logging/es5/src/loglevel.js","webpack://pnp/./build/packages/logging/es5/src/listeners.js","webpack://pnp/./build/packages/config-store/es5/src/configuration.js","webpack://pnp/./build/packages/config-store/es5/src/providers/cachingConfigurationProvider.js","webpack://pnp/./build/packages/config-store/es5/src/providers/spListConfigurationProvider.js","webpack://pnp/./build/packages/odata/es5/src/caching.js","webpack://pnp/./build/packages/odata/es5/src/parsers.js","webpack://pnp/./build/packages/odata/es5/src/pipeline.js","webpack://pnp/./build/packages/odata/es5/src/queryable.js","webpack://pnp/./build/packages/odata/es5/src/odatabatch.js","webpack://pnp/./build/packages/graph/es5/src/config/graphlibconfig.js","webpack://pnp/./build/packages/graph/es5/src/groups.js","webpack://pnp/./build/packages/graph/es5/src/net/graphhttpclient.js","webpack://pnp/./build/packages/graph/es5/src/types.js","webpack://pnp/./build/packages/graph/es5/src/graphqueryable.js","webpack://pnp/./build/packages/graph/es5/src/members.js","webpack://pnp/./build/packages/graph/es5/src/calendars.js","webpack://pnp/./build/packages/graph/es5/src/attachments.js","webpack://pnp/./build/packages/graph/es5/src/conversations.js","webpack://pnp/./build/packages/graph/es5/src/plans.js","webpack://pnp/./build/packages/graph/es5/src/photos.js","webpack://pnp/./build/packages/graph/es5/src/teams.js","webpack://pnp/./build/packages/graph/es5/src/onenote.js","webpack://pnp/./build/packages/graph/es5/src/contacts.js","webpack://pnp/./build/packages/graph/es5/src/me.js","webpack://pnp/./build/packages/graph/es5/src/users.js","webpack://pnp/./build/packages/graph/es5/src/rest.js","webpack://pnp/./build/packages/graph/es5/src/batch.js","webpack://pnp/./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js","webpack://pnp/./build/packages/sp/es5/src/utils/extractweburl.js","webpack://pnp/./build/packages/sp/es5/src/odata.js","webpack://pnp/./build/packages/sp/es5/src/net/digestcache.js","webpack://pnp/./build/packages/sp/es5/src/net/sphttpclient.js","webpack://pnp/./build/packages/sp/es5/src/utils/metadata.js","webpack://pnp/./build/packages/sp/es5/src/sharepointqueryable.js","webpack://pnp/./build/packages/sp/es5/src/siteusers.js","webpack://pnp/./build/packages/sp/es5/src/sitegroups.js","webpack://pnp/./build/packages/sp/es5/src/types.js","webpack://pnp/./build/packages/sp/es5/src/roles.js","webpack://pnp/./build/packages/sp/es5/src/sharepointqueryablesecurable.js","webpack://pnp/./build/packages/sp/es5/src/files.js","webpack://pnp/./build/packages/sp/es5/src/sharepointqueryableshareable.js","webpack://pnp/./build/packages/sp/es5/src/webparts.js","webpack://pnp/./build/packages/sp/es5/src/folders.js","webpack://pnp/./build/packages/sp/es5/src/contenttypes.js","webpack://pnp/./build/packages/sp/es5/src/attachmentfiles.js","webpack://pnp/./build/packages/sp/es5/src/views.js","webpack://pnp/./build/packages/sp/es5/src/fields.js","webpack://pnp/./build/packages/sp/es5/src/forms.js","webpack://pnp/./build/packages/sp/es5/src/subscriptions.js","webpack://pnp/./build/packages/sp/es5/src/usercustomactions.js","webpack://pnp/./build/packages/sp/es5/src/lists.js","webpack://pnp/./build/packages/sp/es5/src/comments.js","webpack://pnp/./build/packages/sp/es5/src/items.js","webpack://pnp/./build/packages/sp/es5/src/appcatalog.js","webpack://pnp/./build/packages/sp/es5/src/clientsidepages.js","webpack://pnp/./build/packages/sp/es5/src/batch.js","webpack://pnp/./build/packages/sp/es5/src/navigation.js","webpack://pnp/./build/packages/sp/es5/src/regionalsettings.js","webpack://pnp/./build/packages/sp/es5/src/search.js","webpack://pnp/./build/packages/sp/es5/src/social.js","webpack://pnp/./build/packages/sp/es5/src/searchsuggest.js","webpack://pnp/./build/packages/sp/es5/src/features.js","webpack://pnp/./build/packages/sp/es5/src/relateditems.js","webpack://pnp/./build/packages/sp/es5/src/webs.js","webpack://pnp/./build/packages/sp/es5/src/site.js","webpack://pnp/./build/packages/sp/es5/src/userprofiles.js","webpack://pnp/./build/packages/sp/es5/src/utilities.js","webpack://pnp/./build/packages/sp/es5/src/rest.js","webpack://pnp/./build/packages/sp-addinhelpers/es5/src/sprestaddin.js","webpack://pnp/./build/packages/pnpjs/es5/src/pnpjs.js","webpack://pnp/./build/packages/pnpjs/es5/src/config/pnplibconfig.js","webpack://pnp/./build/packages/pnpjs/es5/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","adalclient_AdalClient","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","toString","util","location","origin","fetch","url","options","Error","getToken","getResource","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","netutil","objectEntries","entries","keys","map","k","objectToMap","Map","mergeMaps","target","maps","_i","arguments","length","forEach","v","set","libconfig_RuntimeConfigImpl","RuntimeConfigImpl","_v","extend","config","configurable","RuntimeConfig","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","getCtxCallback","context","method","params","apply","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getRandomString","chars","text","possible","charAt","Math","floor","random","getGUID","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","sanitizeGuid","guid","matches","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","g","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","push","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","f","screenTop","screenY","innerWidth","documentElement","clientWidth","body","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","configuration_Settings","Settings","_settings","add","addJSON","es5","load","provider","getConfiguration","getJSON","cachingConfigurationProvider","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","providedConfig","pnpCache","local","session","spListConfigurationProvider","SPListConfigurationProvider","listTitle","keyFieldName","valueFieldName","lists","getByTitle","items","select","item","asCaching","toUrl","caching_CachingOptions","CachingOptions","storeName","defaultCachingStore","storage","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","parsers_ODataParserBase","ODataParserBase","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","clone","result","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","parsers_LambdaParser","LambdaParser","setResult","hasResult","next","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","verb","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","queryable_Queryable","Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","queryable_ODataQueryable","ODataQueryable","_batch","inBatch","addBatchDependency","addDependency","hasBatch","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","GroupType","GraphRuntimeConfig","GraphRuntimeConfigImpl","graphPart","graphhttpclient_GraphHttpClient","GraphHttpClient","_impl","fetchRaw","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","GraphEndpoints","ensure","endpoint","Beta","V1","regex","replaces","graphqueryable_GraphQueryable","GraphQueryable","urlStr","as","toUrlAndQuery","query","getParent","parentUrl","additionalPath","includeBatch","setEndpoint","graphqueryable_GraphQueryableCollection","GraphQueryableCollection","selects","expand","expands","orderBy","ascending","top","skip","num","skipToken","graphqueryable_GraphQueryableSearchableCollection","GraphQueryableSearchableCollection","search","graphqueryable_GraphQueryableInstance","GraphQueryableInstance","members_Members","Members","@odata.id","getById","members_Member","Member","members_Owners","Owners","calendars_Calendar","Calendars","Calendar","calendars_Events","Events","calendars_Event","properties","event","update","attachments_Attachments","Attachments","attachments_Attachment","addFile","bytes","@odata.type","contentBytes","Attachment","conversations_Conversations","Conversations","conversations_Conversation","conversations_Threads","Threads","conversations_Thread","conversations_Posts","Posts","conversations_Post","Conversation","Thread","reply","Post","forward","conversations_Senders","Senders","remove","remover","plans_Plans","Plans","plans_Plan","Plan","photos_Photo","Photo","getBlob","getBuffer","setContent","content","teams_Teams","Teams","description","teamProperties","groupProps","graph","groups","Office365","gar","group","createTeam","team","teams_Team","Team","groups_Groups","Groups","groups_Group","mailNickname","groupType","additionalProperties","postBody","displayName","mailEnabled","securityEnabled","Security","groupTypes","Group","addFavorite","getMemberGroups","securityEnabledOnly","removeFavorite","resetUnseenCount","subscribeByMail","unsubscribeByMail","getCalendarView","start","end","view","toISOString","onenote_OneNote","OneNote","onenote_Notebooks","onenote_Sections","onenote_Pages","Notebooks","onenote_Notebook","notebook","Notebook","Sections","onenote_Section","section","Section","Pages","contacts_Contacts","Contacts","contacts_Contact","givenName","surName","emailAddresses","businessPhones","contact","Contact","contacts_ContactFolders","ContactFolders","contacts_ContactFolder","parentFolderId","contactFolder","ContactFolder","contacts_ChildFolders","ChildFolders","me_Me","Me","users_Users","Users","users_User","User","rest_GraphRest","GraphRest","batch_GraphBatch","GraphBatch","batchUrl","requests","batchRequest","formatRequests","batchOptions","Accept","Content-Type","_parseResponse","parsedResponse","responses","chain","request","nextLink","reqInfo","requestFragment","graphResponse","parsedResponses","fill","responseId","Response","SPRequestExecutorClient","convertToResponse","spResponse","responseHeaders","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","done","requestOptions","success","binaryStringRequestBody","executeAsync","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","odata_SPODataEntityArrayParserImpl","SPODataEntityArrayParserImpl","spODataEntity","spODataEntityArray","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","cache","credentials","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_digestCache","digest","setRetry","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","aliasedParams","labelName","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","SiteUser","user","sitegroups_SiteGroups","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","file","addMultiple","files","deleteMultiple","AttachmentFile","getText","getParsed","views_Views","Views","Views_1","views_View","title","personalView","PersonalView","Title","views_ViewFields","renderAsHtml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","App","deploy","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","statusRegExp","lines","line","trim","absoluteRequestUrl","batchBody","currentChangeSetId","castHeaders","getNextOrder","collection","max","regexIndexOf","startpos","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","clientsidepages_ClientSidePage","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","clientsidepages_CanvasSection","toHtml","fromHtml","control","clientsidepages_CanvasColumn","mergeColumnToTree","clientsidepages_ClientSideWebpart","mergePartToTree","clientsidepages_ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","CanvasSection","_memId","addColumn","factor","defaultColumn","clientsidepages_CanvasControl","CanvasControl","controlType","dataVersion","getControlData","CanvasColumn","getControl","jsonData","displayMode","clientsidepages_ClientSidePart","ClientSidePart","ClientSideText","_text","startsWith","editorType","controlIndex","ClientSideWebpart","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","funcs","search_props","toPropCase","str","$1","SearchQueryBuilder","queryText","Proxy","Querytext","self","proxy","pk","mappedPk","propKey","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","search_SearchResults","prop","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","webs_Web","webs_WebInfos","WebInfos","Web","Web_1","fromUrl","getParentWeb","ParentWeb","site_Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","addClientSidePageByPath","listRelativePath","Site","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","fm","sprestaddin_sp","SPRestAddIn","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","pnpjs_sp","pnpjs_graph","pnpjs_config","pnpjs_setup","pnpjs"],"mappings":"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","file":"pnpjs.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { combine, isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { mergeMaps, objectToMap, jsS } from \"@pnp/common\";\r\n/**\r\n * Class used to manage the current application settings\r\n *\r\n */\r\nvar Settings = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the settings class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Settings(_settings) {\r\n        if (_settings === void 0) { _settings = new Map(); }\r\n        this._settings = _settings;\r\n    }\r\n    /**\r\n     * Adds a new single setting, or overwrites a previous setting with the same key\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {string} value The setting value to store\r\n     */\r\n    Settings.prototype.add = function (key, value) {\r\n        this._settings.set(key, value);\r\n    };\r\n    /**\r\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\r\n     *\r\n     * @param {string} key The key used to store this setting\r\n     * @param {any} value The setting value to store\r\n     */\r\n    Settings.prototype.addJSON = function (key, value) {\r\n        this._settings.set(key, jsS(value));\r\n    };\r\n    /**\r\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\r\n     *\r\n     * @param {TypedHash<any>} hash The set of values to add\r\n     */\r\n    Settings.prototype.apply = function (hash) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            try {\r\n                _this._settings = mergeMaps(_this._settings, objectToMap(hash));\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\r\n     *\r\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\r\n     */\r\n    Settings.prototype.load = function (provider) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            provider.getConfiguration().then(function (value) {\r\n                _this._settings = mergeMaps(_this._settings, objectToMap(value));\r\n                resolve();\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a value from the configuration\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {string} string value from the configuration\r\n     */\r\n    Settings.prototype.get = function (key) {\r\n        return this._settings.get(key) || null;\r\n    };\r\n    /**\r\n     * Gets a JSON value, rehydrating the stored string to the original object\r\n     *\r\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\r\n     * @return {any} object from the configuration\r\n     */\r\n    Settings.prototype.getJSON = function (key) {\r\n        var o = this.get(key);\r\n        if (o === undefined || o === null) {\r\n            return o;\r\n        }\r\n        return JSON.parse(o);\r\n    };\r\n    return Settings;\r\n}());\r\nexport { Settings };\r\n//# sourceMappingURL=configuration.js.map","import { PnPClientStorage } from \"@pnp/common\";\r\n/**\r\n * A caching provider which can wrap other non-caching providers\r\n *\r\n */\r\nvar CachingConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new caching configuration provider\r\n     * @constructor\r\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\r\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\r\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\r\n     */\r\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.cacheKey = cacheKey;\r\n        this.wrappedProvider = wrappedProvider;\r\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\r\n    }\r\n    /**\r\n     * Gets the wrapped configuration providers\r\n     *\r\n     * @return {IConfigurationProvider} Wrapped configuration provider\r\n     */\r\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\r\n        return this.wrappedProvider;\r\n    };\r\n    /**\r\n     * Loads the configuration values either from the cache or from the wrapped provider\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        // Cache not available, pass control to the wrapped provider\r\n        if ((!this.store) || (!this.store.enabled)) {\r\n            return this.wrappedProvider.getConfiguration();\r\n        }\r\n        return this.store.getOrPut(this.cacheKey, function () {\r\n            return _this.wrappedProvider.getConfiguration().then(function (providedConfig) {\r\n                _this.store.put(_this.cacheKey, providedConfig);\r\n                return providedConfig;\r\n            });\r\n        });\r\n    };\r\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\r\n        var pnpCache = new PnPClientStorage();\r\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\r\n            return pnpCache.local;\r\n        }\r\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\r\n            return pnpCache.session;\r\n        }\r\n        throw Error(\"Cannot create a caching configuration provider since cache is not available.\");\r\n    };\r\n    return CachingConfigurationProvider;\r\n}());\r\nexport default CachingConfigurationProvider;\r\n//# sourceMappingURL=cachingConfigurationProvider.js.map","import { default as CachingConfigurationProvider } from \"./cachingConfigurationProvider\";\r\n/**\r\n * A configuration provider which loads configuration values from a SharePoint list\r\n *\r\n */\r\nvar SPListConfigurationProvider = /** @class */ (function () {\r\n    /**\r\n     * Creates a new SharePoint list based configuration provider\r\n     * @constructor\r\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\r\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default: \"config\")\r\n     * @param {string} keyFieldName The name of the field in the list to use as the setting key (optional, default: \"Title\")\r\n     * @param {string} valueFieldName The name of the field in the list to use as the setting value (optional, default: \"Value\")\r\n     */\r\n    function SPListConfigurationProvider(web, listTitle, keyFieldName, valueFieldName) {\r\n        if (listTitle === void 0) { listTitle = \"config\"; }\r\n        if (keyFieldName === void 0) { keyFieldName = \"Title\"; }\r\n        if (valueFieldName === void 0) { valueFieldName = \"Value\"; }\r\n        this.web = web;\r\n        this.listTitle = listTitle;\r\n        this.keyFieldName = keyFieldName;\r\n        this.valueFieldName = valueFieldName;\r\n    }\r\n    /**\r\n     * Loads the configuration values from the SharePoint list\r\n     *\r\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\r\n     */\r\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\r\n        var _this = this;\r\n        return this.web.lists.getByTitle(this.listTitle).items.select(this.keyFieldName, this.valueFieldName).get()\r\n            .then(function (data) { return data.reduce(function (c, item) {\r\n            c[item[_this.keyFieldName]] = item[_this.valueFieldName];\r\n            return c;\r\n        }, {}); });\r\n    };\r\n    /**\r\n     * Wraps the current provider in a cache enabled provider\r\n     *\r\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\r\n     */\r\n    SPListConfigurationProvider.prototype.asCaching = function (cacheKey) {\r\n        if (cacheKey === void 0) { cacheKey = \"pnp_configcache_splist_\" + this.web.toUrl() + \"+\" + this.listTitle; }\r\n        return new CachingConfigurationProvider(this, cacheKey);\r\n    };\r\n    return SPListConfigurationProvider;\r\n}());\r\nexport default SPListConfigurationProvider;\r\n//# sourceMappingURL=spListConfigurationProvider.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(\"Error making HttpClient request in queryable: [\" + r.status + \"] \" + r.statusText, r.clone()));\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { RuntimeConfig, AdalClient } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.headers !== undefined) {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            // use a configured factory firt\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.fetchClientFactory !== undefined) {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (RuntimeConfig.spfxContext !== undefined) {\r\n                return function () { return AdalClient.fromSPFxContext(RuntimeConfig.spfxContext); };\r\n            }\r\n            throw Error(\"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nexport { GraphRuntimeConfigImpl };\r\nexport var GraphRuntimeConfig = new GraphRuntimeConfigImpl();\r\n//# sourceMappingURL=graphlibconfig.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Members, Owners } from \"./members\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { Calendar, Events } from \"./calendars\";\r\nimport { Conversations, Senders } from \"./conversations\";\r\nimport { Plans } from \"./plans\";\r\nimport { Photo } from \"./photos\";\r\nimport { Team } from \"./teams\";\r\nimport { GraphEndpoints } from \"./types\";\r\nexport var GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Groups, _super);\r\n    function Groups(baseUrl, path) {\r\n        if (path === void 0) { path = \"groups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = extend(postBody, {\r\n                groupTypes: groupType === GroupType.Office365 ? [\"Unified\"] : [\"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\nexport { Groups };\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"calendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"team\", {\r\n        /**\r\n         * Gets the team associated with this group, if it exists\r\n         */\r\n        get: function () {\r\n            return new Team(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Microsoft Team associated with this group\r\n     *\r\n     * @param properties Initial properties for the new Team\r\n     */\r\n    Group.prototype.createTeam = function (properties) {\r\n        return this.clone(Group, \"team\").setEndpoint(GraphEndpoints.Beta).putCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.set(\"startDateTime\", start.toISOString());\r\n        view.query.set(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\r\nexport { Group };\r\n//# sourceMappingURL=groups.js.map","import { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"../config/graphlibconfig\";\r\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        var opts = extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\r\nexport { GraphHttpClient };\r\n//# sourceMappingURL=graphhttpclient.js.map","var GraphEndpoints = /** @class */ (function () {\r\n    function GraphEndpoints() {\r\n    }\r\n    /**\r\n     *\r\n     * @param url The url to set the endpoint\r\n     */\r\n    GraphEndpoints.ensure = function (url, endpoint) {\r\n        var all = [GraphEndpoints.Beta, GraphEndpoints.V1];\r\n        var regex = new RegExp(endpoint, \"i\");\r\n        var replaces = all.filter(function (s) { return !regex.test(s); }).map(function (s) { return s.replace(\".\", \"\\\\.\"); });\r\n        regex = new RegExp(\"/?(\" + replaces.join(\"|\") + \")/\", \"ig\");\r\n        return url.replace(regex, \"/\" + endpoint + \"/\");\r\n    };\r\n    GraphEndpoints.Beta = \"beta\";\r\n    GraphEndpoints.V1 = \"v1.0\";\r\n    return GraphEndpoints;\r\n}());\r\nexport { GraphEndpoints };\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, isUrlAbsolute, getGUID, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nimport { GraphEndpoints } from \"./types\";\r\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = combine(urlStr, path);\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var url = this.toUrl();\r\n        if (!isUrlAbsolute(url)) {\r\n            url = combine(\"https://graph.microsoft.com\", url);\r\n        }\r\n        if (this.query.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        // TODO:: include batching info in clone\r\n        if (includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    GraphQueryable.prototype.setEndpoint = function (endpoint) {\r\n        this._url = GraphEndpoints.ensure(this._url, endpoint);\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        // TODO:: add batch support\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: function () { return void (0); },\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: /^get$/i.test(verb) && this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(ODataQueryable));\r\nexport { GraphQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this.query.set(\"$top\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this.query.set(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this.query.set(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nexport { GraphQueryableCollection };\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this.query.set(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\nexport { GraphQueryableSearchableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\r\nexport { GraphQueryableInstance };\r\n//# sourceMappingURL=graphqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Members = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Members, _super);\r\n    function Members(baseUrl, path) {\r\n        if (path === void 0) { path = \"members\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nexport { Members };\r\nvar Member = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nexport { Member };\r\nvar Owners = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Owners, _super);\r\n    function Owners(baseUrl, path) {\r\n        if (path === void 0) { path = \"owners\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Owners;\r\n}(Members));\r\nexport { Owners };\r\n//# sourceMappingURL=members.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendars, _super);\r\n    function Calendars(baseUrl, path) {\r\n        if (path === void 0) { path = \"calendars\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nexport { Calendars };\r\nvar Calendar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nexport { Calendar };\r\nvar Events = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Events, _super);\r\n    function Events(baseUrl, path) {\r\n        if (path === void 0) { path = \"events\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nexport { Events };\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\r\nexport { Event };\r\n//# sourceMappingURL=calendars.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Attachments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachments, _super);\r\n    function Attachments(baseUrl, path) {\r\n        if (path === void 0) { path = \"attachments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: jsS({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nexport { Attachments };\r\nvar Attachment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\r\nexport { Attachment };\r\n//# sourceMappingURL=attachments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { Attachments } from \"./attachments\";\r\nvar Conversations = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversations, _super);\r\n    function Conversations(baseUrl, path) {\r\n        if (path === void 0) { path = \"conversations\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nexport { Conversations };\r\nvar Threads = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Threads, _super);\r\n    function Threads(baseUrl, path) {\r\n        if (path === void 0) { path = \"threads\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nexport { Threads };\r\nvar Posts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Posts, _super);\r\n    function Posts(baseUrl, path) {\r\n        if (path === void 0) { path = \"posts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nexport { Posts };\r\nvar Conversation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nexport { Conversation };\r\nvar Thread = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nexport { Thread };\r\nvar Post = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: jsS(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nexport { Post };\r\nvar Senders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.set(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\r\nexport { Senders };\r\n//# sourceMappingURL=conversations.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nvar Plans = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plans, _super);\r\n    function Plans(baseUrl, path) {\r\n        if (path === void 0) { path = \"planner/plans\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a plan from this collection by id\r\n     *\r\n     * @param id Plan's id\r\n     */\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nexport { Plans };\r\nvar Plan = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Plan;\r\n}(GraphQueryableInstance));\r\nexport { Plan };\r\n//# sourceMappingURL=plans.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance } from \"./graphqueryable\";\r\nimport { BlobParser, BufferParser } from \"@pnp/odata\";\r\nvar Photo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Photo, _super);\r\n    function Photo(baseUrl, path) {\r\n        if (path === void 0) { path = \"photo\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BufferParser());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    return Photo;\r\n}(GraphQueryableInstance));\r\nexport { Photo };\r\n//# sourceMappingURL=photos.js.map","import * as tslib_1 from \"tslib\";\r\nimport { graph, } from \"./rest\";\r\nimport { GroupType, } from \"./groups\";\r\nimport { GraphQueryableInstance, } from \"./graphqueryable\";\r\nimport { GraphEndpoints, } from \"./types\";\r\nimport { ODataDefaultParser, } from \"@pnp/odata\";\r\nimport { jsS, } from \"@pnp/common\";\r\nvar Teams = /** @class */ (function () {\r\n    function Teams() {\r\n    }\r\n    /**\r\n     * Creates a new team and associated Group with the given information\r\n     */\r\n    Teams.prototype.create = function (name, description, teamProperties) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (teamProperties === void 0) { teamProperties = {}; }\r\n        var groupProps = description && description.length > 0 ? { description: description } : {};\r\n        return graph.groups.add(name, name, GroupType.Office365, groupProps).then(function (gar) {\r\n            return gar.group.createTeam(teamProperties).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    group: gar.group,\r\n                    team: new Team(gar.group),\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return Teams;\r\n}());\r\nexport { Teams };\r\n/**\r\n * Represents a Microsoft Team\r\n */\r\nvar Team = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Team, _super);\r\n    function Team(baseUrl, path) {\r\n        if (path === void 0) { path = \"team\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Updates this team instance's properties\r\n     *\r\n     * @param properties The set of properties to update\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.update = function (properties) {\r\n        var _this = this;\r\n        return this.clone(Team, \"\").setEndpoint(GraphEndpoints.Beta).patchCore({\r\n            body: jsS(properties),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    Team.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.clone(Team, \"\").setEndpoint(GraphEndpoints.Beta).getCore(parser, options);\r\n    };\r\n    return Team;\r\n}(GraphQueryableInstance));\r\nexport { Team };\r\n//# sourceMappingURL=teams.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Represents a onenote entity\r\n */\r\nvar OneNote = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OneNote, _super);\r\n    function OneNote(baseUrl, path) {\r\n        if (path === void 0) { path = \"onenote\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(OneNote.prototype, \"notebooks\", {\r\n        get: function () {\r\n            return new Notebooks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"pages\", {\r\n        get: function () {\r\n            return new Pages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return OneNote;\r\n}(GraphQueryableInstance));\r\nexport { OneNote };\r\n/**\r\n * Describes a collection of Notebook objects\r\n *\r\n */\r\nvar Notebooks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebooks, _super);\r\n    function Notebooks(baseUrl, path) {\r\n        if (path === void 0) { path = \"notebooks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a notebook instance by id\r\n     *\r\n     * @param id Notebook id\r\n     */\r\n    Notebooks.prototype.getById = function (id) {\r\n        return new Notebook(this, id);\r\n    };\r\n    /**\r\n     * Create a new notebook as specified in the request body.\r\n     *\r\n     * @param displayName Notebook display name\r\n     */\r\n    Notebooks.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                notebook: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Notebooks;\r\n}(GraphQueryableCollection));\r\nexport { Notebooks };\r\n/**\r\n * Describes a notebook instance\r\n *\r\n */\r\nvar Notebook = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebook, _super);\r\n    function Notebook(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Notebook.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Notebook;\r\n}(GraphQueryableInstance));\r\nexport { Notebook };\r\n/**\r\n * Describes a collection of Sections objects\r\n *\r\n */\r\nvar Sections = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sections, _super);\r\n    function Sections(baseUrl, path) {\r\n        if (path === void 0) { path = \"sections\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a section instance by id\r\n     *\r\n     * @param id Section id\r\n     */\r\n    Sections.prototype.getById = function (id) {\r\n        return new Section(this, id);\r\n    };\r\n    /**\r\n     * Adds a new section\r\n     *\r\n     * @param displayName New section display name\r\n     */\r\n    Sections.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                section: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Sections;\r\n}(GraphQueryableCollection));\r\nexport { Sections };\r\n/**\r\n * Describes a sections instance\r\n *\r\n */\r\nvar Section = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Section, _super);\r\n    function Section(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Section;\r\n}(GraphQueryableInstance));\r\nexport { Section };\r\n/**\r\n * Describes a collection of Pages objects\r\n *\r\n */\r\nvar Pages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Pages, _super);\r\n    function Pages(baseUrl, path) {\r\n        if (path === void 0) { path = \"pages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Pages;\r\n}(GraphQueryableCollection));\r\nexport { Pages };\r\n//# sourceMappingURL=onenote.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Contacts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contacts, _super);\r\n    function Contacts(baseUrl, path) {\r\n        if (path === void 0) { path = \"contacts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Contacts.prototype.getById = function (id) {\r\n        return new Contact(this, id);\r\n    };\r\n    /**\r\n    * Create a new Contact for the user.\r\n    *\r\n    * @param givenName The contact's given name.\r\n    * @param surName The contact's surname.\r\n    * @param emailAddresses The contact's email addresses.\r\n    * @param businessPhones The contact's business phone numbers.\r\n    * @param additionalProperties A plain object collection of additional properties you want to set on the new contact\r\n    */\r\n    Contacts.prototype.add = function (givenName, surName, emailAddresses, businessPhones, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            businessPhones: businessPhones,\r\n            emailAddresses: emailAddresses,\r\n            givenName: givenName,\r\n            surName: surName,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contact: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return Contacts;\r\n}(GraphQueryableCollection));\r\nexport { Contacts };\r\nvar Contact = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contact, _super);\r\n    function Contact() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this contact\r\n     */\r\n    Contact.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact object\r\n     *\r\n     * @param properties Set of properties of this contact to update\r\n     */\r\n    Contact.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Contact;\r\n}(GraphQueryableInstance));\r\nexport { Contact };\r\nvar ContactFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolders, _super);\r\n    function ContactFolders(baseUrl, path) {\r\n        if (path === void 0) { path = \"contactFolders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    ContactFolders.prototype.getById = function (id) {\r\n        return new ContactFolder(this, id);\r\n    };\r\n    /**\r\n     * Create a new Contact Folder for the user.\r\n     *\r\n     * @param displayName The folder's display name.\r\n     * @param parentFolderId The ID of the folder's parent folder.\r\n     */\r\n    ContactFolders.prototype.add = function (displayName, parentFolderId) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n            parentFolderId: parentFolderId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contactFolder: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return ContactFolders;\r\n}(GraphQueryableCollection));\r\nexport { ContactFolders };\r\nvar ContactFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolder, _super);\r\n    function ContactFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContactFolder.prototype, \"contacts\", {\r\n        /**\r\n         * Gets the contacts in this contact folder\r\n         */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContactFolder.prototype, \"childFolders\", {\r\n        /**\r\n        * Gets the contacts in this contact folder\r\n        */\r\n        get: function () {\r\n            return new ChildFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this contact folder\r\n     */\r\n    ContactFolder.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact folder\r\n     *\r\n     * @param properties Set of properties of this contact folder to update\r\n     */\r\n    ContactFolder.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return ContactFolder;\r\n}(GraphQueryableInstance));\r\nexport { ContactFolder };\r\nvar ChildFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChildFolders, _super);\r\n    function ChildFolders(baseUrl, path) {\r\n        if (path === void 0) { path = \"childFolders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    ChildFolders.prototype.getById = function (id) {\r\n        return new ContactFolder(this, id);\r\n    };\r\n    /**\r\n     * Create a new Child Folder in Contact folder.\r\n     *\r\n     * @param displayName The folder's display name.\r\n     * @param parentFolderId The ID of the folder's parent folder.\r\n     */\r\n    ChildFolders.prototype.add = function (displayName, parentFolderId) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n            parentFolderId: parentFolderId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contactFolder: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return ChildFolders;\r\n}(GraphQueryableInstance));\r\nexport { ChildFolders };\r\n//# sourceMappingURL=contacts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance } from \"./graphqueryable\";\r\nimport { OneNote } from \"./onenote\";\r\nimport { Contacts, ContactFolders } from \"./contacts\";\r\nvar Me = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Me, _super);\r\n    function Me(baseUrl, path) {\r\n        if (path === void 0) { path = \"me\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Me.prototype, \"onenote\", {\r\n        /**\r\n        * The onenote associated with me\r\n        */\r\n        get: function () {\r\n            return new OneNote(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Me.prototype, \"contacts\", {\r\n        /**\r\n        * The Contacts associated with the user\r\n        */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Me.prototype, \"contactFolders\", {\r\n        /**\r\n         * The Contact Folders associated with the user\r\n         */\r\n        get: function () {\r\n            return new ContactFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Me;\r\n}(GraphQueryableInstance));\r\nexport { Me };\r\n//# sourceMappingURL=me.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Contacts, ContactFolders } from \"./contacts\";\r\nimport { OneNote } from \"./onenote\";\r\n/**\r\n * Describes a collection of Users objects\r\n *\r\n */\r\nvar Users = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Users, _super);\r\n    function Users(baseUrl, path) {\r\n        if (path === void 0) { path = \"users\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection using the specified id\r\n     *\r\n     * @param id Id of the user to get from this collection\r\n     */\r\n    Users.prototype.getById = function (id) {\r\n        return new User(this, id);\r\n    };\r\n    return Users;\r\n}(GraphQueryableCollection));\r\nexport { Users };\r\n/**\r\n * Represents a user entity\r\n */\r\nvar User = /** @class */ (function (_super) {\r\n    tslib_1.__extends(User, _super);\r\n    function User() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(User.prototype, \"onenote\", {\r\n        /**\r\n        * The onenote associated with me\r\n        */\r\n        get: function () {\r\n            return new OneNote(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"contacts\", {\r\n        /**\r\n        * The Contacts associated with the user\r\n        */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"contactFolders\", {\r\n        /**\r\n        * The Contact Folders associated with the user\r\n        */\r\n        get: function () {\r\n            return new ContactFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return User;\r\n}(GraphQueryableInstance));\r\nexport { User };\r\n//# sourceMappingURL=users.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryable } from \"./graphqueryable\";\r\nimport { setup as _setup, } from \"./config/graphlibconfig\";\r\nimport { Groups } from \"./groups\";\r\nimport { Me } from \"./me\";\r\nimport { Teams } from \"./teams\";\r\nimport { Users } from \"./users\";\r\nvar GraphRest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphRest, _super);\r\n    function GraphRest(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"teams\", {\r\n        get: function () {\r\n            return new Teams();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"me\", {\r\n        get: function () {\r\n            return new Me(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"users\", {\r\n        get: function () {\r\n            return new Users(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    return GraphRest;\r\n}(GraphQueryable));\r\nexport { GraphRest };\r\nexport var graph = new GraphRest(\"v1.0\");\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { objectDefinedNotNull, extend, jsS } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"./config/graphlibconfig\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphBatch, _super);\r\n    function GraphBatch(batchUrl) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/beta/$batch\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        return _this;\r\n    }\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        var client = new GraphHttpClient();\r\n        var batchRequest = {\r\n            requests: this.formatRequests(),\r\n        };\r\n        var batchOptions = {\r\n            body: jsS(batchRequest),\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            method: \"POST\",\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // let nextLinkFlag = false;\r\n        return client.fetch(this.batchUrl, batchOptions)\r\n            .then(function (r) { return r.json(); })\r\n            .then(this._parseResponse)\r\n            .then(function (parsedResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return parsedResponse.responses.reduce(function (chain, response, index) {\r\n                var request = _this.requests[index];\r\n                if (objectDefinedNotNull(request)) {\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }\r\n                else {\r\n                    // do we have a next url? if no this is an error\r\n                    if (parsedResponse.nextLink) {\r\n                        throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                    }\r\n                    // nextLinkFlag = true;\r\n                    // keep the chain moving, but don't add anything for this request yet\r\n                    // here we need to process the next link - so what do we do?\r\n                    // need to append a .then()\r\n                    // TODO::\r\n                    return chain;\r\n                }\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    GraphBatch.prototype.formatRequests = function () {\r\n        return this.requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: reqInfo.url,\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (GraphRuntimeConfig.headers !== undefined && GraphRuntimeConfig.headers !== null) {\r\n                headers = extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (reqInfo.options !== undefined) {\r\n                // merge per request headers\r\n                if (reqInfo.options.headers !== undefined && reqInfo.options.headers !== null) {\r\n                    headers = extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (reqInfo.options.body !== undefined && reqInfo.options.body !== null) {\r\n                    requestFragment = extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.prototype._parseResponse = function (graphResponse) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(_this.requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(null, {\r\n                        headers: response.headers,\r\n                        status: response.status,\r\n                    });\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    return GraphBatch;\r\n}(ODataBatch));\r\nexport { GraphBatch };\r\n//# sourceMappingURL=batch.js.map","import { extend } from \"@pnp/common\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.3\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.3\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TemplateFileType, File } from \"./files\";\r\nimport { Item } from \"./items\";\r\nimport { extend, combine, getGUID, getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nexport { CanvasControl };\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nexport { CanvasColumn };\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nexport { ClientSidePart };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.3\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { isUrlAbsolute, combine, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!isUrlAbsolute(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!isUrlAbsolute(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = combine(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map","import { Logger } from \"@pnp/logging\";\r\nimport { PnPClientStorage, dateAdd, combine, getCtxCallback, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, } from \"@pnp/common\";\r\nimport { Settings } from \"@pnp/config-store\";\r\nimport { graph as _graph } from \"@pnp/graph\";\r\nimport { sp as _sp } from \"@pnp/sp-addinhelpers\";\r\nimport { setup as _setup } from \"./config/pnplibconfig\";\r\n/**\r\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\r\n */\r\n/**\r\n * Re-export everything from the dependencies to match the previous pattern\r\n */\r\nexport * from \"@pnp/sp\";\r\nexport * from \"@pnp/graph\";\r\nexport * from \"@pnp/common\";\r\nexport * from \"@pnp/logging\";\r\nexport * from \"@pnp/config-store\";\r\nexport * from \"@pnp/odata\";\r\n/**\r\n * Utility methods\r\n */\r\nexport var util = {\r\n    combine: combine,\r\n    dateAdd: dateAdd,\r\n    extend: extend,\r\n    getAttrValueFromString: getAttrValueFromString,\r\n    getCtxCallback: getCtxCallback,\r\n    getGUID: getGUID,\r\n    getRandomString: getRandomString,\r\n    isArray: isArray,\r\n    isFunc: isFunc,\r\n    isUrlAbsolute: isUrlAbsolute,\r\n    objectDefinedNotNull: objectDefinedNotNull,\r\n    sanitizeGuid: sanitizeGuid,\r\n    stringIsNullOrEmpty: stringIsNullOrEmpty,\r\n};\r\n/**\r\n * Provides access to the SharePoint REST interface\r\n */\r\nexport var sp = _sp;\r\n/**\r\n * Provides access to the Microsoft Graph REST interface\r\n */\r\nexport var graph = _graph;\r\n/**\r\n * Provides access to local and session storage\r\n */\r\nexport var storage = new PnPClientStorage();\r\n/**\r\n * Global configuration instance to which providers can be added\r\n */\r\nexport var config = new Settings();\r\n/**\r\n * Global logging instance to which subscribers can be registered and messages written\r\n */\r\nexport var log = Logger;\r\n/**\r\n * Allows for the configuration of the library\r\n */\r\nexport var setup = _setup;\r\n// /**\r\n//  * Expose a subset of classes from the library for public consumption\r\n//  */\r\n// creating this class instead of directly assigning to default fixes issue #116\r\nvar Def = {\r\n    /**\r\n     * Global configuration instance to which providers can be added\r\n     */\r\n    config: config,\r\n    /**\r\n     * Provides access to the Microsoft Graph REST interface\r\n     */\r\n    graph: graph,\r\n    /**\r\n     * Global logging instance to which subscribers can be registered and messages written\r\n     */\r\n    log: log,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    setup: setup,\r\n    /**\r\n     * Provides access to the REST interface\r\n     */\r\n    sp: sp,\r\n    /**\r\n     * Provides access to local and session storage\r\n     */\r\n    storage: storage,\r\n    /**\r\n     * Utility methods\r\n     */\r\n    util: util,\r\n};\r\n/**\r\n * Enables use of the import pnp from syntax\r\n */\r\nexport default Def;\r\n//# sourceMappingURL=pnpjs.js.map","import { RuntimeConfig } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n//# sourceMappingURL=pnplibconfig.js.map","export * from \"./src/pnpjs\";\r\nimport pnp from \"./src/pnpjs\";\r\nexport default pnp;\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}