{"version":3,"file":"common.es5.umd.js","sources":["../../../../node_modules/rollup-plugin-node-globals/src/global.js","../../../../packages/common/src/util.ts","../../../../packages/common/src/netutil.ts","../../../../packages/common/src/adalclient.ts","../../../../packages/common/src/collections.ts","../../../../packages/common/src/libconfig.ts","../../../../packages/common/src/storage.ts"],"sourcesContent":["export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","import { TypedHash } from \"./collections\";\n\n/**\n * Gets a callback function which will maintain context across async calls.\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n *\n * @param context The object that will be the 'this' value in the callback\n * @param method The method to which we will apply the context and parameters\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n */\nexport function getCtxCallback(context: any, method: Function, ...params: any[]): Function {\n    return function () {\n        method.apply(context, params);\n    };\n}\n\nexport type DateAddInterval = \"year\" | \"quarter\" | \"month\" | \"week\" | \"day\" | \"hour\" | \"minute\" | \"second\";\n\n/**\n * Adds a value to a date\n *\n * @param date The date to which we will add units, done in local time\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n * @param units The amount to add to date of the given interval\n *\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n */\nexport function dateAdd(date: Date, interval: DateAddInterval, units: number): Date | undefined {\n    let ret: Date | undefined = new Date(date); // don't change original date\n    switch (interval.toLowerCase()) {\n        case \"year\": ret.setFullYear(ret.getFullYear() + units); break;\n        case \"quarter\": ret.setMonth(ret.getMonth() + 3 * units); break;\n        case \"month\": ret.setMonth(ret.getMonth() + units); break;\n        case \"week\": ret.setDate(ret.getDate() + 7 * units); break;\n        case \"day\": ret.setDate(ret.getDate() + units); break;\n        case \"hour\": ret.setTime(ret.getTime() + units * 3600000); break;\n        case \"minute\": ret.setTime(ret.getTime() + units * 60000); break;\n        case \"second\": ret.setTime(ret.getTime() + units * 1000); break;\n        default: ret = undefined; break;\n    }\n    return ret;\n}\n\n/**\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\n *\n * @param paths 0 to n path parts to combine\n */\nexport function combine(...paths: string[]): string {\n\n    return paths\n        .filter(path => !stringIsNullOrEmpty(path))\n        .map(path => path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"))\n        .join(\"/\")\n        .replace(/\\\\/g, \"/\");\n}\n\n/**\n * Gets a random string of chars length\n * \n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\n *\n * @param chars The length of the random string to generate\n */\nexport function getRandomString(chars: number): string {\n    const text = new Array(chars);\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < chars; i++) {\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text.join(\"\");\n}\n\n/**\n * Gets a random GUID value\n *\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n */\n/* tslint:disable no-bitwise */\nexport function getGUID(): string {\n    let d = new Date().getTime();\n    const guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return guid;\n}\n/* tslint:enable */\n\n/**\n * Determines if a given value is a function\n *\n * @param cf The thing to test for functionness\n */\nexport function isFunc(cf: any): boolean {\n    return typeof cf === \"function\";\n}\n\n/**\n * Determines if an object is both defined and not null\n * @param obj Object to test\n */\nexport function objectDefinedNotNull(obj: any): boolean {\n    return typeof obj !== \"undefined\" && obj !== null;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n*/\nexport function isArray(array: any): boolean {\n\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n\n    return array && typeof array.length === \"number\" && array.constructor === Array;\n}\n\n/**\n * Provides functionality to extend the given object by doing a shallow copy\n *\n * @param target The object to which properties will be copied\n * @param source The source object from which properties will be copied\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\n *\n */\nexport function extend<T extends TypedHash<any> = any, S extends TypedHash<any> = any>(target: T, source: S, noOverwrite = false,\n    filter: (propName: string) => boolean = () => true): T & S {\n\n    if (!objectDefinedNotNull(source)) {\n        return <T & S>target;\n    }\n\n    // ensure we don't overwrite things we don't want overwritten\n    const check: (o: any, i: string) => Boolean = noOverwrite ? (o, i) => !(i in o) : () => true;\n\n    // final filter we will use\n    const f = (v: string) => check(target, v) && filter(v);\n\n    return Object.getOwnPropertyNames(source)\n        .filter(f)\n        .reduce((t: any, v: string) => {\n            t[v] = source[v];\n            return t;\n        }, target);\n}\n\n/**\n * Determines if a given url is absolute\n *\n * @param url The url to check to see if it is absolute\n */\nexport function isUrlAbsolute(url: string): boolean {\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\n}\n\n/**\n * Determines if a string is null or empty or undefined\n *\n * @param s The string to test\n */\nexport function stringIsNullOrEmpty(s: string): boolean {\n    return s === undefined || s === null || s.length < 1;\n}\n\n/**\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\n * RegEx special characters they will be escaped in the returned string\n * \n * @param html HTML to search\n * @param attrName The name of the attribute to find\n */\nexport function getAttrValueFromString(html: string, attrName: string): string | null {\n\n    // make the input safe for regex\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    const reg = new RegExp(`${attrName}\\\\s*?=\\\\s*?(\"|')([^\\\\1]*?)\\\\1`, \"i\");\n    const match = reg.exec(html);\n    return match !== null && match.length > 0 ? match[2] : null;\n}\n\n/**\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\n * \n * @param guid The candidate guid\n */\nexport function sanitizeGuid(guid: string): string {\n\n    if (stringIsNullOrEmpty(guid)) {\n        return guid;\n    }\n\n    const matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\n\n    return matches === null ? guid : matches[1];\n}\n\n/**\n * Shorthand for oToS\n * \n * @param o Any type of object\n */\nexport function jsS(o: any): string {\n    return JSON.stringify(o);\n}\n\n/**\n * Shorthand for Object.hasOwnProperty\n * \n * @param o Object to check for\n * @param p Name of the property\n */\nexport function hOP(o: any, p: string): boolean {\n    return Object.hasOwnProperty.call(o, p);\n}\n\n/**\n * Generates a ~unique hash code for this ObjectPathQueue\n * \n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\n */\n// tslint:disable:no-bitwise\nexport function getHashCode(s: string): number {\n    let hash = 0;\n    if (s.length === 0) {\n        return hash;\n    }\n\n    for (let i = 0; i < s.length; i++) {\n        const chr = s.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n}\n// tslint:enable:no-bitwise\n","import { extend, objectDefinedNotNull } from \"./util\";\n\ndeclare var global: { fetch(url: string, options: any): Promise<Response> };\n\nexport interface ConfigOptions {\n    headers?: string[][] | { [key: string]: string } | Headers;\n    mode?: \"navigate\" | \"same-origin\" | \"no-cors\" | \"cors\";\n    credentials?: \"omit\" | \"same-origin\" | \"include\";\n    cache?: \"default\" | \"no-store\" | \"reload\" | \"no-cache\" | \"force-cache\" | \"only-if-cached\";\n}\n\nexport interface FetchOptions extends ConfigOptions {\n    method?: string;\n    body?: any;\n}\n\nexport interface HttpClientImpl {\n    fetch(url: string, options: FetchOptions): Promise<Response>;\n}\n\nexport interface RequestClient {\n    fetch(url: string, options?: FetchOptions): Promise<Response>;\n    fetchRaw(url: string, options?: FetchOptions): Promise<Response>;\n    get(url: string, options?: FetchOptions): Promise<Response>;\n    post(url: string, options?: FetchOptions): Promise<Response>;\n    patch(url: string, options?: FetchOptions): Promise<Response>;\n    delete(url: string, options?: FetchOptions): Promise<Response>;\n}\n\nexport function mergeHeaders(target: Headers, source: any): void {\n    if (source !== undefined && source !== null) {\n        const temp = <any>new Request(\"\", { headers: source });\n        temp.headers.forEach((value: string, name: string) => {\n            target.append(name, value);\n        });\n    }\n}\n\nexport function mergeOptions(target: ConfigOptions, source: ConfigOptions): void {\n\n    if (objectDefinedNotNull(source)) {\n        const headers = extend(target.headers || {}, source.headers!);\n        target = extend(target, source);\n        target.headers = headers;\n    }\n}\n\n/**\n * Makes requests using the global/window fetch API\n */\nexport class FetchClient implements HttpClientImpl {\n    public fetch(url: string, options: FetchOptions): Promise<Response> {\n        return global.fetch(url, options);\n    }\n}\n\n/**\n * Makes requests using the fetch API adding the supplied token to the Authorization header\n */\nexport class BearerTokenFetchClient extends FetchClient {\n\n    constructor(private _token: string | null) {\n        super();\n    }\n\n    public get token() {\n        return this._token || \"\";\n    }\n\n    public set token(token: string) {\n        this._token = token;\n    }\n\n    public fetch(url: string, options: FetchOptions = {}): Promise<Response> {\n\n        const headers = new Headers();\n\n        mergeHeaders(headers, options.headers);\n\n        headers.set(\"Authorization\", `Bearer ${this._token}`);\n\n        options.headers = headers;\n\n        return super.fetch(url, options);\n    }\n}\n","import { BearerTokenFetchClient, FetchOptions } from \"./netutil\";\nimport { ISPFXContext } from \"./spfxcontextinterface\";\nimport { combine, isUrlAbsolute } from \"./util\";\n// @ts-ignore\nimport * as adal from \"adal-angular/dist/adal.min.js\";\n\n/**\n * Azure AD Client for use in the browser\n */\nexport class AdalClient extends BearerTokenFetchClient {\n\n    /**\n     * Our auth context\n     */\n    private static _authContext: adal.AuthenticationContext | null = null;\n\n    /**\n     * Callback used by the adal auth system\n     */\n    private _displayCallback: ((url: string) => void) | null;\n\n    /**\n     * Promise used to ensure the user is logged in\n     */\n    private _loginPromise: Promise<void> | null;\n\n    /**\n     * Creates a new instance of AdalClient\n     * @param clientId Azure App Id\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\n     * @param redirectUri The redirect url used to authenticate the \n     */\n    constructor(public clientId: string, public tenant: string, public redirectUri: string) {\n        super(null);\n        this._displayCallback = null;\n        this._loginPromise = null;\n    }\n\n    /**\n     * Creates a new AdalClient using the values of the supplied SPFx context\n     * \n     * @param spfxContext Current SPFx context\n     * @param clientId Optional client id to use instead of the built-in SPFx id\n     * @description Using this method and the default clientId requires that the features described in\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\n     */\n    public static fromSPFxContext(spfxContext: ISPFXContext | any, cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"): AdalClient {\n\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\n        // this redirectUrl is the page as used by spfx\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\n    }\n\n    /**\n     * Conducts the fetch opertation against the AAD secured resource\n     * \n     * @param url Absolute URL for the request\n     * @param options Any fetch options passed to the underlying fetch implementation\n     */\n    public fetch(url: string, options: FetchOptions): Promise<Response> {\n\n        if (!isUrlAbsolute(url)) {\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\n        }\n\n        // the url we are calling is the resource\n        return this.getToken(this.getResource(url)).then(token => {\n            this.token = token;\n            return super.fetch(url, options);\n        });\n    }\n\n    /**\n     * Gets a token based on the current user\n     * \n     * @param resource The resource for which we are requesting a token\n     */\n    public getToken(resource: string): Promise<string> {\n\n        return new Promise((resolve, reject) => {\n\n            this.ensureAuthContext().then(_ => this.login()).then(_ => {\n\n                AdalClient._authContext.acquireToken(resource, (message: string, token: string) => {\n\n                    if (message) {\n                        return reject(Error(message));\n                    }\n\n                    resolve(token);\n                });\n\n            }).catch(reject);\n        });\n    }\n\n    /**\n     * Ensures we have created and setup the adal AuthenticationContext instance\n     */\n    private ensureAuthContext(): Promise<void> {\n\n        return new Promise(resolve => {\n\n            if (AdalClient._authContext === null) {\n                AdalClient._authContext = adal.inject({\n                    clientId: this.clientId,\n                    displayCall: (url: string) => {\n                        if (this._displayCallback) {\n                            this._displayCallback(url);\n                        }\n                    },\n                    navigateToLoginRequestUrl: false,\n                    redirectUri: this.redirectUri,\n                    tenant: this.tenant,\n                });\n            }\n\n            resolve();\n        });\n    }\n\n    /**\n     * Ensures the current user is logged in\n     */\n    private login(): Promise<void> {\n\n        if (this._loginPromise) {\n            return this._loginPromise;\n        }\n\n        this._loginPromise = new Promise((resolve, reject) => {\n\n            if (AdalClient._authContext.getCachedUser()) {\n                return resolve();\n            }\n\n            this._displayCallback = (url: string) => {\n\n                const popupWindow = window.open(url, \"login\", \"width=483, height=600\");\n\n                if (!popupWindow) {\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\n                }\n\n                if (popupWindow && popupWindow.focus) {\n                    popupWindow.focus();\n                }\n\n                const pollTimer = window.setInterval(() => {\n\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\n                        window.clearInterval(pollTimer);\n                    }\n\n                    try {\n                        if (popupWindow.document.URL.indexOf(this.redirectUri) !== -1) {\n                            window.clearInterval(pollTimer);\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\n                            popupWindow.close();\n                            resolve();\n                        }\n                    } catch (e) {\n                        reject(e);\n                    }\n                }, 30);\n            };\n\n            // this triggers the login process\n            this.ensureAuthContext().then(_ => {\n                (<any>AdalClient._authContext)._loginInProgress = false;\n                AdalClient._authContext.login();\n                this._displayCallback = null;\n            });\n        });\n\n        return this._loginPromise;\n    }\n\n    /**\n     * Parses out the root of the request url to use as the resource when getting the token\n     * \n     * After: https://gist.github.com/jlong/2428561\n     * @param url The url to parse\n     */\n    private getResource(url: string): string {\n        const parser = <HTMLAnchorElement>document.createElement(\"a\");\n        parser.href = url;\n        return `${parser.protocol}//${parser.hostname}`;\n    }\n}\n","import { isFunc } from \"./util\";\n\ndeclare var Object: {\n    entries?: any;\n    keys(o: any): any;\n};\n\n/**\n * Interface defining an object with a known property type\n */\nexport interface TypedHash<T> {\n    [key: string]: T;\n}\n\n/**\n * Used to calculate the object properties, with polyfill if needed\n */\nconst objectEntries: any = isFunc(Object.entries) ? Object.entries : (o: any): [any, any][] => Object.keys(o).map((k: any) => [k, o[k]]);\n\n/**\n * Converts the supplied object to a map\n * \n * @param o The object to map\n */\nexport function objectToMap<K, V>(o: any): Map<K, V> {\n    if (o !== undefined && o !== null) {\n        return new Map(objectEntries(o));\n    }\n    return new Map();\n}\n\n/**\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\n * \n * @param target map into which the other maps are merged\n * @param maps One or more maps to merge into the target \n */\nexport function mergeMaps<K, V>(target: Map<K, V>, ...maps: Map<K, V>[]): Map<K, V> {\n    for (let i = 0; i < maps.length; i++) {\n        maps[i].forEach((v: V, k: K) => {\n            target.set(k, v);\n        });\n    }\n\n    return target;\n}\n","import { TypedHash, mergeMaps, objectToMap } from \"./collections\";\nimport { ISPFXContext } from \"./spfxcontextinterface\";\n\nexport interface LibraryConfiguration {\n\n    /**\n     * Allows caching to be global disabled, default: false\n     */\n    globalCacheDisable?: boolean;\n\n    /**\n     * Defines the default store used by the usingCaching method, default: session\n     */\n    defaultCachingStore?: \"session\" | \"local\";\n\n    /**\n     * Defines the default timeout in seconds used by the usingCaching method, default 30\n     */\n    defaultCachingTimeoutSeconds?: number;\n\n    /**\n     * If true a timeout expired items will be removed from the cache in intervals determined by cacheTimeoutInterval\n     */\n    enableCacheExpiration?: boolean;\n\n    /**\n     * Determines the interval in milliseconds at which the cache is checked to see if items have expired (min: 100)\n     */\n    cacheExpirationIntervalMilliseconds?: number;\n\n    /**\n     * Used to supply the current context from an SPFx webpart to the library\n     */\n    spfxContext?: any;\n}\n\nexport function setup(config: LibraryConfiguration): void {\n    RuntimeConfig.extend(config);\n}\n\n// lable mapping for known config values\nconst s = [\n    \"defaultCachingStore\",\n    \"defaultCachingTimeoutSeconds\",\n    \"globalCacheDisable\",\n    \"enableCacheExpiration\",\n    \"cacheExpirationIntervalMilliseconds\",\n    \"spfxContext\",\n];\n\nexport class RuntimeConfigImpl {\n\n    constructor(private _v = new Map<string, any>()) {\n\n        // setup defaults\n        this._v.set(s[0], \"session\");\n        this._v.set(s[1], 60);\n        this._v.set(s[2], false);\n        this._v.set(s[3], false);\n        this._v.set(s[4], 750);\n        this._v.set(s[5], null);\n    }\n\n    /**\n     * \n     * @param config The set of properties to add to the globa configuration instance\n     */\n    public extend(config: TypedHash<any>): void {\n        this._v = mergeMaps(this._v, objectToMap(config));\n    }\n\n    public get(key: string): any {\n        return this._v.get(key);\n    }\n\n    public get defaultCachingStore(): \"session\" | \"local\" {\n        return this.get(s[0]);\n    }\n\n    public get defaultCachingTimeoutSeconds(): number {\n        return this.get(s[1]);\n    }\n\n    public get globalCacheDisable(): boolean {\n        return this.get(s[2]);\n    }\n\n    public get enableCacheExpiration(): boolean {\n        return this.get(s[3]);\n    }\n\n    public get cacheExpirationIntervalMilliseconds(): number {\n        return this.get(s[4]);\n    }\n\n    public get spfxContext(): ISPFXContext {\n        return this.get(s[5]);\n    }\n}\n\nconst _runtimeConfig = new RuntimeConfigImpl();\n\nexport let RuntimeConfig = _runtimeConfig;\n","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\nimport { RuntimeConfig } from \"./libconfig\";\n\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nexport class PnPClientStorageWrapper implements PnPClientStore {\n\n    /**\n     * True if the wrapped storage is available; otherwise, false\n     */\n    public enabled: boolean;\n\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    constructor(private store: Storage, public defaultTimeoutMinutes = -1) {\n        this.enabled = this.test();\n        // if the cache timeout is enabled call the handler\n        // this will clear any expired items and set the timeout function\n        if (RuntimeConfig.enableCacheExpiration) {\n            this.cacheExpirationHandler();\n        }\n    }\n\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    public get<T>(key: string): T | null {\n\n        if (!this.enabled) {\n            return null;\n        }\n\n        const o = this.store.getItem(key);\n\n        if (!objectDefinedNotNull(o)) {\n            return null;\n        }\n\n        const persistable = JSON.parse(o!);\n\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n\n        } else {\n\n            return persistable.value as T;\n        }\n    }\n\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    public put(key: string, o: any, expire?: Date): void {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    }\n\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    public delete(key: string): void {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    }\n\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    public getOrPut<T>(key: string, getter: () => Promise<T>, expire?: Date): Promise<T> {\n        if (!this.enabled) {\n            return getter();\n        }\n\n        return new Promise((resolve) => {\n\n            const o = this.get<T>(key);\n\n            if (o == null) {\n                getter().then((d) => {\n                    this.put(key, d, expire);\n                    resolve(d);\n                });\n            } else {\n                resolve(o);\n            }\n        });\n    }\n\n    /**\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    public deleteExpired(): Promise<void> {\n\n        return new Promise<void>((resolve, reject) => {\n\n            if (!this.enabled) {\n                resolve();\n            }\n\n            try {\n\n                for (let i = 0; i < this.store.length; i++) {\n                    const key = this.store.key(i);\n                    if (key !== null) {\n                        // test the stored item to see if we stored it\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(<string>this.store.getItem(key))) {\n                            // get those items as get will delete from cache if they are expired\n                            this.get(key);\n                        }\n                    }\n                }\n\n                resolve();\n\n            } catch (e) { reject(e); }\n        });\n    }\n\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    private test(): boolean {\n        const str = \"t\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Creates the persistable to store\n     */\n    private createPersistable(o: any, expire?: Date): string {\n        if (expire === undefined) {\n\n            // ensure we are by default inline with the global library setting\n            let defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n\n        return jsS({ pnp: 1, expiration: expire, value: o });\n    }\n\n    /**\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\n     */\n    private cacheExpirationHandler(): void {\n        this.deleteExpired().then(_ => {\n\n            // call ourself in the future\n            setTimeout(getCtxCallback(this, this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\n        }).catch(e => {\n            console.error(e);\n        });\n    }\n}\n\n/**\n * Interface which defines the operations provided by a client storage object\n */\nexport interface PnPClientStore {\n    /**\n     * True if the wrapped storage is available; otherwise, false\n     */\n    enabled: boolean;\n\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    get(key: string): any;\n\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    put(key: string, o: any, expire?: Date): void;\n\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    delete(key: string): void;\n\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    getOrPut<T>(key: string, getter: () => Promise<T>, expire?: Date): Promise<T>;\n\n    /**\n     * Removes any expired items placed in the store by the pnp library, leaves other items untouched\n     */\n    deleteExpired(): Promise<void>;\n}\n\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nclass MemoryStorage {\n\n    constructor(private _store = new Map<string, any>()) { }\n\n    public get length(): number {\n        return this._store.size;\n    }\n\n    public clear(): void {\n        this._store.clear();\n    }\n\n    public getItem(key: string): any {\n        return this._store.get(key);\n    }\n\n    public key(index: number): string {\n        return Array.from(this._store)[index][0];\n    }\n\n    public removeItem(key: string): void {\n        this._store.delete(key);\n    }\n\n    public setItem(key: string, data: string): void {\n        this._store.set(key, data);\n    }\n\n    [key: string]: any;\n    [index: number]: string;\n}\n\n/**\n * A class that will establish wrappers for both local and session storage\n */\nexport class PnPClientStorage {\n\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    constructor(private _local: PnPClientStore | null = null, private _session: PnPClientStore | null = null) { }\n\n    /**\n     * Provides access to the local storage of the browser\n     */\n    public get local(): PnPClientStore {\n\n        if (this._local === null) {\n            this._local = this.getStore(\"local\");\n        }\n\n        return this._local;\n    }\n\n    /**\n     * Provides access to the session storage of the browser\n     */\n    public get session(): PnPClientStore {\n\n        if (this._session === null) {\n            this._session = this.getStore(\"session\");\n        }\n\n        return this._session;\n    }\n\n    private getStore(name: string): PnPClientStorageWrapper {\n\n        if (name === \"local\") {\n            return new PnPClientStorageWrapper(typeof(localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\n        }\n\n        return new PnPClientStorageWrapper(typeof(sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\n    }\n}\n"],"names":["global","tslib_1.__extends","adal.inject"],"mappings":"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"}