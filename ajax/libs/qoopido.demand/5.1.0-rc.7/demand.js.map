{"version":3,"sources":["demand.js"],"names":["global","setTimeout","clearTimeout","ClassDescriptor","value","writable","configurable","enumerable","__proto__","NULL","validatorIsTypeOf","object","type","validatorIsObject","STRING_OBJECT","validatorIsPositive","STRING_NUMBER","isFinite","Math","floor","validatorIsInstanceOf","module","functionIterate","source","callback","context","property","properties","keys","i","UNDEFINED","call","FALSE","functionToArray","arrayLikeObject","start","end","arrayPrototypeSlice","functionGetTimestamp","Date","functionResolveUrl","url","linkElement","href","functionResolvePath","uri","path","replace","regexMatchParameter","regexIsAbsolutePath","test","regexIsAbsoluteUri","regexMatchBaseUrl","functionResolveId","parameter","match","settings","handler","ClassFailure","message","stack","self","this","ClassLoader","dependency","resolve","response","validate","dfd","reject","ERROR_LOAD","id","singletonEvent","emit","EVENT_POST_REQUEST","status","pattern","regexMatchEmptySearch","matches","weight","load","location","document","createElement","process","invalid","search","EVENT_PRE_REQUEST","ClassXhr","then","validatorIsArray","objectPrototypeToString","functionHash","input","length","charCodeAt","AbstractUuid","uuid","STRING_UNDEFINED","define","functionUuid","functionResolveSourcemaps","replacement","regexMatchSourcemap","exec","protocol","host","pathname","abstractHandler","assignModule","provide","demand","queue","processor","validatorIsSemver","functionMerge","functionDefer","functionIdle","functionEscapeRegex","regexMatchInternal","ClassSemver","singletonCache","ClassWeakmap","ClassPledge","ClassRegistry","ClassDependency","ClassPattern","ClassQueue","ClassProcessor","handlerModule","handlerBundle","handlerComponent","pluginGenie","regexMatchSemver","element","fallback","storage","hasSetImmediate","regexMatchRegex","XMLHttpRequest","XDomainRequest","options","version","cache","timeout","modules","DEMAND_ID","PROVIDE_ID","MODULE_PREFIX","MODULE_PREFIX_ABSTRACT","MODULE_PREFIX_HANDLER","MODULE_PREFIX_PLUGIN","MODULE_PREFIX_FUNCTION","MODULE_PREFIX_VALIDATOR","MOCK_PREFIX","STRING_STRING","STRING_FUNCTION","EVENT_POSTFIX","EVENT_POST_CONFIGURE","EVENT_CACHE","EVENT_CACHE_MISS","EVENT_CACHE_HIT","EVENT_CACHE_EXCEED","EVENT_PRE_RESOLVE","EVENT_PREFIX","EVENT_REQUEST","EVENT_PROCESS","EVENT_PRE_PROCESS","EVENT_POST_PROCESS","EVENT_QUEUE_ENQUEUE","EVENT_QUEUE","ERROR_RESOLVE","arrayPrototype","Array","prototype","slice","arrayPrototypeConcat","concat","Object","toString","objectCreate","create","objectDefineProperty","defineProperty","objectGetOwnPropertyNames","getOwnPropertyNames","objectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","strPrototype","objectDefine","name","functionExtends","names","constructor","e","TypeError","Function","mergeProperties","targetPropertyIsObject","targetProperty","target","arguments","randomize","character","r","random","regex","RegExp","fn","MutationObserver","observe","attributes","setAttribute","addEventListener","event","data","postMessage","onreadystatechange","parentNode","removeChild","body","appendChild","setImmediate","shift","current","requestIdleCallback","eventName","safari","pushNotification","didTimeout","timeRemaining","max","cancelIdleCallback","onVisibilitychange","visibilityState","removeEventListener","push","addListener","events","pointer","split","regexMatchEvent","listener","on","after","filter","Event","item","apply","compareLevel","a","b","temp","parts","parseInt","parse","major","minor","patch","identifier","join","compare","pa","pb","tpa","tpb","compareIdentifier","enabled","indexOf","state","getKey","key","localStorage","getItem","setKey","getState","regexMatchProperties","setState","Cache","clear","expired","bind","STORAGE_PREFIX","STORAGE_SUFFIX_STATE","STORAGE_SUFFIX_VALUE","regexMatchState","supportsLocalStorage","exception","supportsRemainingSpace","cacheDispose","set","get","lifetime","spaceBefore","remainingSpace","Error","error","all","WeakMap","getEntry","entry","delete","has","pledge","index","resolved","count","check","rejected","total","executor","PLEDGE_PENDING","handle","result","PLEDGE_RESOLVED","PLEDGE_REJECTED","catch","always","alwaysListener","resolveListener","rejectListener","defer","isPending","isResolved","isRejected","pledges","race","remove","traverse","depth","indention","setProperty","add","matchInternal","addPending","addResolved","addRejected","list","registry","register","placeholder","mock","PREFIX_INTERNAL","pending","enqueue","isInternal","node","querySelector","regexMatchTrailingSlash","xhr","boundCheckState","readyState","abort","ontimeout","onerror","onabort","onprogress","onload","responseText","getResponseHeader","open","send","updateCacheSettings","updatePatternSettings","updateModuleSettings","dependencies","configure","base","min","onPostRequest","onPreRequest","onPreProcess","isFunction","definition","console","/demand","items","dequeue","extends","HandlerModule","getElementsByTagName","regexMatchType","script","async","text","updateDependencies","HandlerBundle","getType","HandlerComponent","suffix","container","innerHTML","firstElementChild","getAttribute","textContent","matchPattern","prefix","addPattern","resolveBundles","JSON","stringify","bundle","configuration","/demand/handler/bundle","generateConfiguration","bundles","main","parent"],"mappings":"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","file":"demand.js","sourcesContent":["/**! Qoopido.demand 5.1.0-rc.7 | https://github.com/dlueth/qoopido.demand | (c) 2018 Dirk Lueth */\n(function (global, setTimeout, clearTimeout) {\n\t\"use strict\";\n\n\tfunction ClassDescriptor(value, writable, configurable, enumerable) {\n\t\treturn {\n\t\t\t__proto__: NULL,\n\t\t\tvalue: value,\n\t\t\tenumerable: !!enumerable,\n\t\t\tconfigurable: !!configurable,\n\t\t\twritable: !!writable\n\t\t}\n\t}\n\n\tfunction validatorIsTypeOf(object, type) {\n\t\treturn typeof object === type\n\t}\n\n\tfunction validatorIsObject(object) {\n\t\treturn object && validatorIsTypeOf(object, STRING_OBJECT)\n\t}\n\n\tfunction validatorIsPositive(value) {\n\t\treturn validatorIsTypeOf(value, STRING_NUMBER) && isFinite(value) && Math.floor(value) === value && value >= 0\n\t}\n\n\tfunction validatorIsInstanceOf(object, module) {\n\t\treturn object instanceof module\n\t}\n\n\tfunction functionIterate(source, callback, context) {\n\t\tfor (var property, properties = object.keys(source), i = 0;\n\t\t\t(property = properties[i]) !== UNDEFINED; i++)\n\t\t\tif (callback.call(context, property, source[property]) === FALSE) break;\n\t\treturn context\n\t}\n\n\tfunction functionToArray(arrayLikeObject, start, end) {\n\t\treturn arrayPrototypeSlice.call(arrayLikeObject, start, end)\n\t}\n\n\tfunction functionGetTimestamp() {\n\t\treturn +new Date\n\t}\n\n\tfunction functionResolveUrl(url) {\n\t\tlinkElement.href = url;\n\t\treturn linkElement.href\n\t}\n\n\tfunction functionResolvePath(uri, context) {\n\t\tvar path = uri.replace(regexMatchParameter, \"\");\n\t\tif (!regexIsAbsolutePath.test(path) && !regexIsAbsoluteUri.test(path)) path = \"/\" + functionResolveUrl((context && functionResolveUrl(context + \"/../\") || \"/\") + path)\n\t\t\t.replace(regexMatchBaseUrl, \"\");\n\t\treturn path\n\t}\n\n\tfunction functionResolveId(uri, context) {\n\t\tvar parameter = uri.match(regexMatchParameter);\n\t\treturn (parameter && parameter[1] ? \"mock:\" : \"\") + (parameter && parameter[3] || settings.handler) + \"!\" + functionResolvePath(uri, context)\n\t}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction ClassLoader(dependency) {\n\t\tfunction resolve(response, type) {\n\t\t\tif (!type || !dependency.handler.validate || dependency.handler.validate(type)) {\n\t\t\t\tdependency.source = response;\n\t\t\t\tsingletonEvent.emit(EVENT_POST_REQUEST, dependency.type, dependency)\n\t\t\t} else dependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (content-type)\", dependency.id))\n\t\t}\n\n\t\tfunction reject(status) {\n\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + (status ? \" (status)\" : \"\"), dependency.id))\n\t\t}\n\n\t\tfunction load(location) {\n\t\t\tlocation = location || 0;\n\t\t\tdependency.url = document.createElement(\"a\");\n\t\t\tdependency.url.href = pattern ? functionResolveUrl(pattern.process(dependency.path, location)) : dependency.path;\n\t\t\tif (dependency.invalid) dependency.url.search += (regexMatchEmptySearch.test(dependency.url.search) ? \"\" : \"&\") + functionGetTimestamp();\n\t\t\tsingletonEvent.emit(EVENT_PRE_REQUEST, dependency.type, dependency);\n\t\t\tnew ClassXhr(dependency.url)\n\t\t\t\t.then(resolve, pattern ? function () {\n\t\t\t\t\tlocation++;\n\t\t\t\t\tif (pattern.location[location]) load(location);\n\t\t\t\t\telse reject()\n\t\t\t\t} : reject)\n\t\t}\n\t\tvar pattern, regexMatchEmptySearch = /^(?:\\?|)$/;\n\t\tif (!regexIsAbsoluteUri.test(dependency.path)) functionIterate(settings.pattern, function (property, value) {\n\t\t\tvalue.matches(dependency.path) && (!pattern || pattern.weight < value.weight) && (pattern = value)\n\t\t});\n\t\tload()\n\t}\n\n\tfunction validatorIsArray(value) {\n\t\treturn \"[object Array]\" === objectPrototypeToString.call(value)\n\t}\n\n\tfunction functionHash(input) {\n\t\tvar value = 5381,\n\t\t\ti = input.length;\n\t\twhile (i) value = 33 * value ^ input.charCodeAt(--i);\n\t\treturn value >>> 0\n\t}\n\n\tfunction AbstractUuid() {\n\t\tif (validatorIsTypeOf(this.uuid, STRING_UNDEFINED)) this.define(\"uuid\", functionUuid());\n\t\treturn this\n\t}\n\n\tfunction functionResolveSourcemaps(url, source) {\n\t\tvar match, replacement;\n\t\twhile (match = regexMatchSourcemap.exec(source)) {\n\t\t\tlinkElement.href = url;\n\t\t\tif (regexIsAbsoluteUri.test(match[2])) replacement = linkElement.protocol + \"//\" + linkElement.host + match[3];\n\t\t\telse {\n\t\t\t\tlinkElement.pathname += \"/../\" + match[3];\n\t\t\t\treplacement = linkElement.protocol + \"//\" + linkElement.host + linkElement.pathname\n\t\t\t}\n\t\t\tsource = source.replace(match[0], match[1] + \" \" + match[2] + \"=\" + replacement + \".map\" + (match[4] ? \" \" + match[4] : \"\"))\n\t\t}\n\t\treturn source\n\t}\n\n\tfunction abstractHandler() {}\n\n\tfunction ClassFailure(message, module, stack) {\n\t\tvar self = this;\n\t\tself.message = message;\n\t\tmodule && (self.module = module);\n\t\tstack && (self.stack = functionToArray(stack));\n\t\treturn self\n\t}\n\n\tfunction assignModule(id, module) {\n\t\tprovide(id, function () {\n\t\t\treturn module\n\t\t})\n\t}\n\tvar demand, provide, queue, processor, validatorIsSemver, functionMerge, functionUuid, functionDefer, functionIdle, singletonEvent, functionEscapeRegex, regexIsAbsoluteUri, regexIsAbsolutePath, regexMatchSourcemap, regexMatchBaseUrl, regexMatchInternal, regexMatchParameter, ClassSemver, singletonCache, ClassWeakmap, ClassPledge, ClassRegistry, ClassDependency, ClassPattern, ClassXhr, ClassQueue, ClassProcessor, handlerModule, handlerBundle, handlerComponent, pluginGenie, document = global.document,\n\t\toptions = \"demand\" in global && global.demand,\n\t\tsettings = {\n\t\t\tversion: \"1.0.0\",\n\t\t\tcache: {},\n\t\t\ttimeout: 8e3,\n\t\t\tpattern: {},\n\t\t\tmodules: {},\n\t\t\thandler: \"module\"\n\t\t},\n\t\tDEMAND_ID = \"demand\",\n\t\tPROVIDE_ID = \"provide\",\n\t\tPATH_ID = \"path\",\n\t\tMODULE_PREFIX = \"/\" + DEMAND_ID + \"/\",\n\t\tMODULE_PREFIX_ABSTRACT = MODULE_PREFIX + \"abstract/\",\n\t\tMODULE_PREFIX_HANDLER = MODULE_PREFIX + \"handler/\",\n\t\tMODULE_PREFIX_PLUGIN = MODULE_PREFIX + \"plugin/\",\n\t\tMODULE_PREFIX_FUNCTION = MODULE_PREFIX + \"function/\",\n\t\tMODULE_PREFIX_VALIDATOR = MODULE_PREFIX + \"validator/\",\n\t\tMOCK_PREFIX = \"mock:\",\n\t\tNULL = null,\n\t\tUNDEFINED = void 0,\n\t\tFALSE = false,\n\t\tTRUE = true,\n\t\tSTRING_UNDEFINED = \"undefined\",\n\t\tSTRING_STRING = \"string\",\n\t\tSTRING_BOOLEAN = \"boolean\",\n\t\tSTRING_OBJECT = \"object\",\n\t\tSTRING_FUNCTION = \"function\",\n\t\tSTRING_NUMBER = \"number\",\n\t\tEVENT_PREFIX = \"pre\",\n\t\tEVENT_POSTFIX = \"post\",\n\t\tEVENT_CONFIGURE = \"Configure\",\n\t\tEVENT_PRE_CONFIGURE = EVENT_PREFIX + EVENT_CONFIGURE,\n\t\tEVENT_POST_CONFIGURE = EVENT_POSTFIX + EVENT_CONFIGURE,\n\t\tEVENT_CACHE = \"cache\",\n\t\tEVENT_CACHE_MISS = EVENT_CACHE + \"Miss\",\n\t\tEVENT_CACHE_HIT = EVENT_CACHE + \"Hit\",\n\t\tEVENT_CACHE_CLEAR = EVENT_CACHE + \"Clear\",\n\t\tEVENT_CACHE_EXCEED = EVENT_CACHE + \"Exceed\",\n\t\tEVENT_PRE_CACHE = EVENT_PREFIX + \"Cache\",\n\t\tEVENT_POST_CACHE = EVENT_POSTFIX + \"Cache\",\n\t\tEVENT_RESOLVE = \"Resolve\",\n\t\tEVENT_PRE_RESOLVE = EVENT_PREFIX + EVENT_RESOLVE,\n\t\tEVENT_POST_RESOLVE = EVENT_POSTFIX + EVENT_RESOLVE,\n\t\tEVENT_REQUEST = \"Request\",\n\t\tEVENT_PRE_REQUEST = EVENT_PREFIX + EVENT_REQUEST,\n\t\tEVENT_POST_REQUEST = EVENT_POSTFIX + EVENT_REQUEST,\n\t\tEVENT_PROCESS = \"Process\",\n\t\tEVENT_PRE_PROCESS = EVENT_PREFIX + EVENT_PROCESS,\n\t\tEVENT_POST_PROCESS = EVENT_POSTFIX + EVENT_PROCESS,\n\t\tEVENT_QUEUE = \"queue\",\n\t\tEVENT_QUEUE_ENQUEUE = EVENT_QUEUE + \"Enqueue\",\n\t\tEVENT_QUEUE_DEQUEUE = EVENT_QUEUE + \"Dequeue\",\n\t\tERROR_LOAD = \"error loading\",\n\t\tERROR_PROVIDE = \"error providing\",\n\t\tERROR_RESOLVE = \"error resolving\",\n\t\tERROR_PROVIDE_ANONYMOUS = \"unspecified anonymous provide\",\n\t\tarrayPrototype = Array.prototype,\n\t\tarrayPrototypeSlice = arrayPrototype.slice,\n\t\tarrayPrototypeConcat = arrayPrototype.concat,\n\t\tobject = Object,\n\t\tobjectPrototypeToString = object.prototype.toString,\n\t\tobjectCreate = object.create,\n\t\tobjectDefineProperty = object.defineProperty,\n\t\tobjectGetOwnPropertyNames = object.getOwnPropertyNames,\n\t\tobjectGetOwnPropertyDescriptor = object.getOwnPropertyDescriptor,\n\t\tlinkElement = document.createElement(\"a\");\n\t(function (strPrototype) {\n\t\tfunction objectDefine(name, value, writable, configurable, enumerable) {\n\t\t\tobjectDefineProperty(this, name, new ClassDescriptor(value, writable, configurable, enumerable))\n\t\t}\n\n\t\tfunction functionExtends(source) {\n\t\t\tfor (var property, self = this, prototype = self[strPrototype], names = objectGetOwnPropertyNames(prototype), properties = {\n\t\t\t\t\tconstructor: new ClassDescriptor(self, TRUE, TRUE)\n\t\t\t\t}, i = 0;\n\t\t\t\t(property = names[i]) && !properties[property]; i++) properties[property] = objectGetOwnPropertyDescriptor(prototype, property);\n\t\t\ttry {\n\t\t\t\tself[strPrototype] = objectCreate(source[strPrototype] || source, properties)\n\t\t\t} catch (e) {}\n\t\t\tif (self[strPrototype] === prototype) throw new TypeError(\"Unable to extend, prototype is not writable\");\n\t\t\treturn self\n\t\t}\n\t\tobjectDefine.call(Object.prototype, \"define\", objectDefine);\n\t\tobjectDefine.call(global.Object.prototype, \"define\", objectDefine);\n\t\tFunction.prototype.define(\"extends\", functionExtends);\n\t\tglobal.Function.prototype.define(\"extends\", functionExtends)\n\t})(\"prototype\");\n\tvalidatorIsSemver = function () {\n\t\tvar regexMatchSemver = /^\\bv?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)(?:-[\\da-z-]+(?:\\.[\\da-z-]+)*)?(?:\\+[\\da-z-]+(?:\\.[\\da-z-]+)*)?\\b$/i;\n\t\treturn function (value) {\n\t\t\treturn validatorIsTypeOf(value, STRING_STRING) && regexMatchSemver.test(value)\n\t\t}\n\t}();\n\tfunctionMerge = function () {\n\t\tfunction mergeProperties(property, value) {\n\t\t\tvar targetPropertyIsObject, targetProperty = this[property];\n\t\t\tif (value !== UNDEFINED)\n\t\t\t\tif (validatorIsObject(value)) {\n\t\t\t\t\ttargetPropertyIsObject = validatorIsObject(targetProperty);\n\t\t\t\t\tif (value.length !== UNDEFINED) targetProperty = targetPropertyIsObject && targetProperty.length !== UNDEFINED ? targetProperty : [];\n\t\t\t\t\telse targetProperty = targetPropertyIsObject && targetProperty.length === UNDEFINED ? targetProperty : {};\n\t\t\t\t\tthis[property] = functionMerge(targetProperty, value)\n\t\t\t\t} else this[property] = value\n\t\t}\n\t\treturn function () {\n\t\t\tfor (var properties, target = arguments[0], i = 1;\n\t\t\t\t(properties = arguments[i]) !== UNDEFINED; i++) functionIterate(properties, mergeProperties, target);\n\t\t\treturn target\n\t\t}\n\t}();\n\tfunctionUuid = function () {\n\t\tfunction randomize(character) {\n\t\t\tvar r = 16 * Math.random() | 0;\n\t\t\treturn (\"x\" === character ? r : 3 & r | 8)\n\t\t\t\t.toString(16)\n\t\t}\n\t\tvar regex = new RegExp(\"[xy]\", \"g\");\n\t\treturn function () {\n\t\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(regex, randomize)\n\t\t}\n\t}();\n\tfunctionDefer = function () {\n\t\tvar element, fallback, hasSetImmediate = \"setImmediate\" in global;\n\t\tif (\"MutationObserver\" in global) return function (fn) {\n\t\t\telement = document.createElement(\"div\");\n\t\t\tnew MutationObserver(function () {\n\t\t\t\t\tfn()\n\t\t\t\t})\n\t\t\t\t.observe(element, {\n\t\t\t\t\tattributes: TRUE\n\t\t\t\t});\n\t\t\telement.setAttribute(\"i\", \"1\")\n\t\t};\n\t\tif (!hasSetImmediate && \"postMessage\" in global && !(\"importScripts\" in global) && \"addEventListener\" in global) return function () {\n\t\t\tfunction onMessage(event) {\n\t\t\t\tvar fn;\n\t\t\t\tif (event.source === global && event.data && (fn = storage[event.data])) {\n\t\t\t\t\tfn();\n\t\t\t\t\tdelete storage[event.data]\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar storage = {};\n\t\t\tglobal.addEventListener(\"message\", onMessage, FALSE);\n\t\t\treturn function (fn) {\n\t\t\t\tvar uuid = functionUuid();\n\t\t\t\tstorage[uuid] = fn;\n\t\t\t\tglobal.postMessage(uuid, \"*\")\n\t\t\t}\n\t\t}();\n\t\tif (!hasSetImmediate && \"onreadystatechange\" in (element = document.createElement(\"script\"))) return function (fn) {\n\t\t\telement.onreadystatechange = function () {\n\t\t\t\telement.onreadystatechange = NULL;\n\t\t\t\telement.parentNode.removeChild(element);\n\t\t\t\tfn()\n\t\t\t};\n\t\t\tdocument.body.appendChild(element)\n\t\t};\n\t\tfallback = hasSetImmediate ? setImmediate : setTimeout;\n\t\treturn function (fn) {\n\t\t\tfallback(fn)\n\t\t}\n\t}();\n\tfunctionIdle = function () {\n\t\tfunction onVisibilitychange(event) {\n\t\t\tvar fn;\n\t\t\tif (queue.length && (\"visibilitychange\" !== event.type || \"hidden\" === document.visibilityState)) {\n\t\t\t\tglobal.removeEventListener(eventName, onVisibilitychange, TRUE);\n\t\t\t\tcurrent = cancelIdleCallback(current);\n\t\t\t\tdo {\n\t\t\t\t\tfn && fn()\n\t\t\t\t} while (fn = queue.shift())\n\t\t\t}\n\t\t}\n\n\t\tfunction requestIdleCallbackShim(fn) {\n\t\t\tvar start = +new Date;\n\t\t\treturn setTimeout(function () {\n\t\t\t\tfn({\n\t\t\t\t\tdidTimeout: FALSE,\n\t\t\t\t\ttimeRemaining: function () {\n\t\t\t\t\t\treturn Math.max(0, 50 - (+new Date - start))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tfunction cancelIdleCallbackShim(id) {\n\t\t\tclearTimeout(id)\n\t\t}\n\n\t\tfunction process() {\n\t\t\tqueue.shift()();\n\t\t\tqueue.length && (current = requestIdleCallback(process))\n\t\t}\n\t\tvar current, eventName = \"object\" === typeof global.safari && global.safari.pushNotification ? \"beforeunload\" : \"visibilitychange\",\n\t\t\trequestIdleCallback = global.requestIdleCallback || requestIdleCallbackShim,\n\t\t\tcancelIdleCallback = global.cancelIdleCallback || cancelIdleCallbackShim,\n\t\t\tqueue = [];\n\t\tglobal.addEventListener(eventName, onVisibilitychange, TRUE);\n\t\treturn function (fn) {\n\t\t\tqueue.push(fn);\n\t\t\t!current && queue.length && (current = requestIdleCallback(process))\n\t\t}\n\t}();\n\tsingletonEvent = function () {\n\t\tfunction addListener(type, events, callback) {\n\t\t\tvar event, pointer;\n\t\t\tif (validatorIsTypeOf(events, STRING_STRING) && validatorIsTypeOf(callback, STRING_FUNCTION)) {\n\t\t\t\tevents = events.split(\" \");\n\t\t\t\twhile (event = events.shift()) {\n\t\t\t\t\tevent = event.split(\":\");\n\t\t\t\t\tif (regexMatchEvent.test(event[0])) {\n\t\t\t\t\t\t(listener[event[0]] || (listener[event[0]] = {\n\t\t\t\t\t\t\ton: [],\n\t\t\t\t\t\t\tafter: []\n\t\t\t\t\t\t}))[type].push({\n\t\t\t\t\t\t\tcallback: callback,\n\t\t\t\t\t\t\tfilter: event[1]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (type === TYPE_ON && event[0] === EVENT_POST_CONFIGURE && (pointer = settings.modules[event[1]])) callback(pointer)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction Event() {}\n\t\tvar TYPE_ON = \"on\",\n\t\t\tTYPE_AFTER = \"after\",\n\t\t\tregexMatchEvent = /^cache(Miss|Hit|Clear|Exceed)|queue(En|De)queue|(pre|post)(Resolve|Configure|Request|Process|Cache)$/,\n\t\t\tlistener = {};\n\t\tEvent.prototype = {\n\t\t\temit: function (event, filter) {\n\t\t\t\tvar parameter, i, item, pointer = listener[event];\n\t\t\t\tif (pointer) {\n\t\t\t\t\tparameter = functionToArray(arguments, 2);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_ON][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter);\n\t\t\t\t\tfor (i = 0; item = pointer[TYPE_AFTER][i]; i++)\n\t\t\t\t\t\tif (!item.filter || item.filter === filter) item.callback.apply(NULL, parameter)\n\t\t\t\t}\n\t\t\t\treturn this\n\t\t\t},\n\t\t\ton: function (events, callback) {\n\t\t\t\taddListener(TYPE_ON, events, callback);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tafter: function (events, callback) {\n\t\t\t\taddListener(TYPE_AFTER, events, callback);\n\t\t\t\treturn this\n\t\t\t}\n\t\t};\n\t\treturn new Event\n\t}();\n\tfunctionEscapeRegex = function () {\n\t\tvar regexMatchRegex = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\t\treturn function (value) {\n\t\t\treturn value.replace(regexMatchRegex, \"\\\\$&\")\n\t\t}\n\t}();\n\tregexIsAbsoluteUri = /^(http(s?):)?\\/\\//i, regexIsAbsolutePath = /^\\//, regexMatchSourcemap = /((?:\\/\\/|\\/\\*)#)\\s*(sourceMappingURL)\\s*=\\s*(?!(?:http[s]?:)?\\/\\/)(.+?)\\.map(?:\\s+)?(\\*\\/)?/g, regexMatchBaseUrl = new RegExp(\"^\" + functionEscapeRegex(functionResolveUrl(\"/\"))), regexMatchInternal = new RegExp(\"^\" + DEMAND_ID + \"|\" + PROVIDE_ID + \"|\" + PATH_ID + \"$\"), regexMatchParameter = /^(mock:)?([+-])?((?:[-\\w]+\\/?)+)?(?:@(.+?))?(?:#(\\d+))?!/;\n\tClassSemver = function () {\n\t\tfunction parse(version) {\n\t\t\tvar temp, parts = version.split(\"-\"),\n\t\t\t\ti = 0;\n\t\t\tparts = !parts[1] ? parts[0].split(\".\") : Array.prototype.concat(parts[0].split(\".\"), parts[1].split(\".\"));\n\t\t\tfor (; temp = parts[i]; i++) parts[i] = parseInt(temp, 10)\n\t\t\t\t.toString() === temp ? parseInt(temp, 10) : temp;\n\t\t\treturn parts\n\t\t}\n\n\t\tfunction compareLevel(a, b) {\n\t\t\treturn a < b ? -1 : a > b ? 1 : 0\n\t\t}\n\n\t\tfunction compareIdentifier(a, b) {\n\t\t\tvar pa, pb, tpa, tpb, i = 0;\n\t\t\tif (a.length && !b.length) return -1;\n\t\t\telse if (!a.length && b.length) return 1;\n\t\t\telse if (!a.length && !b.length) return 0;\n\t\t\tdo {\n\t\t\t\tpa = a[i];\n\t\t\t\ttpb = typeof (pb = b[i]);\n\t\t\t\tif ((tpa = typeof pa) === STRING_UNDEFINED && tpb === STRING_UNDEFINED) return 0;\n\t\t\t\telse if (tpb === STRING_UNDEFINED) return 1;\n\t\t\t\telse if (tpa === STRING_UNDEFINED) return -1;\n\t\t\t\telse if (pa === pb);\n\t\t\t\telse if (tpa === STRING_STRING && tpb !== STRING_STRING) return 1;\n\t\t\t\telse if (tpa !== STRING_STRING && tpb === STRING_STRING) return -1;\n\t\t\t\telse if (pa > pb) return 1;\n\t\t\t\telse if (pa < pb) return -1\n\t\t\t} while (++i)\n\t\t}\n\n\t\tfunction ClassSemver(version) {\n\t\t\tif (!validatorIsSemver(version)) throw new TypeError('\"version\" must be a valid semver version string');\n\t\t\tversion = parse(version);\n\t\t\tthis.major = version.slice(0, 1);\n\t\t\tthis.minor = version.slice(1, 2);\n\t\t\tthis.patch = version.slice(2, 3);\n\t\t\tthis.identifier = version.slice(3)\n\t\t}\n\t\tClassSemver.prototype = {\n\t\t\ttoString: function () {\n\t\t\t\treturn this.major + \".\" + this.minor + \".\" + this.patch + (this.identifier.length ? \"-\" + this.identifier.join(\".\") : \"\")\n\t\t\t},\n\t\t\tcompare: function (version) {\n\t\t\t\treturn compareLevel(this.major, version.major) || compareLevel(this.minor, version.minor) || compareLevel(this.patch, version.patch) || compareIdentifier(this.identifier, version.identifier)\n\t\t\t}\n\t\t};\n\t\treturn ClassSemver\n\t}();\n\tsingletonCache = function () {\n\t\tfunction enabled(dependency) {\n\t\t\tvar match;\n\t\t\tif (dependency.cache !== NULL) return dependency.cache;\n\t\t\tfunctionIterate(settings.cache, function (property, value) {\n\t\t\t\tif (0 === dependency.path.indexOf(property) && (!match || value.weight > match.weight)) match = value\n\t\t\t});\n\t\t\treturn match ? match.state : FALSE\n\t\t}\n\n\t\tfunction getKey(key) {\n\t\t\treturn localStorage.getItem(key)\n\t\t}\n\n\t\tfunction setKey(key, value) {\n\t\t\tlocalStorage[value ? \"setItem\" : \"removeItem\"](key, value)\n\t\t}\n\n\t\tfunction getState(key) {\n\t\t\tvar matches, state = getKey(key);\n\t\t\tif (state && (matches = state.match(regexMatchProperties))) return functionToArray(matches, 1)\n\t\t}\n\n\t\tfunction setState(key, state) {\n\t\t\tstate[4] = functionGetTimestamp();\n\t\t\tsetKey(key, state.join(\",\"))\n\t\t}\n\n\t\tfunction emit(event, dependency, state) {\n\t\t\tsingletonEvent.emit(event, dependency.id, dependency, state)\n\t\t}\n\n\t\tfunction Cache() {\n\t\t\tfunctionIdle(this.clear.expired.bind(this.clear))\n\t\t}\n\t\tvar cache, STORAGE_PREFIX = \"[\" + DEMAND_ID + \"]\",\n\t\t\tSTORAGE_SUFFIX_STATE = \"[state]\",\n\t\t\tSTORAGE_SUFFIX_VALUE = \"[value]\",\n\t\t\tregexMatchState = new RegExp(\"^\" + functionEscapeRegex(STORAGE_PREFIX) + \"\\\\[(.+?)\\\\]\" + functionEscapeRegex(STORAGE_SUFFIX_STATE) + \"$\"),\n\t\t\tregexMatchProperties = /^(.+?),(\\d+),(\\d*),(.+?),(\\d+)$/,\n\t\t\tsupportsLocalStorage = function () {\n\t\t\t\ttry {\n\t\t\t\t\treturn \"localStorage\" in global && global.localStorage\n\t\t\t\t} catch (exception) {\n\t\t\t\t\treturn FALSE\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tlocalStorage = supportsLocalStorage ? global.localStorage : NULL,\n\t\t\tsupportsRemainingSpace = supportsLocalStorage && \"remainingSpace\" in localStorage,\n\t\t\tstorage = {};\n\t\tsingletonEvent.on(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\tcache.clear(dependency.id)\n\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_CACHE_EXCEED, function (dependency) {\n\t\t\t\tdemand(\"-!/\" + DEMAND_ID + \"/cache/dispose\")\n\t\t\t\t\t.then(function (cacheDispose) {\n\t\t\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\t\t\tcacheDispose(dependency.source.length);\n\t\t\t\t\t\t\tcache.set(dependency)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t\t.on(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tif (dependency.source && enabled(dependency)) storage[dependency.id] = TRUE\n\t\t\t})\n\t\t\t.after(EVENT_POST_PROCESS, function (dependency) {\n\t\t\t\tif (storage[dependency.id]) functionIdle(function () {\n\t\t\t\t\tcache.set(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\tCache.prototype = {\n\t\t\tget: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar id, state;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\tif (!(state = getState(id + STORAGE_SUFFIX_STATE))) return;\n\t\t\t\t\tif (1 === dependency.version.compare(new ClassSemver(state[0])) || state[2] && dependency.lifetime && state[2] <= functionGetTimestamp()) {\n\t\t\t\t\t\tdependency.invalid = true;\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tdependency.source = getKey(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\tfunctionIdle(function () {\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state)\n\t\t\t\t\t});\n\t\t\t\t\treturn TRUE\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tresolve: supportsLocalStorage ? function (dependency) {\n\t\t\t\tif (this.get(dependency)) emit(EVENT_CACHE_HIT, dependency);\n\t\t\t\telse emit(EVENT_CACHE_MISS, dependency)\n\t\t\t} : function (dependency) {\n\t\t\t\temit(EVENT_CACHE_MISS, dependency)\n\t\t\t},\n\t\t\tset: supportsLocalStorage ? function (dependency) {\n\t\t\t\tvar state, id, spaceBefore;\n\t\t\t\tif (enabled(dependency)) {\n\t\t\t\t\tstate = [dependency.version, dependency.source.length, dependency.lifetime ? functionGetTimestamp() + dependency.lifetime : NULL, demand.version];\n\t\t\t\t\tid = STORAGE_PREFIX + \"[\" + dependency.id + \"]\";\n\t\t\t\t\temit(EVENT_PRE_CACHE, dependency, state);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tspaceBefore = supportsRemainingSpace ? localStorage.remainingSpace : NULL;\n\t\t\t\t\t\tsetKey(id + STORAGE_SUFFIX_VALUE, dependency.source);\n\t\t\t\t\t\tsetState(id + STORAGE_SUFFIX_STATE, state);\n\t\t\t\t\t\tif (spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) throw new Error;\n\t\t\t\t\t\temit(EVENT_POST_CACHE, dependency, state)\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\temit(EVENT_CACHE_EXCEED, dependency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} : function () {},\n\t\t\tclear: supportsLocalStorage ? function (path) {\n\t\t\t\tvar id = functionResolveId(path),\n\t\t\t\t\tkey = STORAGE_PREFIX + \"[\" + id + \"]\";\n\t\t\t\tif (getKey(key + STORAGE_SUFFIX_STATE)) {\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_STATE);\n\t\t\t\t\tsetKey(key + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\temit(EVENT_CACHE_CLEAR, ClassDependency.get(id) || new ClassDependency(id, NULL, FALSE))\n\t\t\t\t}\n\t\t\t} : function () {}\n\t\t};\n\t\tCache.prototype.clear.all = supportsLocalStorage ? function () {\n\t\t\tvar match;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\t(match = property.match(regexMatchState)) && this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\tCache.prototype.clear.expired = supportsLocalStorage ? function () {\n\t\t\tvar match, state;\n\t\t\tfunctionIterate(localStorage, function (property) {\n\t\t\t\tif (match = property.match(regexMatchState))\n\t\t\t\t\tif ((state = getState(STORAGE_PREFIX + \"[\" + match[1] + \"]\" + STORAGE_SUFFIX_STATE)) && state[2] > 0 && state[2] <= functionGetTimestamp()) this(match[1])\n\t\t\t}, this)\n\t\t} : function () {};\n\t\treturn cache = new Cache\n\t}();\n\tClassWeakmap = \"WeakMap\" in global ? global.WeakMap : function () {\n\t\tfunction getEntry(context, key) {\n\t\t\tvar entry;\n\t\t\tif ((entry = key[context.id]) && entry[0] === key) return entry\n\t\t}\n\n\t\tfunction ClassWeakmap() {\n\t\t\tthis.define(\"id\", prefix + functionUuid())\n\t\t}\n\t\tvar prefix = \"weakmap-\";\n\t\tClassWeakmap.prototype = {\n\t\t\tset: function (key, value) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) entry[1] = value;\n\t\t\t\telse key.define(this.id, [key, value]);\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) return entry[1]\n\t\t\t},\n\t\t\tdelete: function (key) {\n\t\t\t\tvar entry = getEntry(this, key);\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.length = 0;\n\t\t\t\t\tdelete key[this.id]\n\t\t\t\t}\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\treturn !!getEntry(this, key)\n\t\t\t}\n\t\t};\n\t\treturn ClassWeakmap\n\t}();\n\tClassPledge = function () {\n\t\tfunction resolve() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_RESOLVED, arguments)\n\t\t}\n\n\t\tfunction reject() {\n\t\t\tstorage.get(this)\n\t\t\t\t.handle(PLEDGE_REJECTED, arguments)\n\t\t}\n\n\t\tfunction handle(state, parameter) {\n\t\t\tvar pointer, result, properties = storage.get(this);\n\t\t\tif (properties.state === PLEDGE_PENDING) {\n\t\t\t\tproperties.state = state;\n\t\t\t\tproperties.value = parameter\n\t\t\t}\n\t\t\twhile (pointer = properties[properties.state].shift())\n\t\t\t\tif ((result = pointer.handler.apply(NULL, properties.value)) && \"function\" === typeof result.then) result.then(pointer.dfd.resolve, pointer.dfd.reject);\n\t\t\t\telse pointer.dfd[properties.state === PLEDGE_RESOLVED ? \"resolve\" : \"reject\"].apply(NULL, properties.value);\n\t\t\tproperties[PLEDGE_RESOLVED].length = 0;\n\t\t\tproperties[PLEDGE_REJECTED].length = 0\n\t\t}\n\n\t\tfunction observe(pledge, index, properties) {\n\t\t\tpledge.then(function () {\n\t\t\t\tproperties.resolved[index] = functionToArray(arguments);\n\t\t\t\tproperties.count++;\n\t\t\t\tcheck(properties)\n\t\t\t}, function () {\n\t\t\t\tproperties.rejected.push(functionToArray(arguments));\n\t\t\t\tcheck(properties)\n\t\t\t})\n\t\t}\n\n\t\tfunction check(properties) {\n\t\t\tif (properties.count === properties.total) properties.dfd.resolve.apply(NULL, arrayPrototypeConcat.apply([], properties.resolved));\n\t\t\telse if (properties.rejected.length + properties.count === properties.total) properties.dfd.reject.apply(NULL, arrayPrototypeConcat.apply([], properties.rejected))\n\t\t}\n\n\t\tfunction ClassPledge(executor) {\n\t\t\tvar self = this;\n\t\t\tstorage.set(self, {\n\t\t\t\tstate: PLEDGE_PENDING,\n\t\t\t\thandle: handle.bind(self),\n\t\t\t\tvalue: NULL,\n\t\t\t\tresolved: [],\n\t\t\t\trejected: [],\n\t\t\t\tcount: 0\n\t\t\t});\n\t\t\texecutor(resolve.bind(self), reject.bind(self));\n\t\t\treturn self\n\t\t}\n\t\tvar PLEDGE_PENDING = \"pending\",\n\t\t\tPLEDGE_RESOLVED = \"resolved\",\n\t\t\tPLEDGE_REJECTED = \"rejected\",\n\t\t\tstorage = new ClassWeakmap;\n\t\tClassPledge.prototype = {\n\t\t\tcatch: function (listener) {\n\t\t\t\treturn this.then(function () {}, listener)\n\t\t\t},\n\t\t\talways: function (alwaysListener) {\n\t\t\t\treturn this.then(alwaysListener, alwaysListener)\n\t\t\t},\n\t\t\tthen: function (resolveListener, rejectListener) {\n\t\t\t\tvar properties = storage.get(this),\n\t\t\t\t\tdfd = ClassPledge.defer();\n\t\t\t\tresolveListener && properties[PLEDGE_RESOLVED].push({\n\t\t\t\t\thandler: resolveListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\trejectListener && properties[PLEDGE_REJECTED].push({\n\t\t\t\t\thandler: rejectListener,\n\t\t\t\t\tdfd: dfd\n\t\t\t\t});\n\t\t\t\tif (properties.state !== PLEDGE_PENDING) functionDefer(properties.handle);\n\t\t\t\treturn dfd.pledge\n\t\t\t},\n\t\t\tisPending: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_PENDING\n\t\t\t},\n\t\t\tisResolved: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_RESOLVED\n\t\t\t},\n\t\t\tisRejected: function () {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.state === PLEDGE_REJECTED\n\t\t\t}\n\t\t};\n\t\tClassPledge.defer = function () {\n\t\t\tvar self = {};\n\t\t\tself.pledge = new ClassPledge(function (resolveListener, rejectListener) {\n\t\t\t\tself.resolve = resolveListener;\n\t\t\t\tself.reject = rejectListener\n\t\t\t});\n\t\t\treturn self\n\t\t};\n\t\tClassPledge.all = function (pledges) {\n\t\t\tvar properties, pledge, dfd = ClassPledge.defer(),\n\t\t\t\ti = 0;\n\t\t\tif (pledges.length) {\n\t\t\t\tproperties = {\n\t\t\t\t\tdfd: dfd,\n\t\t\t\t\tresolved: [],\n\t\t\t\t\trejected: [],\n\t\t\t\t\ttotal: pledges.length,\n\t\t\t\t\tcount: 0\n\t\t\t\t};\n\t\t\t\tfor (; pledge = pledges[i]; i++) observe(pledge, i, properties)\n\t\t\t} else dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\tClassPledge.race = function (pledges) {\n\t\t\tfor (var pledge, dfd = ClassPledge.defer(), i = 0; pledge = pledges[i]; i++) pledge.then(dfd.resolve, dfd.reject);\n\t\t\tif (!pledges.length) dfd.resolve();\n\t\t\treturn dfd.pledge\n\t\t};\n\t\treturn ClassPledge\n\t}();\n\tClassRegistry = function () {\n\t\tfunction ClassRegistry() {\n\t\t\tstorage.set(this, {})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassRegistry.prototype = {\n\t\t\tget: function (key) {\n\t\t\t\treturn key ? storage.get(this)[key] : storage.get(this)\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tstorage.get(this)[key] = value\n\t\t\t},\n\t\t\tremove: function (key) {\n\t\t\t\tdelete storage.get(this)[key]\n\t\t\t}\n\t\t};\n\t\treturn ClassRegistry\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\tClassDependency = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = value\n\t\t}\n\n\t\tfunction add(id) {\n\t\t\tif (!matchInternal.test(id)) this.push(id)\n\t\t}\n\n\t\tfunction addPending(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isPending()) this.push(id)\n\t\t}\n\n\t\tfunction addResolved(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isResolved()) this.push(id)\n\t\t}\n\n\t\tfunction addRejected(id, dependency) {\n\t\t\tif (!matchInternal.test(id) && dependency.pledge.isRejected()) this.push(id)\n\t\t}\n\n\t\tfunction list() {\n\t\t\treturn functionIterate(registry.get(), add, [])\n\t\t}\n\n\t\tfunction ClassDependency(uri, context, register) {\n\t\t\tvar self = this,\n\t\t\t\tparameter = uri.match(regexMatchParameter) || placeholder;\n\t\t\tself.path = functionResolvePath(uri, context);\n\t\t\tself.mock = parameter[1] ? TRUE : FALSE;\n\t\t\tself.cache = parameter[2] ? \"+\" === parameter[1] : NULL;\n\t\t\tself.type = parameter[3] || settings.handler;\n\t\t\tself.version = new ClassSemver(parameter[4] || settings.version);\n\t\t\tself.lifetime = parameter[5] && 1e3 * parameter[5] || settings.lifetime;\n\t\t\tself.id = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"!\" + self.path;\n\t\t\tself.uri = (self.mock ? MOCK_PREFIX : \"\") + self.type + \"@\" + self.version + (validatorIsPositive(self.lifetime) && self.lifetime > 0 ? \"#\" + self.lifetime : \"\") + \"!\" + self.path;\n\t\t\tself.dfd = ClassPledge.defer();\n\t\t\tself.pledge = self.dfd.pledge;\n\t\t\tself.invalid = false;\n\t\t\tself.pledge.then(function () {\n\t\t\t\tself.value = functionToArray(arguments)\n\t\t\t});\n\t\t\tregister !== FALSE && registry.set(self.id, self);\n\t\t\treturn self\n\t\t}\n\t\tvar PREFIX_INTERNAL = \"internal!\",\n\t\t\tregistry = new ClassRegistry,\n\t\t\tmatchInternal = /^(?:mock:|internal!)/i,\n\t\t\tplaceholder = [];\n\t\tlist.pending = function () {\n\t\t\treturn functionIterate(registry.get(), addPending, [])\n\t\t};\n\t\tlist.resolved = function () {\n\t\t\treturn functionIterate(registry.get(), addResolved, [])\n\t\t};\n\t\tlist.rejected = function () {\n\t\t\treturn functionIterate(registry.get(), addRejected, [])\n\t\t};\n\t\tClassDependency.prototype = {\n\t\t\tenqueue: true\n\t\t};\n\t\tClassDependency.get = function (uri, context) {\n\t\t\treturn registry.get(functionResolveId(uri, context))\n\t\t};\n\t\tClassDependency.resolve = function (uri, context) {\n\t\t\tvar value, isInternal = context && regexMatchInternal.test(uri),\n\t\t\t\tdependency = isInternal ? this.get(PREFIX_INTERNAL + context + \"/\" + uri) : this.get(uri, context);\n\t\t\tif (!dependency)\n\t\t\t\tif (isInternal) {\n\t\t\t\t\tdependency = new ClassDependency(PREFIX_INTERNAL + context + \"/\" + uri);\n\t\t\t\t\tswitch (uri) {\n\t\t\t\t\tcase DEMAND_ID:\n\t\t\t\t\t\tvalue = function () {\n\t\t\t\t\t\t\treturn functionIterate(demand, setProperty, demand.bind(context))\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PROVIDE_ID:\n\t\t\t\t\t\tvalue = provide.bind(context);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PATH_ID:\n\t\t\t\t\t\tvalue = context\n\t\t\t\t\t}\n\t\t\t\t\tdependency.dfd.resolve(value)\n\t\t\t\t} else {\n\t\t\t\t\tdependency = new ClassDependency(uri, context);\n\t\t\t\t\tdemand(MODULE_PREFIX_HANDLER + dependency.type)\n\t\t\t\t\t\t.then(function (handler) {\n\t\t\t\t\t\t\tdependency.handler = handler;\n\t\t\t\t\t\t\tif (dependency.mock) dependency.dfd.resolve(handler);\n\t\t\t\t\t\t\telse singletonCache.resolve(dependency)\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\tdependency.dfd.reject(new ClassFailure(ERROR_LOAD + \" (handler)\", self.id))\n\t\t\t\t\t\t})\n\t\t\t\t} return dependency\n\t\t};\n\t\tClassDependency.remove = function (uri, context, cache) {\n\t\t\tvar id = functionResolveId(uri, context),\n\t\t\t\tnode = document.querySelector(\"[\" + DEMAND_ID + '-id=\"' + id + '\"]');\n\t\t\tregistry.remove(id);\n\t\t\tregistry.remove(MOCK_PREFIX + id);\n\t\t\tnode && node.parentNode.removeChild(node);\n\t\t\tcache !== FALSE && singletonCache.clear(id)\n\t\t};\n\t\tClassDependency.list = list;\n\t\treturn ClassDependency\n\t}();\n\tClassPattern = function () {\n\t\tfunction setProperty(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\turl: functionResolveUrl(value)\n\t\t\t\t\t.replace(regexMatchTrailingSlash, \"$1\"),\n\t\t\t\tmatch: new RegExp(\"^\" + functionEscapeRegex(value))\n\t\t\t}\n\t\t}\n\n\t\tfunction ClassPattern(pattern, url) {\n\t\t\tvar self = this;\n\t\t\tself.weight = pattern.length;\n\t\t\tself.match = new RegExp(\"^\" + functionEscapeRegex(pattern));\n\t\t\tself.location = [].concat(url);\n\t\t\tfunctionIterate(self.location, setProperty, self.location)\n\t\t}\n\t\tvar regexMatchTrailingSlash = /(.+)\\/$/;\n\t\tClassPattern.prototype = {\n\t\t\tmatches: function (path) {\n\t\t\t\treturn this.match.test(path)\n\t\t\t},\n\t\t\tprocess: function (path, index) {\n\t\t\t\tvar current = this.location[index];\n\t\t\t\tif (current) return path.replace(this.match, current.url)\n\t\t\t}\n\t\t};\n\t\treturn ClassPattern\n\t}();\n\tClassXhr = function (XMLHttpRequest) {\n\t\tfunction checkState() {\n\t\t\tif (this.readyState < 4) this.abort()\n\t\t}\n\t\tvar XDomainRequest = \"XDomainRequest\" in global && global.XDomainRequest || XMLHttpRequest;\n\t\treturn function (url) {\n\t\t\tvar pointer, dfd = ClassPledge.defer(),\n\t\t\t\txhr = regexMatchBaseUrl.test(url) ? new XMLHttpRequest : new XDomainRequest,\n\t\t\t\tboundCheckState = checkState.bind(xhr),\n\t\t\t\ttimeout = settings.timeout;\n\t\t\txhr.ontimeout = xhr.onerror = xhr.onabort = function () {\n\t\t\t\tdfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.onprogress = xhr.onreadystatechange = function () {\n\t\t\t\tclearTimeout(pointer);\n\t\t\t\tpointer = setTimeout(boundCheckState, timeout)\n\t\t\t};\n\t\t\txhr.onload = function () {\n\t\t\t\tpointer = clearTimeout(pointer);\n\t\t\t\tif (!(\"status\" in xhr) || 200 === xhr.status) dfd.resolve(xhr.responseText, xhr.getResponseHeader && xhr.getResponseHeader(\"content-type\"));\n\t\t\t\telse dfd.reject(xhr.status)\n\t\t\t};\n\t\t\txhr.open(\"GET\", url, TRUE);\n\t\t\txhr.send();\n\t\t\tpointer = setTimeout(boundCheckState, timeout);\n\t\t\treturn dfd.pledge\n\t\t}\n\t}(XMLHttpRequest);\n\tdemand = function () {\n\t\tfunction updateCacheSettings(property, value) {\n\t\t\tthis[property] = {\n\t\t\t\tweight: property.length,\n\t\t\t\tstate: value\n\t\t\t}\n\t\t}\n\n\t\tfunction updatePatternSettings(property, value) {\n\t\t\t\"base\" !== property && (this[property] = new ClassPattern(property, value))\n\t\t}\n\n\t\tfunction updateModuleSettings(property, value) {\n\t\t\tvar temp = this[property] = this[property] || {};\n\t\t\tsingletonEvent.emit(EVENT_PRE_CONFIGURE, property, temp);\n\t\t\tfunctionMerge(temp, value);\n\t\t\tsingletonEvent.emit(EVENT_POST_CONFIGURE, property, temp)\n\t\t}\n\n\t\tfunction demand() {\n\t\t\tvar uri, dfd, result, dependencies = functionToArray(arguments),\n\t\t\t\tcontext = this !== global ? this : NULL,\n\t\t\t\ti = 0;\n\t\t\tsingletonEvent.emit(EVENT_PRE_RESOLVE, NULL, dependencies, context);\n\t\t\tfor (; uri = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(uri, STRING_STRING)) dependencies[i] = ClassDependency.resolve(uri, context)\n\t\t\t\t\t.pledge;\n\t\t\t\telse {\n\t\t\t\t\tdependencies[i] = (dfd = ClassPledge.defer())\n\t\t\t\t\t\t.pledge;\n\t\t\t\t\tdfd.resolve(uri)\n\t\t\t\t} if (dependencies.length > 1) result = ClassPledge.all(dependencies);\n\t\t\telse result = dependencies[0];\n\t\t\treturn result.always(function () {\n\t\t\t\tsingletonEvent.emit(EVENT_POST_RESOLVE, NULL, dependencies, context)\n\t\t\t})\n\t\t}\n\t\tdemand.configure = function (options) {\n\t\t\tvar cache = options.cache,\n\t\t\t\tversion = options.version,\n\t\t\t\ttimeout = options.timeout,\n\t\t\t\tlifetime = options.lifetime,\n\t\t\t\tbase = options.base,\n\t\t\t\tpattern = options.pattern,\n\t\t\t\tmodules = options.modules,\n\t\t\t\tpointer = settings.modules;\n\t\t\tif (validatorIsTypeOf(cache, STRING_BOOLEAN)) settings.cache[\"\"] = {\n\t\t\t\tweight: 0,\n\t\t\t\tstate: cache\n\t\t\t};\n\t\t\telse if (validatorIsObject(cache)) functionIterate(cache, updateCacheSettings, settings.cache);\n\t\t\tif (validatorIsSemver(version)) settings.version = version;\n\t\t\tif (validatorIsPositive(timeout)) settings.timeout = 1e3 * Math.min(Math.max(timeout, 2), 20);\n\t\t\tif (validatorIsPositive(lifetime) && lifetime > 0) settings.lifetime = 1e3 * lifetime;\n\t\t\tif (validatorIsTypeOf(base, STRING_STRING) && \"\" !== base) settings.pattern.base = new ClassPattern(\"\", base);\n\t\t\tif (validatorIsObject(pattern)) functionIterate(pattern, updatePatternSettings, settings.pattern);\n\t\t\tif (validatorIsObject(modules)) functionIterate(modules, updateModuleSettings, pointer);\n\t\t\treturn demand\n\t\t};\n\t\tdemand.version = \"5.1.0-rc.7\";\n\t\tdemand.on = singletonEvent.on.bind(demand);\n\t\tdemand.get = function (uri, context) {\n\t\t\tvar dependency = ClassDependency.get(uri, context);\n\t\t\treturn dependency && dependency.value\n\t\t};\n\t\tdemand.list = ClassDependency.list;\n\t\tdemand.remove = ClassDependency.remove;\n\t\tdemand.cache = {\n\t\t\tclear: singletonCache.clear\n\t\t};\n\t\tsingletonEvent.after(EVENT_CACHE_MISS, function (dependency) {\n\t\t\t\tnew ClassLoader(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPostRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_CACHE_HIT + \" \" + EVENT_POST_REQUEST, function (dependency) {\n\t\t\t\tsingletonEvent.emit(EVENT_PRE_PROCESS, dependency.id, dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_REQUEST, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreRequest;\n\t\t\t\tpointer && pointer(dependency)\n\t\t\t})\n\t\t\t.after(EVENT_PRE_PROCESS, function (dependency) {\n\t\t\t\tvar pointer = dependency.handler.onPreProcess;\n\t\t\t\tpointer && pointer(dependency);\n\t\t\t\tdependency.pledge.then(function () {\n\t\t\t\t\tsingletonEvent.emit(EVENT_POST_PROCESS, dependency.id, dependency)\n\t\t\t\t});\n\t\t\t\tif (true === dependency.enqueue) queue.enqueue(dependency);\n\t\t\t\telse if (validatorIsInstanceOf(dependency.enqueue, ClassPledge)) dependency.enqueue.then(function () {\n\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t})\n\t\t\t});\n\t\treturn demand\n\t}();\n\tglobal.define(\"demand\", demand);\n\tprovide = function () {\n\t\tvar module, isFunction, uri = validatorIsTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tcontext = this !== global ? this : NULL,\n\t\t\tdependencies = validatorIsArray(arguments[uri ? 1 : 0]) ? arguments[uri ? 1 : 0] : NULL,\n\t\t\tdefinition = dependencies ? arguments[uri ? 2 : 1] : arguments[uri ? 1 : 0];\n\t\tif (!uri && processor.current) {\n\t\t\turi = (module = processor.current)\n\t\t\t\t.uri;\n\t\t\tprocessor.process()\n\t\t}\n\t\tif (uri) {\n\t\t\tmodule = module || new ClassDependency(uri, context);\n\t\t\tisFunction = validatorIsTypeOf(definition, STRING_FUNCTION);\n\t\t\tif (dependencies) demand.apply(module.path, dependencies)\n\t\t\t\t.then(function () {\n\t\t\t\t\tmodule.dfd.resolve(isFunction ? definition.apply(NULL, arguments) : definition)\n\t\t\t\t}, function () {\n\t\t\t\t\tmodule.dfd.reject(new ClassFailure(ERROR_PROVIDE, module.id, arguments))\n\t\t\t\t});\n\t\t\telse module.dfd.resolve(isFunction ? definition() : definition);\n\t\t\treturn module.dfd.pledge\n\t\t} else !validatorIsTypeOf(console, STRING_UNDEFINED) && console.error(new ClassFailure(ERROR_PROVIDE_ANONYMOUS))\n\t};\n\tglobal.define(\"provide\", provide);\n\tdemand.configure({\n\t\tcache: TRUE,\n\t\tbase: \"/\",\n\t\tpattern: {\n\t\t\t\"/demand\": functionResolveUrl((options && options.url || location.href) + \"/../\")\n\t\t\t\t.slice(0, -1)\n\t\t}\n\t});\n\toptions && options.settings && demand.configure(options.settings);\n\tClassQueue = function () {\n\t\tfunction ClassQueue() {\n\t\t\tvar self = AbstractUuid.call(this);\n\t\t\tstorage.set(self, []);\n\t\t\treturn self\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassQueue.prototype = {\n\t\t\tenqueue: function () {\n\t\t\t\tvar items = functionToArray(arguments);\n\t\t\t\tstorage.set(this, storage.get(this)\n\t\t\t\t\t.concat(items));\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_ENQUEUE, this.uuid, items)\n\t\t\t},\n\t\t\tdequeue: function () {\n\t\t\t\tvar item = storage.get(this)\n\t\t\t\t\t.shift();\n\t\t\t\tsingletonEvent.emit(EVENT_QUEUE_DEQUEUE, this.uuid, item);\n\t\t\t\treturn item\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)[0]\n\t\t\t},\n\t\t\tget length() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.length\n\t\t\t}\n\t\t};\n\t\treturn ClassQueue.extends(AbstractUuid)\n\t}();\n\tClassProcessor = function () {\n\t\tfunction ClassProcessor(queue) {\n\t\t\tvar self = this,\n\t\t\t\tproperties = {\n\t\t\t\t\tqueue: queue,\n\t\t\t\t\tcurrent: NULL\n\t\t\t\t};\n\t\t\tstorage.set(self, properties);\n\t\t\tdemand.on(EVENT_QUEUE_ENQUEUE + \":\" + queue.uuid, function () {\n\t\t\t\t!properties.current && self.process()\n\t\t\t})\n\t\t}\n\t\tvar storage = new ClassWeakmap;\n\t\tClassProcessor.prototype = {\n\t\t\tprocess: function () {\n\t\t\t\tvar current, properties = storage.get(this);\n\t\t\t\tif (properties.queue.length)\n\t\t\t\t\tif (!(current = properties.current = properties.queue.dequeue())\n\t\t\t\t\t\t.pledge.isRejected()) {\n\t\t\t\t\t\tcurrent.handler.process && current.handler.process(current);\n\t\t\t\t\t\treturn\n\t\t\t\t\t} properties.current = NULL\n\t\t\t},\n\t\t\tget current() {\n\t\t\t\treturn storage.get(this)\n\t\t\t\t\t.current\n\t\t\t}\n\t\t};\n\t\treturn ClassProcessor\n\t}();\n\tabstractHandler.prototype = {\n\t\tvalidate: NULL,\n\t\tonPreRequest: NULL,\n\t\tonPostRequest: NULL,\n\t\tonPreProcess: NULL,\n\t\tprocess: NULL\n\t};\n\thandlerModule = function () {\n\t\tfunction HandlerModule() {}\n\t\tvar suffix = \".js\",\n\t\t\ttarget = document.getElementsByTagName(\"head\")[0],\n\t\t\tregexMatchType = /^(application|text)\\/(x-)?javascript/;\n\t\tHandlerModule.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tprocess: function (dependency) {\n\t\t\t\tvar script;\n\t\t\t\tif (dependency.source) {\n\t\t\t\t\t(script = document.createElement(\"script\"))\n\t\t\t\t\t.async = TRUE;\n\t\t\t\t\tscript.text = dependency.source;\n\t\t\t\t\tscript.setAttribute(DEMAND_ID + \"-id\", dependency.id);\n\t\t\t\t\ttarget.appendChild(script)\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerModule.extends(abstractHandler))\n\t}();\n\tClassFailure.prototype = {\n\t\ttoString: function () {\n\t\t\tvar self = this,\n\t\t\t\tresult = DEMAND_ID + \": \" + self.message + \" \" + (self.module ? '\"' + self.module + '\"' : \"\");\n\t\t\tif (self.stack) result = ClassFailure.traverse(self.stack, result, 1);\n\t\t\treturn result\n\t\t}\n\t};\n\tClassFailure.traverse = function (stack, value, depth) {\n\t\tfor (var item, indention = new Array(depth + 1)\n\t\t\t\t.join(\" \"), i = 0; item = stack[i]; i++) {\n\t\t\tvalue += \"\\n\" + indention + \"> \" + item.message + \" \" + (item.module ? '\"' + item.module + '\"' : \"\");\n\t\t\tif (item.stack) value = ClassFailure.traverse(item.stack, value, depth + 1)\n\t\t}\n\t\treturn value\n\t};\n\thandlerBundle = function () {\n\t\tfunction updateDependencies(uri, dependencies) {\n\t\t\tvar i, dependency;\n\t\t\tfor (i = 0; dependency = dependencies[i]; i++)\n\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING)) dependencies[i] = functionResolveId(dependency)\n\t\t}\n\n\t\tfunction getType(dependencies) {\n\t\t\tfor (var type, temp, i = 0; temp = dependencies[i]; i++) {\n\t\t\t\ttemp = (temp = temp.match(regexMatchParameter)) && temp[3] || settings.handler;\n\t\t\t\tif (type) {\n\t\t\t\t\tif (temp !== type) return FALSE\n\t\t\t\t} else type = temp\n\t\t\t}\n\t\t\treturn type\n\t\t}\n\n\t\tfunction HandlerBundle() {}\n\t\tvar path = MODULE_PREFIX_HANDLER + \"bundle\",\n\t\t\tsettings = {};\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\tif (validatorIsObject(options)) functionIterate(settings = options, updateDependencies)\n\t\t});\n\t\tHandlerBundle.prototype = {\n\t\t\tvalidate: handlerModule.validate,\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar type, match, pledges, temp, i, source = dependency.source,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tdependencies = settings[dependency.path];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tif (dependencies && (type = getType(dependencies))) {\n\t\t\t\t\twhile (match = regexMatchSourcemap.exec(source)) source = source.replace(match[0], \"\");\n\t\t\t\t\tdependency.source = source;\n\t\t\t\t\tpledges = [];\n\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) pledges.push(ClassDependency.resolve(MOCK_PREFIX + temp)\n\t\t\t\t\t\t.pledge);\n\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t.then(function () {\n\t\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\t\tfor (i = 0; temp = dependencies[i]; i++) {\n\t\t\t\t\t\t\t\t(temp = dependencies[i] = ClassDependency.get(temp) || new ClassDependency(temp))\n\t\t\t\t\t\t\t\t.handler = arguments[i];\n\t\t\t\t\t\t\t\tpledges.push(temp.pledge)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\"module\" === type) {\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies);\n\t\t\t\t\t\t\t\thandlerModule.process(dependency)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thandlerModule.process(dependency);\n\t\t\t\t\t\t\t\tqueue.enqueue.apply(queue, dependencies)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t\t}, reject)\n\t\t\t\t} else reject()\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerBundle.extends(abstractHandler))\n\t}();\n\thandlerComponent = function () {\n\t\tfunction HandlerComponent() {}\n\t\tvar suffix = \".html\",\n\t\t\tregexMatchType = /^text\\/.+$/;\n\t\tHandlerComponent.prototype = {\n\t\t\tvalidate: function (type) {\n\t\t\t\treturn regexMatchType.test(type)\n\t\t\t},\n\t\t\tonPreRequest: function (dependency) {\n\t\t\t\tvar pathname = dependency.url.pathname;\n\t\t\t\tdependency.url.pathname = pathname.slice(-suffix.length) !== suffix ? pathname + suffix : pathname\n\t\t\t},\n\t\t\tonPostRequest: function (dependency) {\n\t\t\t\tdependency.source = functionResolveSourcemaps(dependency.url, dependency.source)\n\t\t\t},\n\t\t\tonPreProcess: function (dependency) {\n\t\t\t\tfunction reject() {\n\t\t\t\t\tdfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id, arguments))\n\t\t\t\t}\n\t\t\t\tvar node, handler, path, uri, context = dependency.path,\n\t\t\t\t\tdfd = dependency.dfd,\n\t\t\t\t\tcontainer = document.createElement(\"body\"),\n\t\t\t\t\tmodules = [],\n\t\t\t\t\tpledges = [];\n\t\t\t\tdependency.enqueue = FALSE;\n\t\t\t\tcontainer.innerHTML = dependency.source;\n\t\t\t\twhile (node = container.firstElementChild)\n\t\t\t\t\tif (handler = node.getAttribute(\"type\")) {\n\t\t\t\t\t\turi = handler + \"!\" + context + ((path = node.getAttribute(\"path\")) ? \"/\" + path : \"\");\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t\tmodules.push({\n\t\t\t\t\t\t\tsource: node.textContent,\n\t\t\t\t\t\t\turi: uri\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpledges.push(ClassDependency.resolve(\"mock:\" + uri)\n\t\t\t\t\t\t\t.pledge)\n\t\t\t\t\t} ClassPledge.all(pledges)\n\t\t\t\t\t.then(function () {\n\t\t\t\t\t\tvar module, dependency, i = 0;\n\t\t\t\t\t\tpledges.length = 0;\n\t\t\t\t\t\tfor (; module = modules[i]; i++) {\n\t\t\t\t\t\t\t(dependency = ClassDependency.get(module.uri) || new ClassDependency(module.uri))\n\t\t\t\t\t\t\t.source = functionResolveSourcemaps(dependency.url, module.source);\n\t\t\t\t\t\t\tdependency.handler = arguments[i];\n\t\t\t\t\t\t\tpledges.push(dependency.pledge);\n\t\t\t\t\t\t\tqueue.enqueue(dependency)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tClassPledge.all(pledges)\n\t\t\t\t\t\t\t.then(dfd.resolve, reject)\n\t\t\t\t\t}, reject)\n\t\t\t}\n\t\t};\n\t\treturn new(HandlerComponent.extends(abstractHandler))\n\t}();\n\tpluginGenie = function () {\n\t\tfunction matchPattern(path) {\n\t\t\tfor (var pointer, match, i = 0; pointer = pattern[i]; i++)\n\t\t\t\tif (0 === path.indexOf(pointer.prefix) && (!match || pointer.weight > match.weight)) match = pointer;\n\t\t\treturn match\n\t\t}\n\n\t\tfunction generateConfiguration(bundle) {\n\t\t\tvar pointer, dependency, matches = bundle.matches,\n\t\t\t\tconfiguration = {\n\t\t\t\t\tpattern: {},\n\t\t\t\t\tmodules: {\n\t\t\t\t\t\t\"/demand/handler/bundle\": {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ti = 0;\n\t\t\tconfiguration.pattern[bundle.id] = bundle.fn(matches);\n\t\t\tconfiguration.modules[MODULE_PREFIX_HANDLER + \"bundle\"][bundle.id] = pointer = [];\n\t\t\tfor (; dependency = matches[i]; i++) pointer.push(dependency.path);\n\t\t\treturn configuration\n\t\t}\n\n\t\tfunction resolveDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.resolve(arguments[i])\n\t\t}\n\n\t\tfunction rejectDependencies() {\n\t\t\tfor (var dependency, i = 0; dependency = this[i]; i++) dependency.dfd.reject(new ClassFailure(ERROR_RESOLVE, dependency.id))\n\t\t}\n\n\t\tfunction addPattern(property, value) {\n\t\t\tpattern.push({\n\t\t\t\tprefix: property,\n\t\t\t\tweight: property.length,\n\t\t\t\tfn: value\n\t\t\t})\n\t\t}\n\n\t\tfunction resolveBundles(property, value) {\n\t\t\tvar dependency, matches = value.matches,\n\t\t\t\ti = 0;\n\t\t\tif (matches.length > 1) {\n\t\t\t\tvalue.id = path + \"/\" + functionHash(JSON.stringify(value.matches));\n\t\t\t\tfor (; dependency = matches[i]; i++) matches[i] = new ClassDependency(dependency.uri);\n\t\t\t\tdemand.configure(generateConfiguration(value));\n\t\t\t\tdemand(\"bundle!\" + value.id)\n\t\t\t\t\t.then(resolveDependencies.bind(matches), rejectDependencies.bind(matches))\n\t\t\t}\n\t\t}\n\t\tvar path = MODULE_PREFIX_PLUGIN + \"genie\",\n\t\t\tpattern = [];\n\t\tdemand.on(EVENT_POST_CONFIGURE + \":\" + path, function (options) {\n\t\t\t\tif (validatorIsObject(options)) {\n\t\t\t\t\tpattern.length = 0;\n\t\t\t\t\tfunctionIterate(options, addPattern)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(EVENT_PRE_RESOLVE, function (dependencies, context) {\n\t\t\t\tfor (var dependency, pattern, bundles = {}, i = 0; dependency = dependencies[i]; i++)\n\t\t\t\t\tif (validatorIsTypeOf(dependency, STRING_STRING) && !regexMatchInternal.test(dependency) && !ClassDependency.get(dependency, context))\n\t\t\t\t\t\tif (\"module\" === (dependency = new ClassDependency(dependency, context, FALSE))\n\t\t\t\t\t\t\t.type && (pattern = matchPattern(dependency.path)) && !singletonCache.get(dependency))(bundles[pattern.prefix] || (bundles[pattern.prefix] = {\n\t\t\t\t\t\t\t\tfn: pattern.fn,\n\t\t\t\t\t\t\t\tmatches: []\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t.matches.push(dependency);\n\t\t\t\tfunctionIterate(bundles, resolveBundles)\n\t\t\t});\n\t\treturn TRUE\n\t}();\n\tqueue = new ClassQueue;\n\tprocessor = new ClassProcessor(queue);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"uuid\", AbstractUuid);\n\tassignModule(MODULE_PREFIX_ABSTRACT + \"handler\", abstractHandler);\n\tassignModule(MODULE_PREFIX_HANDLER + \"module\", handlerModule);\n\tassignModule(MODULE_PREFIX_HANDLER + \"bundle\", handlerBundle);\n\tassignModule(MODULE_PREFIX_HANDLER + \"component\", handlerComponent);\n\tassignModule(MODULE_PREFIX_PLUGIN + \"genie\", pluginGenie);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isTypeOf\", validatorIsTypeOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isArray\", validatorIsArray);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isObject\", validatorIsObject);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isInstanceOf\", validatorIsInstanceOf);\n\tassignModule(MODULE_PREFIX_VALIDATOR + \"isSemver\", validatorIsSemver);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveUrl\", functionResolveUrl);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"resolveSourcemaps\", functionResolveSourcemaps);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"merge\", functionMerge);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"iterate\", functionIterate);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"hash\", functionHash);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"defer\", functionDefer);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"idle\", functionIdle);\n\tassignModule(MODULE_PREFIX_FUNCTION + \"uuid\", functionUuid);\n\tassignModule(MODULE_PREFIX + \"weakmap\", ClassWeakmap);\n\tassignModule(MODULE_PREFIX + \"descriptor\", ClassDescriptor);\n\tassignModule(MODULE_PREFIX + \"pledge\", ClassPledge);\n\tassignModule(MODULE_PREFIX + \"queue\", ClassQueue);\n\tassignModule(MODULE_PREFIX + \"xhr\", ClassXhr);\n\tassignModule(MODULE_PREFIX + \"failure\", ClassFailure);\n\tassignModule(MODULE_PREFIX + \"semver\", ClassSemver);\n\tif (options && options.main) switch (typeof options.main) {\n\tcase STRING_STRING:\n\t\tdemand(options.main);\n\t\tbreak;\n\tcase STRING_FUNCTION:\n\t\tprovide(\"main\", options.main())\n\t}\n})(\"demand-loader\" === this.name ? parent : this, setTimeout, clearTimeout);\n"]}