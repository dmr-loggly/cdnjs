{"version":3,"sources":["webpack://pnp.sp-clientsvc/webpack/universalModuleDefinition","webpack://pnp.sp-clientsvc/webpack/bootstrap","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/adalclient.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/collections.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/libconfig.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/storage.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/index.js","webpack://pnp.sp-clientsvc/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/util.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp.sp-clientsvc/./build/packages-es5/common/src/netutil.js","webpack://pnp.sp-clientsvc/(webpack)/buildin/global.js","webpack://pnp.sp-clientsvc/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/loglevel.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/logger.js","webpack://pnp.sp-clientsvc/./build/packages-es5/logging/src/listeners.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/caching.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/parsers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/pipeline.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/queryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/odata.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/siteusers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/types.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/roles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/files.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/webparts.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/folders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/views.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/fields.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/forms.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/lists.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/comments.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/items.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/batch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/navigation.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/search.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/social.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/features.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/relateditems.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/webs.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/site.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/utilities.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp/src/rest.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/opactionbuilders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/opbuilders.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/utils.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/objectpath.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/parsers.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/clintsvcqueryable.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/src/batch.js","webpack://pnp.sp-clientsvc/./build/packages-es5/sp-clientsvc/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","objectToMap","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","common","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","init","clone","text","parsers_ODataParserBase","ODataParserBase","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","queryable_Queryable","Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","toUrl","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","_clone","_0","queryable_ODataQueryable","ODataQueryable","_batch","inBatch","addBatchDependency","addDependency","hasBatch","cloneSettings","includeBatch","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","labelName","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","update","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","Response","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","getNextOrder","collection","max","regexIndexOf","regex","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","clientsidepages_ClientSidePage","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","section","clientsidepages_CanvasSection","toHtml","fromHtml","control","clientsidepages_CanvasColumn","mergeColumnToTree","clientsidepages_ClientSideWebpart","mergePartToTree","clientsidepages_ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","CanvasSection","_memId","addColumn","factor","defaultColumn","clientsidepages_CanvasControl","CanvasControl","controlType","dataVersion","getControlData","CanvasColumn","getControl","jsonData","displayMode","clientsidepages_ClientSidePart","ClientSidePart","ClientSideText","_text","startsWith","editorType","controlIndex","ClientSideWebpart","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","spODataEntity","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","Querytext","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","webs_Web","webs_WebInfos","WebInfos","Web","Web_1","fromUrl","getParentWeb","ParentWeb","site_Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","Site","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","joinHubSite","siteId","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","Classification","Lcid","ShareByEmailEnabled","SiteDesignId","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","sitescripts_SiteScripts","SiteScripts","methodName","getBaseUrl","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","updateInfo","sitedesigns_SiteDesigns","SiteDesigns","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","fm","objectPath","identityQuery","opQuery","selectProperties","childSelectProperties","builder","setProperty","methodAction","arrParams","toArray","objectProperties","actions","ObjectPath","staticMethod","typeId","staticProperty","objConstructor","MethodParams","_p","build","initValues","string","number","boolean","strArray","values","inputIndex","opbuilders_method","writeObjectPathBody","objectPaths","replaceAfter","opSetId","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","matches","objectpath_ObjectPathQueue","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","appendActionToLast","contextIndex","toBody","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","parsers_ProcessQueryParser","ProcessQueryParser","parsed","ErrorInfo","findResult","getParsedResultById","IsNull","ProcessQueryPath","clintsvcqueryable_ClientSvcQueryable","ClientSvcQueryable","_objectPaths","_selects","getSelects","getChild","getChildProperty","clientsvc_ObjectPaths","sendGet","sendGetCollection","invokeMethod","invokeMethodImpl","invokeMethodAction","invokeNonQuery","invokeMethodCollection","invokeUpdate","accept","content-type","queryAction","isAction","batch_ObjectPathBatch","ObjectPathBatch","executor","batch_BatchExecutor","appendRequests","BatchExecutor","_requests","_builderIndex","pathQueue","indexMappingFunction","opActions","obPaths","batch_ProcessQueryCachingParserWrapper","batch_BatchParser","BatchParser","ProcessQueryCachingParserWrapper","wrapper"],"mappings":"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","file":"sp-clientsvc.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-clientsvc\"] = factory();\n\telse\n\t\troot[\"pnp.sp-clientsvc\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was clones was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.6\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TemplateFileType, File } from \"./files\";\r\nimport { Item } from \"./items\";\r\nimport { extend, combine, getGUID, getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nexport { CanvasControl };\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nexport { CanvasColumn };\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nexport { ClientSidePart };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get();\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: null\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            Lcid: lcid,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        var postBody = jsS({\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","export function objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nexport function setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\r\n//# sourceMappingURL=opactionbuilders.js.map","import { ObjectPath } from \"./objectpath\";\r\nexport function property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nexport function staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.strArray = function (values) {\r\n        return this.a(\"Array\", values.map(function (v) { return \"<Object Type=\\\"String\\\">\" + v + \"</Object>\"; }).join(\"\"));\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nexport { MethodParams };\r\nexport function method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\r\n//# sourceMappingURL=opbuilders.js.map","/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nexport function writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\r\n//# sourceMappingURL=utils.js.map","import { extend, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { property, staticProperty } from \"./opbuilders\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\nexport { ObjectPath };\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nexport function opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\r\nexport { ObjectPathQueue };\r\n//# sourceMappingURL=objectpath.js.map","import { getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n            // this is an invokeMethodAction so the last method action corresponds to our result\r\n            if (i === (this.op.actions.length - 1) && /^<Method /i.test(a)) {\r\n                return Promise.resolve(this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10)));\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\r\nexport { ProcessQueryParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, getGUID, mergeHeaders, mergeOptions, objectDefinedNotNull, hOP, getHashCode } from \"@pnp/common\";\r\nimport { CachingOptions, Queryable } from \"@pnp/odata\";\r\nimport { SPHttpClient, toAbsoluteUrl } from \"@pnp/sp\";\r\nimport { ObjectPathQueue } from \"./objectpath\";\r\nimport { methodAction, objectPath, objectProperties, opQuery } from \"./opactionbuilders\";\r\nimport { method, property } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes a method action that returns a single result and does not have an associated query (ex: GetDescription on Term)\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodAction = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + getHashCode(_this._objectPaths.toBody()) + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\r\nexport { ClientSvcQueryable };\r\n//# sourceMappingURL=clintsvcqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingParserWrapper, ODataBatch } from \"@pnp/odata\";\r\nimport { ClientSvcQueryable } from \"./clintsvcqueryable\";\r\nimport { ObjectPath, opSetId, opSetParentId, opSetPathId, opSetPathParamId } from \"./objectpath\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { staticMethod } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nexport { ObjectPathBatch };\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method.path = opSetId(\"0\", method.path);\r\n        method.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\r\n//# sourceMappingURL=batch.js.map","export * from \"./src/clientsvc\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}