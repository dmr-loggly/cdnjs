{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sp-clientsvc.es5.umd.bundle.min.js","webpack:///webpack/bootstrap d2f0016317e34ca65f8c","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./build/packages/sp-clientsvc/es5/src/objectpath.js","webpack:///./build/packages/sp-clientsvc/es5/src/opactionbuilders.js","webpack:///./build/packages/sp-clientsvc/es5/src/opbuilders.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./dist/packages/odata/dist/odata.es5.js","webpack:///./build/packages/sp-clientsvc/es5/src/utils.js","webpack:///./build/packages/sp-clientsvc/es5/src/parsers.js","webpack:///(webpack)/buildin/global.js","webpack:///./build/packages/sp-clientsvc/es5/src/clintsvcqueryable.js","webpack:///./build/packages/sp-clientsvc/es5/src/batch.js","webpack:///./node_modules/adal-angular/dist/adal.min.js","webpack:///./dist/packages/sp/dist/sp.es5.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","Array","global","getCtxCallback","context","method","params","_i","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combine","paths","filter","path","stringIsNullOrEmpty","map","replace","join","getGUID","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","extend","source","noOverwrite","check","f","v","getOwnPropertyNames","reduce","t","isUrlAbsolute","url","test","getAttrValueFromString","html","attrName","reg","RegExp","match","exec","jsS","JSON","stringify","hOP","mergeHeaders","Request","headers","forEach","value","append","mergeOptions","objectToMap","Map","objectEntries","mergeMaps","maps","k","set","RuntimeConfig","FetchClient","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__","fetch","options","BearerTokenFetchClient","_super","_token","_this","token","Headers","AdalClient","clientId","tenant","redirectUri","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","window","location","origin","Error","getToken","getResource","then","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","displayCall","_displayCallback","navigateToLoginRequestUrl","_loginPromise","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","entries","keys","RuntimeConfigImpl","_v","config","_runtimeConfig","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","from","data","_local","_session","getStore","localStorage","sessionStorage","opSetId","id","xml","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","matches","parseInt","regex","ObjectPath","ObjectPathQueue","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","__WEBPACK_IMPORTED_MODULE_1__opactionbuilders__","__WEBPACK_IMPORTED_MODULE_2__opbuilders__","__WEBPACK_IMPORTED_MODULE_3__utils__","actions","replaceAfter","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","add","op","dirty","push","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","action","appendActionToLast","last","clone","toArray","slice","contextIndex","toBody","charCodeAt","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","a","objectPath","identityQuery","opQuery","selectProperties","childSelectProperties","builder","setProperty","type","methodAction","arrParams","objectProperties","__WEBPACK_IMPORTED_MODULE_0__objectpath__","staticMethod","typeId","staticProperty","objConstructor","MethodParams","_p","build","initValues","string","number","boolean","inputIndex","Logger","LogLevel","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","level","log","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","warn","FunctionListener","returnResult","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","result","requestId","setResult","hasResult","next","pipeline","shift","pipe","promise","ctx","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","getDefaultPipeline","PipelineMethods","logStart","caching","send","logEnd","CachingOptions","CachingParserWrapper","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","AlreadyInBatchException","Queryable","ODataQueryable","ODataBatch","__WEBPACK_IMPORTED_MODULE_1_tslib__","storeName","defaultCachingStore","storage","local","session","cacheOptions","response","cacheData","ProcessHttpClientResponseException","status","statusText","handleError","parseImpl","has","parseFloat","text","txt","parseODataJSON","ok","responseBody","responseHeaders","results","blob","arrayBuffer","buffer","LambdaParser","verb","requestAbsoluteUrl","isCached","cachingOptions","batchDependency","hydrate","batchId","client","clientFactory","opts","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","toUrl","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","parent","_batch","inBatch","addBatchDependency","addDependency","hasBatch","_batchId","_reqs","_deps","_rDeps","info","toUpperCase","resolver","execute","all","executeImpl","writeObjectPathBody","objectPaths","ProcessQueryParser","parsed","ErrorInfo","findResult","getParsedResultById","IsNull","g","Function","eval","ClientSvcQueryable","__WEBPACK_IMPORTED_MODULE_1__pnp_common__","__WEBPACK_IMPORTED_MODULE_2__pnp_odata__","__WEBPACK_IMPORTED_MODULE_3__pnp_sp__","__WEBPACK_IMPORTED_MODULE_4__objectpath__","__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__","__WEBPACK_IMPORTED_MODULE_6__opbuilders__","__WEBPACK_IMPORTED_MODULE_7__parsers__","ProcessQueryPath","_objectPaths","_selects","select","selects","toUrlAndQuery","query","getSelects","getChild","methodName","getChildProperty","propertyName","clientsvc_ObjectPaths","body","sendGet","ops","sendGetCollection","invokeMethod","invokeMethodImpl","invokeNonQuery","invokeMethodCollection","invokeUpdate","properties","accept","content-type","cacheKey","dependencyDispose","queryAction","isAction","__WEBPACK_IMPORTED_MODULE_0__src_clientsvc__","__WEBPACK_IMPORTED_MODULE_0__batch__","__WEBPACK_IMPORTED_MODULE_1__clintsvcqueryable__","__WEBPACK_IMPORTED_MODULE_2__objectpath__","__WEBPACK_IMPORTED_MODULE_3__opactionbuilders__","__WEBPACK_IMPORTED_MODULE_4__opbuilders__","__WEBPACK_IMPORTED_MODULE_5__parsers__","__WEBPACK_IMPORTED_MODULE_6__utils__","ObjectPathBatch","__WEBPACK_IMPORTED_MODULE_1__pnp_logging__","__WEBPACK_IMPORTED_MODULE_3__clintsvcqueryable__","__WEBPACK_IMPORTED_MODULE_8__utils__","parentUrl","requests","executor","BatchExecutor","appendRequests","_requests","_builderIndex","request","pathQueue","indexMappingFunction","opActions","actionId","obPaths","ProcessQueryCachingParserWrapper","BatchParser","rawResponse","chain","wrapper","AuthenticationContext","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","extractWebUrl","candidateUrl","substr","odataUrlFrom","candidate","parts","__metadata","uri","spODataEntity","SPODataEntityParserImpl","setup","toAbsoluteUrl","SPRuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","metadata","defaultPath","class_1","getNextOrder","collection","max","order","regexIndexOf","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","trim","reindex","columns","controls","SPHttpClient","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","SPRuntimeConfigImpl","SPODataEntityArrayParserImpl","spPart","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","Accept","Content-Type","fetchRaw","cache","credentials","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","_impl","_digestCache","digest","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","SharePointQueryable","lastIndexOf","as","aliasedParams","labelName","expand","expands","getParent","additionalPath","includeBatch","SharePointQueryableCollection","orderBy","ascending","skip","top","_getById","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","SiteUsers","getById","SiteUser","SiteUsers_1","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","update","user","SiteGroups","CurrentUser","ControlMode","SiteGroup","SiteGroups_1","postBody","group","Id","getByName","groupName","retGroup","RoleAssignments","RoleAssignment","RoleAssignments_1","principalId","roleDefId","remove","RoleDefinitionBindings","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","basePermissions","BasePermissions","Description","Name","Order","definition","retDef","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","CheckinType","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","isArray","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","shareEverything","LimitedWebPartManager","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","moveTo","zoneId","zoneIndex","Folders","Folders_1","Folder","folder","Files","recycle","listItemAllFields","Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","ContentTypes","ContentType","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","additionalSettings","assign","Group","StringValue","FieldLinks","FieldLink","AttachmentFiles","AttachmentFiles_1","AttachmentFile","content","file","addMultiple","files","deleteMultiple","getText","getParsed","getBlob","getBuffer","getJSON","setContent","Views","Views_1","getByTitle","title","personalView","PersonalView","Title","view","ViewFields","renderAsHtml","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields","Field","Fields_1","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","UserCustomActions","UserCustomAction","UserCustomActions_1","Lists","List","Lists_1","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","list","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","Comments","Comment","Comments_1","Replies","like","unlike","Replies_1","Items_1","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","File","ItemVersions","ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","ItemVersion","PagedItemCollection","nextUrl","_parent","__next","odata.etag","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","moveOperations","MoveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Version","Versions_1","deleteAll","deleteById","versionId","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","TemplateFileType","PromotedState","AppCatalog","getAppById","App","filename","deploy","retract","install","uninstall","upgrade","SortDirection","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","addSection","section","CanvasSection","toHtml","fromHtml","ct","controlType","control","CanvasColumn","mergeColumnToTree","ClientSideWebpart","mergePartToTree","ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","_memId","addColumn","factor","defaultColumn","CanvasControl","dataVersion","getControlData","getControl","jsonData","displayMode","ClientSidePart","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","NavigationNodes","NavigationNode","visible","IsVisible","node","moveAfter","nodeId","previousNodeId","Navigation","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones_1","Search","formattedBody","SelectProperties","fixupProp","RefinementFilters","SortList","HithighlightedProperties","HitHighlightedProperties","ReorderingRules","Properties","SearchResults","prop","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","ReorderingRuleMatchType","QueryPropertyValueType","SocialActorType","SearchSuggest","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","SPBatch","ParseResponse","responses","statusRegExp","lines","line","Response","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","Features","Feature","Features_1","force","featdefScope","featureId","feature","deactivate","DefinitionId","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","Web","WebInfos","Web_1","fromUrl","getParentWeb","ParentWeb","Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","UserProfileQuery","clientPeoplePickerQuery","ClientPeoplePickerQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","SocialQuery","SocialQuery_1","MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","SocialActorTypes","SocialFollowResult","SocialStatusCode","UtilityMethod","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","SPRest","_baseUrl","searchSuggest","finalQuery","Querytext","toSearchQuery","fm"],"mappings":"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","file":"sp-clientsvc.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-clientsvc\"] = factory();\n\telse\n\t\troot[\"pnp.sp-clientsvc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-clientsvc\"] = factory();\n\telse\n\t\troot[\"pnp.sp-clientsvc\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/* unused harmony export __importStar */\n/* unused harmony export __importDefault */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export AdalClient */\n/* unused harmony export objectToMap */\n/* unused harmony export mergeMaps */\n/* unused harmony export setup */\n/* unused harmony export RuntimeConfigImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return mergeHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FetchClient; });\n/* unused harmony export BearerTokenFetchClient */\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PnPClientStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return getCtxCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return dateAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return combine; });\n/* unused harmony export getRandomString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getGUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return isFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return objectDefinedNotNull; });\n/* unused harmony export isArray */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return isUrlAbsolute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return stringIsNullOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getAttrValueFromString; });\n/* unused harmony export sanitizeGuid */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return jsS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return hOP; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__);\n/**\n@license\n * @pnp/common v1.1.5-1 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = Object(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__[\"inject\"])({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o === undefined) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(localStorage);\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(sessionStorage);\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (s) {\r\n        return s !== undefined ? new PnPClientStorageWrapper(s) : new PnPClientStorageWrapper(new MemoryStorage());\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObjectPath; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = opSetId;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = opSetPathId;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = opSetParentId;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = opSetPathParamId;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ObjectPathQueue; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__opactionbuilders__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__opbuilders__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils__ = __webpack_require__(7);\n\r\n\r\n\r\n\r\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(Object(__WEBPACK_IMPORTED_MODULE_2__opbuilders__[\"d\" /* property */])(\"Site\", \r\n                // actions\r\n                Object(__WEBPACK_IMPORTED_MODULE_1__opactionbuilders__[\"c\" /* objectPath */])()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(Object(__WEBPACK_IMPORTED_MODULE_2__opbuilders__[\"d\" /* property */])(\"Web\", \r\n                // actions\r\n                Object(__WEBPACK_IMPORTED_MODULE_1__opactionbuilders__[\"c\" /* objectPath */])()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(Object(__WEBPACK_IMPORTED_MODULE_2__opbuilders__[\"f\" /* staticProperty */])(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                Object(__WEBPACK_IMPORTED_MODULE_1__opactionbuilders__[\"c\" /* objectPath */])()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = Object(__WEBPACK_IMPORTED_MODULE_3__utils__[\"a\" /* writeObjectPathBody */])(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\r\n\r\n//# sourceMappingURL=objectpath.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = objectPath;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = identityQuery;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = opQuery;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = setProperty;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = methodAction;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = objectProperties;\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\r\n//# sourceMappingURL=opactionbuilders.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = property;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = staticMethod;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = staticProperty;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = objConstructor;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MethodParams; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = method;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__objectpath__ = __webpack_require__(2);\n\r\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new __WEBPACK_IMPORTED_MODULE_0__objectpath__[\"a\" /* ObjectPath */](\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new __WEBPACK_IMPORTED_MODULE_0__objectpath__[\"a\" /* ObjectPath */](\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new __WEBPACK_IMPORTED_MODULE_0__objectpath__[\"a\" /* ObjectPath */](\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new __WEBPACK_IMPORTED_MODULE_0__objectpath__[\"a\" /* ObjectPath */](\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\n\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new __WEBPACK_IMPORTED_MODULE_0__objectpath__[\"a\" /* ObjectPath */](builder.join(\"\"), actions);\r\n}\r\n//# sourceMappingURL=opbuilders.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/* unused harmony export LogLevel */\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\n@license\n * @pnp/logging v1.1.5-1 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CachingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CachingParserWrapper; });\n/* unused harmony export ProcessHttpClientResponseException */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ODataParserBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return TextParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BlobParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return JSONParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BufferParser; });\n/* unused harmony export LambdaParser */\n/* unused harmony export setResult */\n/* unused harmony export pipe */\n/* unused harmony export requestPipelineMethod */\n/* unused harmony export PipelineMethods */\n/* unused harmony export getDefaultPipeline */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AlreadyInBatchException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return Queryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(5);\n/**\n@license\n * @pnp/odata v1.1.5-1 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, e));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"d\")) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n        data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(args[0], \"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = writeObjectPathBody;\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\r\n//# sourceMappingURL=utils.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ProcessQueryParser; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n\r\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (result && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\r\n\r\n//# sourceMappingURL=parsers.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ClientSvcQueryable; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_odata__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_sp__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__objectpath__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__opactionbuilders__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__opbuilders__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parsers__ = __webpack_require__(8);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"d\" /* combine */])(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(_this._objectPaths)) {\r\n                _this._objectPaths = new __WEBPACK_IMPORTED_MODULE_4__objectpath__[\"b\" /* ObjectPathQueue */]();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"d\" /* combine */])(parent._parentUrl, ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"a\" /* AlreadyInBatchException */]();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_6__opbuilders__[\"b\" /* method */])(methodName, params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"c\" /* objectPath */])()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_6__opbuilders__[\"d\" /* property */])(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new __WEBPACK_IMPORTED_MODULE_7__parsers__[\"a\" /* ProcessQueryParser */](objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\" /* hOP */])(options, \"body\")) {\r\n                options = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"e\" /* opQuery */])(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"e\" /* opQuery */])([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"e\" /* opQuery */])([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"e\" /* opQuery */])([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"d\" /* objectProperties */])(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"e\" /* opQuery */])([], null));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return Object(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"b\" /* toAbsoluteUrl */])(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"o\" /* mergeOptions */])(options, _this._options);\r\n            var headers = new Headers();\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"n\" /* mergeHeaders */])(headers, options.headers);\r\n            Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"n\" /* mergeHeaders */])(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"d\" /* CachingOptions */](cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new __WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"a\" /* SPHttpClient */](); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"b\" /* methodAction */])(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(__WEBPACK_IMPORTED_MODULE_6__opbuilders__[\"b\" /* method */].apply(void 0, [methodName, params].concat([Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"c\" /* objectPath */])()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"k\" /* Queryable */]));\r\n\r\n//# sourceMappingURL=clintsvcqueryable.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__ = __webpack_require__(12);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ObjectPathBatch\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ClientSvcQueryable\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ObjectPath\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"opSetId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"opSetPathId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"p\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"opSetParentId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"o\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"opSetPathParamId\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"q\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ObjectPathQueue\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"objectPath\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"identityQuery\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"opQuery\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"setProperty\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"s\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"methodAction\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"objectProperties\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"property\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"r\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"staticMethod\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"t\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"staticProperty\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"u\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"objConstructor\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MethodParams\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"method\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ProcessQueryParser\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"writeObjectPathBody\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_clientsvc__[\"v\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__batch__ = __webpack_require__(13);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_0__batch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__clintsvcqueryable__ = __webpack_require__(10);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_1__clintsvcqueryable__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectpath__ = __webpack_require__(2);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_2__objectpath__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__ = __webpack_require__(3);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_3__opactionbuilders__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__opbuilders__ = __webpack_require__(4);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_4__opbuilders__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__parsers__ = __webpack_require__(8);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__parsers__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils__ = __webpack_require__(7);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"v\", function() { return __WEBPACK_IMPORTED_MODULE_6__utils__[\"a\"]; });\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=clientsvc.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ObjectPathBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_logging__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_odata__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__clintsvcqueryable__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__objectpath__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__opactionbuilders__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__opbuilders__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parsers__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils__ = __webpack_require__(7);\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"g\" /* ODataBatch */]));\r\n\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method = Object(__WEBPACK_IMPORTED_MODULE_6__opbuilders__[\"e\" /* staticMethod */])(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method.path = Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"c\" /* opSetId */])(\"0\", method.path);\r\n        method.actions.push(Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"c\" /* opSetId */])(\"1\", Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"e\" /* opSetPathId */])(\"0\", Object(__WEBPACK_IMPORTED_MODULE_5__opactionbuilders__[\"c\" /* objectPath */])())));\r\n        _this._objectPaths.add(method);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"d\" /* opSetParentId */])(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"f\" /* opSetPathParamId */])(idIndexMap, Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"c\" /* opSetId */])(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"d\" /* opSetParentId */])(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"c\" /* opSetId */])(actionId.toString(), Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"e\" /* opSetPathId */])(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = Object(__WEBPACK_IMPORTED_MODULE_4__objectpath__[\"d\" /* opSetParentId */])(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new __WEBPACK_IMPORTED_MODULE_4__objectpath__[\"a\" /* ObjectPath */](path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_7__parsers__[\"a\" /* ProcessQueryParser */](obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_8__utils__[\"a\" /* writeObjectPathBody */])(this._objectPaths.toArray()),\r\n        };\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                __WEBPACK_IMPORTED_MODULE_1__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(__WEBPACK_IMPORTED_MODULE_3__clintsvcqueryable__[\"a\" /* ClientSvcQueryable */]));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(__WEBPACK_IMPORTED_MODULE_7__parsers__[\"a\" /* ProcessQueryParser */]));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]));\r\n//# sourceMappingURL=batch.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export odataUrlFrom */\n/* unused harmony export spODataEntity */\n/* unused harmony export spODataEntityArray */\n/* unused harmony export SharePointQueryable */\n/* unused harmony export SharePointQueryableInstance */\n/* unused harmony export SharePointQueryableCollection */\n/* unused harmony export SharePointQueryableSecurable */\n/* unused harmony export FileFolderShared */\n/* unused harmony export SharePointQueryableShareable */\n/* unused harmony export SharePointQueryableShareableFile */\n/* unused harmony export SharePointQueryableShareableFolder */\n/* unused harmony export SharePointQueryableShareableItem */\n/* unused harmony export SharePointQueryableShareableWeb */\n/* unused harmony export AppCatalog */\n/* unused harmony export App */\n/* unused harmony export ContentType */\n/* unused harmony export ContentTypes */\n/* unused harmony export FieldLink */\n/* unused harmony export FieldLinks */\n/* unused harmony export Field */\n/* unused harmony export Fields */\n/* unused harmony export CheckinType */\n/* unused harmony export WebPartsPersonalizationScope */\n/* unused harmony export MoveOperations */\n/* unused harmony export TemplateFileType */\n/* unused harmony export File */\n/* unused harmony export Files */\n/* unused harmony export Folder */\n/* unused harmony export Folders */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPHttpClient; });\n/* unused harmony export Item */\n/* unused harmony export Items */\n/* unused harmony export ItemVersion */\n/* unused harmony export ItemVersions */\n/* unused harmony export PagedItemCollection */\n/* unused harmony export NavigationNodes */\n/* unused harmony export NavigationNode */\n/* unused harmony export NavigationService */\n/* unused harmony export List */\n/* unused harmony export Lists */\n/* unused harmony export RegionalSettings */\n/* unused harmony export InstalledLanguages */\n/* unused harmony export TimeZone */\n/* unused harmony export TimeZones */\n/* unused harmony export sp */\n/* unused harmony export SPRest */\n/* unused harmony export RoleDefinitionBindings */\n/* unused harmony export Search */\n/* unused harmony export SearchQueryBuilder */\n/* unused harmony export SearchResults */\n/* unused harmony export SortDirection */\n/* unused harmony export ReorderingRuleMatchType */\n/* unused harmony export QueryPropertyValueType */\n/* unused harmony export SearchBuiltInSourceId */\n/* unused harmony export SearchSuggest */\n/* unused harmony export Site */\n/* unused harmony export UserProfileQuery */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return toAbsoluteUrl; });\n/* unused harmony export extractWebUrl */\n/* unused harmony export UtilityMethod */\n/* unused harmony export View */\n/* unused harmony export Views */\n/* unused harmony export ViewFields */\n/* unused harmony export WebPartDefinitions */\n/* unused harmony export WebPartDefinition */\n/* unused harmony export WebPart */\n/* unused harmony export Web */\n/* unused harmony export PromotedState */\n/* unused harmony export ClientSidePage */\n/* unused harmony export CanvasSection */\n/* unused harmony export CanvasControl */\n/* unused harmony export CanvasColumn */\n/* unused harmony export ClientSidePart */\n/* unused harmony export ClientSideText */\n/* unused harmony export ClientSideWebpart */\n/* unused harmony export Comments */\n/* unused harmony export Comment */\n/* unused harmony export Replies */\n/* unused harmony export SocialQuery */\n/* unused harmony export MySocialQuery */\n/* unused harmony export SocialActorType */\n/* unused harmony export SocialActorTypes */\n/* unused harmony export SocialFollowResult */\n/* unused harmony export SocialStatusCode */\n/* unused harmony export ControlMode */\n/* unused harmony export FieldTypes */\n/* unused harmony export DateTimeFieldFormatType */\n/* unused harmony export AddFieldOptions */\n/* unused harmony export CalendarType */\n/* unused harmony export UrlFieldFormatType */\n/* unused harmony export PermissionKind */\n/* unused harmony export PrincipalType */\n/* unused harmony export PrincipalSource */\n/* unused harmony export RoleType */\n/* unused harmony export PageType */\n/* unused harmony export SharingLinkKind */\n/* unused harmony export SharingRole */\n/* unused harmony export SharingOperationStatusCode */\n/* unused harmony export SPSharedObjectType */\n/* unused harmony export SharingDomainRestrictionMode */\n/* unused harmony export RenderListDataOptions */\n/* unused harmony export FieldUserSelectionMode */\n/* unused harmony export ChoiceFieldFormatType */\n/* unused harmony export UrlZone */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(6);\n/**\n@license\n * @pnp/sp v1.1.5-1 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"q\" /* stringIsNullOrEmpty */])(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[3]) && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */].apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== undefined && __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* FetchClient */](); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-1\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.5-1\");\r\n        }\r\n        opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getCtxCallback */])(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl.slice(index), path);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        url += \"?\" + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Curries the getById function\r\n     *\r\n     * @param factory Class to create for the id\r\n     */\r\n    SharePointQueryableCollection.prototype._getById = function (factory) {\r\n        var _this = this;\r\n        return function (id) {\r\n            if (typeof id === \"number\") {\r\n                return (new factory(_this)).concat(\"(\" + id + \")\");\r\n            }\r\n            else {\r\n                return (new factory(_this)).concat(\"('\" + id + \"')\");\r\n            }\r\n        };\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a user from the collection by id\r\n         *\r\n         * @param id The id of the user to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteUser);\r\n        return _this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    SiteUsers = SiteUsers_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n    var SiteUsers_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a group from the collection by id\r\n         *\r\n         * @param id The id of the group to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteGroup);\r\n        return _this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    SiteGroups = SiteGroups_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n    var SiteGroups_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role assignment associated with the specified principal id from the collection.\r\n         *\r\n         * @param id The id of the role assignment\r\n         */\r\n        _this.getById = _this._getById(RoleAssignment);\r\n        return _this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    RoleAssignments = RoleAssignments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n    var RoleAssignments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role definition with the specified id from the collection\r\n         *\r\n         * @param id The id of the role definition\r\n         *\r\n         */\r\n        _this.getById = _this._getById(RoleDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            BasePermissions: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a web part definition from the collection by id\r\n         *\r\n         * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n         */\r\n        _this.getById = _this._getById(WebPartDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    Folders = Folders_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n    var Folders_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ContentType);\r\n        return _this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    ContentTypes = ContentTypes_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n    var ContentTypes_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(FieldLink);\r\n        return _this;\r\n    }\r\n    FieldLinks = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    AttachmentFiles = AttachmentFiles_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n    var AttachmentFiles_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    function Views() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a view by guid id\r\n         *\r\n         * @param id The GUID id of the view\r\n         */\r\n        _this.getById = _this._getById(View);\r\n        return _this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    Views = Views_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n    var Views_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    ViewFields = ViewFields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n    var ViewFields_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    function Fields() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param title The Id of the list\r\n         */\r\n        _this.getById = _this._getById(Field);\r\n        return _this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.FieldCreationInformation\"), {\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n            }, properties),\r\n        }));\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    Fields = Fields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n    var Fields_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    function Forms() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Form);\r\n        return _this;\r\n    }\r\n    Forms = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns all the webhook subscriptions or the specified webhook subscription\r\n         *\r\n         * @param id The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n         */\r\n        _this.getById = _this._getById(Subscription);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns the user custom action with the specified id\r\n         *\r\n         * @param id The GUID id of the user custom action to retrieve\r\n         */\r\n        _this.getById = _this._getById(UserCustomAction);\r\n        return _this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    UserCustomActions = UserCustomActions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n    var UserCustomActions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    function Lists() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the list (GUID)\r\n         */\r\n        _this.getById = _this._getById(List);\r\n        return _this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    Lists = Lists_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n    var Lists_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comments, _super);\r\n    function Comments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Comment);\r\n        return _this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    Comments = Comments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n    var Comments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    Replies = Replies_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n    var Replies_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    function Items() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Item);\r\n        return _this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^[\\$select|\\$filter|\\$top|\\$expand]$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    Items = Items_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n    var Items_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ItemVersion);\r\n        return _this;\r\n    }\r\n    ItemVersions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"d\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    Files = Files_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n    var Files_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    function Versions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Version);\r\n        return _this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    Versions = Versions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n    var Versions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(NavigationNode);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    TimeZone = TimeZone_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n    var TimeZone_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    TimeZones = TimeZones_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n    var TimeZones_1;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\n// after: https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\r\nfunction toCamelCase(str) {\r\n    return str\r\n        .replace(/\\s(.)/g, function ($1) { return $1.toUpperCase(); })\r\n        .replace(/\\s/g, \"\")\r\n        .replace(/^(.)/, function ($1) { return $1.toLowerCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toCamelCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toCamelCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            request: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    Search = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(reqInfo.url) ? reqInfo.url : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(reqInfo, \"options\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-1\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataBatch */]));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    function Features() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the feature (GUID)\r\n         */\r\n        _this.getById = _this._getById(Feature);\r\n        return _this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    Features = Features_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n    var Features_1;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n    var RelatedItemManagerImpl_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    Webs = Webs_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n    var Webs_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    Web = Web_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n    var Web_1;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    Site = Site_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n    var Site_1;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    ProfileLoader = ProfileLoader_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n    var ProfileLoader_1;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"queryParams\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n    var ClientPeoplePickerQuery_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    SocialQuery = SocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n    var SocialQuery_1;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    MySocialQuery = MySocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n    var MySocialQuery_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(query, \"_query\")) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9)))\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sp-clientsvc.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2f0016317e34ca65f8c","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","/**\n@license\n * @pnp/common v1.1.5-1 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { __extends } from 'tslib';\nimport { inject } from 'adal-angular/dist/adal.min.js';\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    __extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o === undefined) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(localStorage);\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(sessionStorage);\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (s) {\r\n        return s !== undefined ? new PnPClientStorageWrapper(s) : new PnPClientStorageWrapper(new MemoryStorage());\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\nexport { AdalClient, objectToMap, mergeMaps, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combine, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, jsS, hOP };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 1\n// module chunks = 0","import { extend, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { property, staticProperty } from \"./opbuilders\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\nexport { ObjectPath };\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nexport function opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\r\nexport { ObjectPathQueue };\r\n//# sourceMappingURL=objectpath.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/objectpath.js\n// module id = 2\n// module chunks = 0","export function objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nexport function setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\r\n//# sourceMappingURL=opactionbuilders.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/opactionbuilders.js\n// module id = 3\n// module chunks = 0","import { ObjectPath } from \"./objectpath\";\r\nexport function property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nexport function staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nexport { MethodParams };\r\nexport function method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\r\n//# sourceMappingURL=opbuilders.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/opbuilders.js\n// module id = 4\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.1.5-1 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 5\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.1.5-1 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { RuntimeConfig, dateAdd, PnPClientStorage, isFunc, hOP, extend, combine, mergeOptions, objectDefinedNotNull, getGUID } from '@pnp/common';\nimport { __decorate, __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, e));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    __extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    __extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    __extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    __extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ProcessHttpClientResponseException, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, LambdaParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, AlreadyInBatchException, Queryable, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 6\n// module chunks = 0","/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nexport function writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\r\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/utils.js\n// module id = 7\n// module chunks = 0","import { getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\r\nexport { ProcessQueryParser };\r\n//# sourceMappingURL=parsers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/parsers.js\n// module id = 8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, getGUID, mergeHeaders, mergeOptions, objectDefinedNotNull, hOP } from \"@pnp/common\";\r\nimport { AlreadyInBatchException, CachingOptions, Queryable } from \"@pnp/odata\";\r\nimport { SPHttpClient, toAbsoluteUrl } from \"@pnp/sp\";\r\nimport { ObjectPathQueue } from \"./objectpath\";\r\nimport { methodAction, objectPath, objectProperties, opQuery } from \"./opactionbuilders\";\r\nimport { method, property } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\r\nexport { ClientSvcQueryable };\r\n//# sourceMappingURL=clintsvcqueryable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/clintsvcqueryable.js\n// module id = 10\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingParserWrapper, ODataBatch } from \"@pnp/odata\";\r\nimport { ClientSvcQueryable } from \"./clintsvcqueryable\";\r\nimport { ObjectPath, opSetId, opSetParentId, opSetPathId, opSetPathParamId } from \"./objectpath\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { staticMethod } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nexport { ObjectPathBatch };\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method.path = opSetId(\"0\", method.path);\r\n        method.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\r\n//# sourceMappingURL=batch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-clientsvc/es5/src/batch.js\n// module id = 13\n// module chunks = 0","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adal-angular/dist/adal.min.js\n// module id = 14\n// module chunks = 0","/**\n@license\n * @pnp/sp v1.1.5-1 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { stringIsNullOrEmpty, extend, combine, hOP, RuntimeConfig, FetchClient, mergeHeaders, getCtxCallback, isUrlAbsolute, mergeOptions, getGUID, jsS, getAttrValueFromString, dateAdd } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\nimport { ODataParserBase, ODataDefaultParser, ODataQueryable, TextParser, BlobParser, JSONParser, BufferParser, ODataBatch } from '@pnp/odata';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-1\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.5-1\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        url += \"?\" + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Curries the getById function\r\n     *\r\n     * @param factory Class to create for the id\r\n     */\r\n    SharePointQueryableCollection.prototype._getById = function (factory) {\r\n        var _this = this;\r\n        return function (id) {\r\n            if (typeof id === \"number\") {\r\n                return (new factory(_this)).concat(\"(\" + id + \")\");\r\n            }\r\n            else {\r\n                return (new factory(_this)).concat(\"('\" + id + \"')\");\r\n            }\r\n        };\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a user from the collection by id\r\n         *\r\n         * @param id The id of the user to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteUser);\r\n        return _this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    SiteUsers = SiteUsers_1 = __decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n    var SiteUsers_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = __decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a group from the collection by id\r\n         *\r\n         * @param id The id of the group to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteGroup);\r\n        return _this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    SiteGroups = SiteGroups_1 = __decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n    var SiteGroups_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role assignment associated with the specified principal id from the collection.\r\n         *\r\n         * @param id The id of the role assignment\r\n         */\r\n        _this.getById = _this._getById(RoleAssignment);\r\n        return _this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    RoleAssignments = RoleAssignments_1 = __decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n    var RoleAssignments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role definition with the specified id from the collection\r\n         *\r\n         * @param id The id of the role definition\r\n         *\r\n         */\r\n        _this.getById = _this._getById(RoleDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = __decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = __decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a web part definition from the collection by id\r\n         *\r\n         * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n         */\r\n        _this.getById = _this._getById(WebPartDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = __decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    Folders = Folders_1 = __decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n    var Folders_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ContentType);\r\n        return _this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    ContentTypes = ContentTypes_1 = __decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n    var ContentTypes_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(FieldLink);\r\n        return _this;\r\n    }\r\n    FieldLinks = __decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    AttachmentFiles = AttachmentFiles_1 = __decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n    var AttachmentFiles_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    function Views() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a view by guid id\r\n         *\r\n         * @param id The GUID id of the view\r\n         */\r\n        _this.getById = _this._getById(View);\r\n        return _this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    Views = Views_1 = __decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n    var Views_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    ViewFields = ViewFields_1 = __decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n    var ViewFields_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    function Fields() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param title The Id of the list\r\n         */\r\n        _this.getById = _this._getById(Field);\r\n        return _this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(\"SP.FieldCreationInformation\"), {\r\n            parameters: extend({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n            }, properties),\r\n        }));\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    Fields = Fields_1 = __decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n    var Fields_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    function Forms() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Form);\r\n        return _this;\r\n    }\r\n    Forms = __decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns all the webhook subscriptions or the specified webhook subscription\r\n         *\r\n         * @param id The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n         */\r\n        _this.getById = _this._getById(Subscription);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = __decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns the user custom action with the specified id\r\n         *\r\n         * @param id The GUID id of the user custom action to retrieve\r\n         */\r\n        _this.getById = _this._getById(UserCustomAction);\r\n        return _this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    UserCustomActions = UserCustomActions_1 = __decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n    var UserCustomActions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    function Lists() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the list (GUID)\r\n         */\r\n        _this.getById = _this._getById(List);\r\n        return _this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    Lists = Lists_1 = __decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n    var Lists_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (hOP(data, \"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (hOP(data, \"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    __extends(Comments, _super);\r\n    function Comments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Comment);\r\n        return _this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    Comments = Comments_1 = __decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n    var Comments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    __extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    __extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    Replies = Replies_1 = __decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n    var Replies_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    function Items() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Item);\r\n        return _this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^[\\$select|\\$filter|\\$top|\\$expand]$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    Items = Items_1 = __decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n    var Items_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ItemVersion);\r\n        return _this;\r\n    }\r\n    ItemVersions = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    Files = Files_1 = __decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n    var Files_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    function Versions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Version);\r\n        return _this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    Versions = Versions_1 = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n    var Versions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    __extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(NavigationNode);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = __decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = __decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = __decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    TimeZone = TimeZone_1 = __decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n    var TimeZone_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    TimeZones = TimeZones_1 = __decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n    var TimeZones_1;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\n// after: https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\r\nfunction toCamelCase(str) {\r\n    return str\r\n        .replace(/\\s(.)/g, function ($1) { return $1.toUpperCase(); })\r\n        .replace(/\\s/g, \"\")\r\n        .replace(/^(.)/, function ($1) { return $1.toLowerCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toCamelCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toCamelCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    Search = __decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = __decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-1\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    function Features() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the feature (GUID)\r\n         */\r\n        _this.getById = _this._getById(Feature);\r\n        return _this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    Features = Features_1 = __decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n    var Features_1;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = __decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n    var RelatedItemManagerImpl_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    Webs = Webs_1 = __decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n    var Webs_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = __decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    Web = Web_1 = __decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n    var Web_1;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    Site = Site_1 = __decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n    var Site_1;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    ProfileLoader = ProfileLoader_1 = __decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n    var ProfileLoader_1;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    __extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = __decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n    var ClientPeoplePickerQuery_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    SocialQuery = SocialQuery_1 = __decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n    var SocialQuery_1;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    MySocialQuery = MySocialQuery_1 = __decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n    var MySocialQuery_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (hOP(query, \"_query\")) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { odataUrlFrom, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, ContentType, ContentTypes, FieldLink, FieldLinks, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, RegionalSettings, InstalledLanguages, TimeZone, TimeZones, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, Site, UserProfileQuery, toAbsoluteUrl, extractWebUrl, UtilityMethod, View, Views, ViewFields, WebPartDefinitions, WebPartDefinition, WebPart, Web, PromotedState, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSidePart, ClientSideText, ClientSideWebpart, Comments, Comment, Replies, SocialQuery, MySocialQuery, SocialActorType, SocialActorTypes, SocialFollowResult, SocialStatusCode, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType, UrlZone };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}