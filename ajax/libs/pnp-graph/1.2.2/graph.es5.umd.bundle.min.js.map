{"version":3,"sources":["webpack://pnp.graph/webpack/universalModuleDefinition","webpack://pnp.graph/webpack/bootstrap","webpack://pnp.graph/./build/packages/common/src/util.js","webpack://pnp.graph/./build/packages/common/src/netutil.js","webpack://pnp.graph/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.graph/(webpack)/buildin/global.js","webpack://pnp.graph/./node_modules/tslib/tslib.es6.js","webpack://pnp.graph/./build/packages/common/src/adalclient.js","webpack://pnp.graph/./build/packages/common/src/collections.js","webpack://pnp.graph/./build/packages/common/src/libconfig.js","webpack://pnp.graph/./build/packages/common/src/storage.js","webpack://pnp.graph/./build/packages/odata/src/caching.js","webpack://pnp.graph/./build/packages/odata/src/parsers.js","webpack://pnp.graph/./build/packages/logging/src/logger.js","webpack://pnp.graph/./build/packages/logging/src/loglevel.js","webpack://pnp.graph/./build/packages/odata/src/pipeline.js","webpack://pnp.graph/./build/packages/odata/src/queryable.js","webpack://pnp.graph/./build/packages/graph/es5/src/config/graphlibconfig.js","webpack://pnp.graph/./build/packages/graph/es5/src/groups.js","webpack://pnp.graph/./build/packages/graph/es5/src/net/graphhttpclient.js","webpack://pnp.graph/./build/packages/graph/es5/src/types.js","webpack://pnp.graph/./build/packages/graph/es5/src/graphqueryable.js","webpack://pnp.graph/./build/packages/graph/es5/src/members.js","webpack://pnp.graph/./build/packages/graph/es5/src/calendars.js","webpack://pnp.graph/./build/packages/graph/es5/src/attachments.js","webpack://pnp.graph/./build/packages/graph/es5/src/conversations.js","webpack://pnp.graph/./build/packages/graph/es5/src/plans.js","webpack://pnp.graph/./build/packages/graph/es5/src/photos.js","webpack://pnp.graph/./build/packages/graph/es5/src/teams.js","webpack://pnp.graph/./build/packages/graph/es5/src/onenote.js","webpack://pnp.graph/./build/packages/graph/es5/src/contacts.js","webpack://pnp.graph/./build/packages/graph/es5/src/me.js","webpack://pnp.graph/./build/packages/graph/es5/src/users.js","webpack://pnp.graph/./build/packages/graph/es5/src/rest.js","webpack://pnp.graph/./build/packages/graph/es5/src/batch.js","webpack://pnp.graph/./build/packages/odata/src/odatabatch.js","webpack://pnp.graph/./build/packages/graph/es5/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getCtxCallback","context","method","params","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combine","paths","filter","path","stringIsNullOrEmpty","map","replace","join","getGUID","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","extend","target","source","noOverwrite","check","getOwnPropertyNames","v","reduce","isUrlAbsolute","url","test","length","jsS","JSON","stringify","hOP","__webpack_exports__","global","mergeHeaders","mergeOptions","BearerTokenFetchClient","_util__WEBPACK_IMPORTED_MODULE_0__","Request","headers","forEach","append","FetchClient","[object Object]","options","fetch","_token","super","this","token","Headers","set","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","config","callback","popUp","isAngular","_user","_activeRenewals","_loginInProgress","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","displayCall","Error","clientId","_cloneConfig","navigateToLoginRequestUrl","loginResource","redirectUri","location","href","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","login","info","_guid","state","_idTokenNonce","b","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","push","registerCallback","_loginPopup","promptUser","_openPopup","e","screenLeft","screenX","f","screenTop","screenY","g","innerWidth","document","documentElement","clientWidth","body","h","innerHeight","clientHeight","j","k","open","focus","warn","message","_handlePopupError","indexOf","setInterval","closed","_broadcast","clearInterval","encodeURI","hash","handleWindowCallback","close","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","getCachedUser","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","RegExp","_loadFrame","setTimeout","acquireToken","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","tenant","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","parse","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","exec","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","createElement","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","localStorage","setItem","_supportsSessionStorage","sessionStorage","getItem","removeItem","_libVersion","toUTCString","stack","errorPii","warnPii","inject","Function","eval","extendStatics","setPrototypeOf","__proto__","Array","__extends","__","constructor","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","adalclient_AdalClient","netutil","_displayCallback","_loginPromise","spfxContext","cliendId","pageContext","aadInfo","tenantId","util","origin","getToken","getResource","then","resource","Promise","resolve","reject","ensureAuthContext","_","_authContext","catch","adal_min","popupWindow","pollTimer","URL","parser","protocol","hostname","objectEntries","entries","keys","RuntimeConfig","_v","Map","maps","mergeMaps","objectToMap","defaultCachingStore","defaultCachingTimeoutSeconds","globalCacheDisable","enableCacheExpiration","cacheExpirationIntervalMilliseconds","storage_PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","cacheExpirationHandler","persistable","expiration","delete","expire","createPersistable","put","defaultTimeout","pnp","deleteExpired","console","MemoryStorage","_store","size","clear","index","from","data","caching_CachingOptions","storeName","storage","local","session","_local","_session","getStore","CachingParserWrapper","cacheOptions","response","cacheData","HttpRequestError","status","statusText","isHttpRequestError","parsers_ODataParserBase","handleError","parseImpl","has","parseFloat","text","txt","json","parseODataJSON","ok","clone","result","results","ODataDefaultParser","JSONParser","Logger","activeLogLevel","_instance","LoggerImpl","listeners","listener","subscribe","clearSubscribers","count","write","entry","err","subscribers","subscriber","LogLevel","setResult","hasResult","next","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","verb","requestAbsoluteUrl","isCached","cachingOptions","batchDependency","hydrate","add","batchId","client","clientFactory","opts","getDefaultPipeline","logStart","caching","send","logEnd","queryable_Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","pathPart","query","toRequestContext","parentUrl","configureFrom","GroupType","GraphRuntimeConfig","GraphRuntimeConfigImpl","graphPart","configurable","fetchClientFactory","fromSPFxContext","graphhttpclient_GraphHttpClient","GraphHttpClient","_impl","fetchRaw","_this","rawHeaders","retry","delay","attempts","retryCount","retryContext","post","patch","GraphEndpoints","ensure","endpoint","all","Beta","V1","regex","replaces","graphqueryable_GraphQueryable","_super","GraphQueryable","baseUrl","urlStr","as","toUrlAndQuery","toUrl","getParent","additionalPath","includeBatch","configure","inBatch","_batch","setEndpoint","hasBatch","getCore","addDependency","graphqueryable_GraphQueryableCollection","GraphQueryableCollection","select","selects","_i","expand","expands","orderBy","ascending","top","skip","num","skipToken","graphqueryable_GraphQueryableSearchableCollection","GraphQueryableSearchableCollection","search","graphqueryable_GraphQueryableInstance","GraphQueryableInstance","members_Members","Members","id","postCore","@odata.id","getById","members_Member","Member","members_Owners","Owners","calendars_Calendar","Calendars","Calendar","calendars_Events","Events","calendars_Event","properties","event","update","patchCore","deleteCore","attachments_Attachments","Attachments","attachments_Attachment","addFile","bytes","@odata.type","contentBytes","Attachment","conversations_Conversations","Conversations","conversations_Conversation","conversations_Threads","Threads","conversations_Thread","conversations_Posts","Posts","conversations_Post","Conversation","Thread","reply","Post","forward","conversations_Senders","Senders","remove","remover","plans_Plans","Plans","plans_Plan","Plan","photos_Photo","Photo","getBlob","blob","getBuffer","arrayBuffer","buffer","setContent","content","teams_Teams","Teams","description","teamProperties","groupProps","graph","groups","Office365","gar","group","createTeam","team","teams_Team","Team","groups_Groups","Groups","groups_Group","mailNickname","groupType","additionalProperties","postBody","displayName","mailEnabled","securityEnabled","Security","groupTypes","Group","addFavorite","putCore","getMemberGroups","securityEnabledOnly","removeFavorite","resetUnseenCount","subscribeByMail","unsubscribeByMail","getCalendarView","start","end","view","toISOString","onenote_OneNote","OneNote","onenote_Notebooks","onenote_Sections","onenote_Pages","Notebooks","onenote_Notebook","notebook","Notebook","Sections","onenote_Section","section","Section","Pages","contacts_Contacts","Contacts","contacts_Contact","givenName","surName","emailAddresses","businessPhones","contact","Contact","contacts_ContactFolders","ContactFolders","contacts_ContactFolder","parentFolderId","contactFolder","ContactFolder","contacts_ChildFolders","ChildFolders","me_Me","Me","users_Users","Users","users_User","User","rest_GraphRest","GraphRest","setup","graphlibconfig_setup","batch_GraphBatch","GraphBatch","batchUrl","executeImpl","requests","batchRequest","formatRequests","batchOptions","Accept","Content-Type","_parseResponse","parsedResponse","responses","chain","request","nextLink","reqInfo","requestFragment","graphResponse","parsedResponses","fill","responseId","Response","_batchId","_reqs","_deps","_rDeps","toUpperCase","resolver"],"mappings":"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","file":"graph.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.graph\"] = factory();\n\telse\n\t\troot[\"pnp.graph\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method, ...params) {\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    let ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine(...paths) {\r\n    return paths\r\n        .filter(path => !stringIsNullOrEmpty(path))\r\n        .map(path => path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"))\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    const text = new Array(chars);\r\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    let d = new Date().getTime();\r\n    const guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite = false, filter = () => true) {\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    const check = noOverwrite ? (o, i) => !(i in o) : () => true;\r\n    // final filter we will use\r\n    const f = (v) => check(target, v) && filter(v);\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce((t, v) => {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const reg = new RegExp(`${attrName}\\\\s*?=\\\\s*?(\"|')([^\\\\1]*?)\\\\1`, \"i\");\r\n    const match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    const matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    let hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (let i = 0; i < s.length; i++) {\r\n        const chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        const temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach((value, name) => {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        const headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nexport class FetchClient {\r\n    fetch(url, options) {\r\n        return global.fetch(url, options);\r\n    }\r\n}\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nexport class BearerTokenFetchClient extends FetchClient {\r\n    constructor(_token) {\r\n        super();\r\n        this._token = _token;\r\n    }\r\n    get token() {\r\n        return this._token || \"\";\r\n    }\r\n    set token(token) {\r\n        this._token = token;\r\n    }\r\n    fetch(url, options = {}) {\r\n        const headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", `Bearer ${this._token}`);\r\n        options.headers = headers;\r\n        return super.fetch(url, options);\r\n    }\r\n}\r\n//# sourceMappingURL=netutil.js.map","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { BearerTokenFetchClient } from \"./netutil\";\r\nimport { combine, isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nexport class AdalClient extends BearerTokenFetchClient {\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    constructor(clientId, tenant, redirectUri) {\r\n        super(null);\r\n        this.clientId = clientId;\r\n        this.tenant = tenant;\r\n        this.redirectUri = redirectUri;\r\n        this._displayCallback = null;\r\n        this._loginPromise = null;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    static fromSPFxContext(spfxContext, cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\") {\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    }\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    fetch(url, options) {\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(token => {\r\n            this.token = token;\r\n            return super.fetch(url, options);\r\n        });\r\n    }\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    getToken(resource) {\r\n        return new Promise((resolve, reject) => {\r\n            this.ensureAuthContext().then(_ => this.login()).then(_ => {\r\n                AdalClient._authContext.acquireToken(resource, (message, token) => {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    ensureAuthContext() {\r\n        return new Promise(resolve => {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: this.clientId,\r\n                    displayCall: (url) => {\r\n                        if (this._displayCallback) {\r\n                            this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: this.redirectUri,\r\n                    tenant: this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    login() {\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise((resolve, reject) => {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            this._displayCallback = (url) => {\r\n                const popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                const pollTimer = window.setInterval(() => {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            this.ensureAuthContext().then(_ => {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    }\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    getResource(url) {\r\n        const parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return `${parser.protocol}//${parser.hostname}`;\r\n    }\r\n}\r\n/**\r\n * Our auth context\r\n */\r\nAdalClient._authContext = null;\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nconst objectEntries = isFunc(Object.entries) ? Object.entries : (o) => Object.keys(o).map((k) => [k, o[k]]);\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target, ...maps) {\r\n    for (let i = 0; i < maps.length; i++) {\r\n        maps[i].forEach((v, k) => {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nconst s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nexport class RuntimeConfigImpl {\r\n    constructor(_v = new Map()) {\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    extend(config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    }\r\n    get(key) {\r\n        return this._v.get(key);\r\n    }\r\n    get defaultCachingStore() {\r\n        return this.get(s[0]);\r\n    }\r\n    get defaultCachingTimeoutSeconds() {\r\n        return this.get(s[1]);\r\n    }\r\n    get globalCacheDisable() {\r\n        return this.get(s[2]);\r\n    }\r\n    get enableCacheExpiration() {\r\n        return this.get(s[3]);\r\n    }\r\n    get cacheExpirationIntervalMilliseconds() {\r\n        return this.get(s[4]);\r\n    }\r\n    get spfxContext() {\r\n        return this.get(s[5]);\r\n    }\r\n}\r\nconst _runtimeConfig = new RuntimeConfigImpl();\r\nexport let RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nexport class PnPClientStorageWrapper {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(store, defaultTimeoutMinutes = -1) {\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    get(key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        const o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        const persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    put(key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    }\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    delete(key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    getOrPut(key, getter, expire) {\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise((resolve) => {\r\n            const o = this.get(key);\r\n            if (o == null) {\r\n                getter().then((d) => {\r\n                    this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    deleteExpired() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (let i = 0; i < this.store.length; i++) {\r\n                    const key = this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    test() {\r\n        const str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    createPersistable(o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            let defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    }\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    cacheExpirationHandler() {\r\n        this.deleteExpired().then(_ => {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(this, this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(e => {\r\n            console.error(e);\r\n        });\r\n    }\r\n}\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nclass MemoryStorage {\r\n    constructor(_store = new Map()) {\r\n        this._store = _store;\r\n    }\r\n    get length() {\r\n        return this._store.size;\r\n    }\r\n    clear() {\r\n        this._store.clear();\r\n    }\r\n    getItem(key) {\r\n        return this._store.get(key);\r\n    }\r\n    key(index) {\r\n        return Array.from(this._store)[index][0];\r\n    }\r\n    removeItem(key) {\r\n        this._store.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this._store.set(key, data);\r\n    }\r\n}\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nexport class PnPClientStorage {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(_local = null, _session = null) {\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    /**\r\n     * Provides access to the local storage of the browser\r\n     */\r\n    get local() {\r\n        if (this._local === null) {\r\n            this._local = this.getStore(\"local\");\r\n        }\r\n        return this._local;\r\n    }\r\n    /**\r\n     * Provides access to the session storage of the browser\r\n     */\r\n    get session() {\r\n        if (this._session === null) {\r\n            this._session = this.getStore(\"session\");\r\n        }\r\n        return this._session;\r\n    }\r\n    getStore(name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    }\r\n}\r\n//# sourceMappingURL=storage.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nexport class CachingOptions {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    get store() {\r\n        if (this.storeName === \"local\") {\r\n            return CachingOptions.storage.local;\r\n        }\r\n        else {\r\n            return CachingOptions.storage.session;\r\n        }\r\n    }\r\n}\r\nCachingOptions.storage = new PnPClientStorage();\r\nexport class CachingParserWrapper {\r\n    constructor(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    parse(response) {\r\n        return this.parser.parse(response).then(r => this.cacheData(r));\r\n    }\r\n    cacheData(data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n//# sourceMappingURL=caching.js.map","import { isFunc, hOP } from \"@pnp/common\";\r\nexport class HttpRequestError extends Error {\r\n    constructor(message, response, status = response.status, statusText = response.statusText) {\r\n        super(message);\r\n        this.response = response;\r\n        this.status = status;\r\n        this.statusText = statusText;\r\n        this.isHttpRequestError = true;\r\n    }\r\n}\r\nexport class ODataParserBase {\r\n    parse(r) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.handleError(r, reject)) {\r\n                this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    }\r\n    parseImpl(r, resolve, reject) {\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(txt => txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {})\r\n                .then(json => resolve(this.parseODataJSON(json)))\r\n                .catch(e => reject(e));\r\n        }\r\n    }\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    handleError(r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(`Error making HttpClient request in queryable: [${r.status}] ${r.statusText}`, r.clone()));\r\n        }\r\n        return r.ok;\r\n    }\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    parseODataJSON(json) {\r\n        let result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport class ODataDefaultParser extends ODataParserBase {\r\n}\r\nexport class TextParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.text().then(resolve);\r\n    }\r\n}\r\nexport class BlobParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.blob().then(resolve);\r\n    }\r\n}\r\nexport class JSONParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.json().then(resolve);\r\n    }\r\n}\r\nexport class BufferParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    }\r\n}\r\nexport class LambdaParser extends ODataParserBase {\r\n    constructor(parser) {\r\n        super();\r\n        this.parser = parser;\r\n    }\r\n    parseImpl(r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    }\r\n}\r\n//# sourceMappingURL=parsers.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nexport class Logger {\r\n    /**\r\n     * Gets or sets the active log level to apply for log filtering\r\n     */\r\n    static get activeLogLevel() {\r\n        return Logger.instance.activeLogLevel;\r\n    }\r\n    static set activeLogLevel(value) {\r\n        Logger.instance.activeLogLevel = value;\r\n    }\r\n    static get instance() {\r\n        if (Logger._instance === undefined || Logger._instance === null) {\r\n            Logger._instance = new LoggerImpl();\r\n        }\r\n        return Logger._instance;\r\n    }\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    static subscribe(...listeners) {\r\n        listeners.map(listener => Logger.instance.subscribe(listener));\r\n    }\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    static clearSubscribers() {\r\n        return Logger.instance.clearSubscribers();\r\n    }\r\n    /**\r\n     * Gets the current subscriber count\r\n     */\r\n    static get count() {\r\n        return Logger.instance.count;\r\n    }\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    static write(message, level = 1 /* Info */) {\r\n        Logger.instance.log({ level: level, message: message });\r\n    }\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    static writeJSON(json, level = 1 /* Info */) {\r\n        this.write(JSON.stringify(json), level);\r\n    }\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    static log(entry) {\r\n        Logger.instance.log(entry);\r\n    }\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    static error(err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    }\r\n}\r\nclass LoggerImpl {\r\n    constructor(activeLogLevel = 2 /* Warning */, subscribers = []) {\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener);\r\n    }\r\n    clearSubscribers() {\r\n        const s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    }\r\n    get count() {\r\n        return this.subscribers.length;\r\n    }\r\n    write(message, level = 1 /* Info */) {\r\n        this.log({ level: level, message: message });\r\n    }\r\n    log(entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(subscriber => subscriber.log(entry));\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=logger.js.map","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: `[${context.requestId}] (${(new Date()).getTime()}) Returning result from pipeline. Set logging to verbose to see data.`,\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise((resolve) => {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Request pipeline contains no methods!`, 2 /* Warning */);\r\n    }\r\n    const promise = next(context).then(ctx => returnResult(ctx)).catch((e) => {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun = false) {\r\n    return (target, propertyKey, descriptor) => {\r\n        const method = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Skipping request pipeline method ${propertyKey}, existing result in pipeline.`, 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Calling request pipeline method ${propertyKey}.`, 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then((ctx) => next(ctx));\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nexport class PipelineMethods {\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    static logStart(context) {\r\n        return new Promise(resolve => {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Beginning ${context.verb} request (${context.requestAbsoluteUrl})`,\r\n            });\r\n            resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    static caching(context) {\r\n        return new Promise(resolve => {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Caching is enabled for request, checking cache...`, 1 /* Info */);\r\n                let cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    let data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: `[${context.requestId}] (${(new Date()).getTime()}) Value returned from cache.`,\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(ctx => resolve(ctx));\r\n                    }\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Value not found in cache.`, 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Sends the request\r\n     */\r\n    static send(context) {\r\n        return new Promise((resolve, reject) => {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                const p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Batching request in batch ${context.batch.batchId}.`, 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Sending request.`, 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                const client = context.clientFactory();\r\n                const opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(response => context.parser.parse(response))\r\n                    .then(result => setResult(context, result))\r\n                    .then(ctx => resolve(ctx))\r\n                    .catch(e => reject(e));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    static logEnd(context) {\r\n        return new Promise(resolve => {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) ${context.verb} request will complete in batch ${context.batch.batchId}.`,\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) Completing ${context.verb} request.`,\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    }\r\n}\r\ntslib_1.__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logStart\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"caching\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"send\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logEnd\", null);\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nexport class Queryable {\r\n    constructor() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    toUrl() {\r\n        return this._url;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    concat(pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    }\r\n    /**\r\n     * Provides access to the query builder for this url\r\n     *\r\n     */\r\n    get query() {\r\n        return this._query;\r\n    }\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    configure(options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    }\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    configureFrom(o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    }\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    usingCaching(options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getCore(parser = new JSONParser(), options = {}) {\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    postCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    patchCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    deleteCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    putCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    append(pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    }\r\n    /**\r\n     * Gets the parent url used when creating this instance\r\n     *\r\n     */\r\n    get parentUrl() {\r\n        return this._parentUrl;\r\n    }\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    extend(parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    }\r\n}\r\nexport class ODataQueryable extends Queryable {\r\n    constructor() {\r\n        super();\r\n        this._batch = null;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    inBatch(batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    }\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    toUrl() {\r\n        return this._url;\r\n    }\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    get(parser = new ODataDefaultParser(), options = {}) {\r\n        return this.getCore(parser, options);\r\n    }\r\n    getCore(parser = new ODataDefaultParser(), options = {}) {\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    postCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    patchCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    deleteCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    putCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    addBatchDependency() {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return () => null;\r\n    }\r\n    /**\r\n     * Indicates if the current query has a batch associated\r\n     *\r\n     */\r\n    get hasBatch() {\r\n        return objectDefinedNotNull(this._batch);\r\n    }\r\n    /**\r\n     * The batch currently associated with this query or null\r\n     *\r\n     */\r\n    get batch() {\r\n        return this.hasBatch ? this._batch : null;\r\n    }\r\n}\r\n//# sourceMappingURL=queryable.js.map","import { RuntimeConfig, AdalClient } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar GraphRuntimeConfigImpl = /** @class */ (function () {\r\n    function GraphRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.headers !== undefined) {\r\n                return graphPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var graphPart = RuntimeConfig.get(\"graph\");\r\n            // use a configured factory firt\r\n            if (graphPart !== undefined && graphPart !== null && graphPart.fetchClientFactory !== undefined) {\r\n                return graphPart.fetchClientFactory;\r\n            }\r\n            // then try and use spfx context if available\r\n            if (RuntimeConfig.spfxContext !== undefined) {\r\n                return function () { return AdalClient.fromSPFxContext(RuntimeConfig.spfxContext); };\r\n            }\r\n            throw Error(\"There is no Graph Client available, either set one using configuraiton or provide a valid SPFx Context using setup.\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphRuntimeConfigImpl;\r\n}());\r\nexport { GraphRuntimeConfigImpl };\r\nexport var GraphRuntimeConfig = new GraphRuntimeConfigImpl();\r\n//# sourceMappingURL=graphlibconfig.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Members, Owners } from \"./members\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { Calendar, Events } from \"./calendars\";\r\nimport { Conversations, Senders } from \"./conversations\";\r\nimport { Plans } from \"./plans\";\r\nimport { Photo } from \"./photos\";\r\nimport { Team } from \"./teams\";\r\nimport { GraphEndpoints } from \"./types\";\r\nexport var GroupType;\r\n(function (GroupType) {\r\n    /**\r\n     * Office 365 (aka unified group)\r\n     */\r\n    GroupType[GroupType[\"Office365\"] = 0] = \"Office365\";\r\n    /**\r\n     * Dynamic membership\r\n     */\r\n    GroupType[GroupType[\"Dynamic\"] = 1] = \"Dynamic\";\r\n    /**\r\n     * Security\r\n     */\r\n    GroupType[GroupType[\"Security\"] = 2] = \"Security\";\r\n})(GroupType || (GroupType = {}));\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Groups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Groups, _super);\r\n    function Groups(baseUrl, path) {\r\n        if (path === void 0) { path = \"groups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a group from the collection using the specified id\r\n     *\r\n     * @param id Id of the group to get from this collection\r\n     */\r\n    Groups.prototype.getById = function (id) {\r\n        return new Group(this, id);\r\n    };\r\n    /**\r\n     * Create a new group as specified in the request body.\r\n     *\r\n     * @param name Name to display in the address book for the group\r\n     * @param mailNickname Mail alias for the group\r\n     * @param groupType Type of group being created\r\n     * @param additionalProperties A plain object collection of additional properties you want to set on the new group\r\n     */\r\n    Groups.prototype.add = function (name, mailNickname, groupType, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            displayName: name,\r\n            mailEnabled: groupType === GroupType.Office365,\r\n            mailNickname: mailNickname,\r\n            securityEnabled: groupType !== GroupType.Office365,\r\n        }, additionalProperties);\r\n        // include a group type if required\r\n        if (groupType !== GroupType.Security) {\r\n            postBody = extend(postBody, {\r\n                groupTypes: groupType === GroupType.Office365 ? [\"Unified\"] : [\"DynamicMembership\"],\r\n            });\r\n        }\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                group: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Groups;\r\n}(GraphQueryableCollection));\r\nexport { Groups };\r\n/**\r\n * Represents a group entity\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Group, _super);\r\n    function Group() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Group.prototype, \"calendar\", {\r\n        /**\r\n         * The calendar associated with this group\r\n         */\r\n        get: function () {\r\n            return new Calendar(this, \"calendar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"events\", {\r\n        /**\r\n         * Retrieve a list of event objects\r\n         */\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"owners\", {\r\n        /**\r\n         * Gets the collection of owners for this group\r\n         */\r\n        get: function () {\r\n            return new Owners(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"plans\", {\r\n        /**\r\n         * The collection of plans for this group\r\n         */\r\n        get: function () {\r\n            return new Plans(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"members\", {\r\n        /**\r\n         * Gets the collection of members for this group\r\n         */\r\n        get: function () {\r\n            return new Members(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"conversations\", {\r\n        /**\r\n         * Gets the conversations collection for this group\r\n         */\r\n        get: function () {\r\n            return new Conversations(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"acceptedSenders\", {\r\n        /**\r\n         * Gets the collection of accepted senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"acceptedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"rejectedSenders\", {\r\n        /**\r\n         * Gets the collection of rejected senders for this group\r\n         */\r\n        get: function () {\r\n            return new Senders(this, \"rejectedsenders\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"photo\", {\r\n        /**\r\n         * The photo associated with the group\r\n         */\r\n        get: function () {\r\n            return new Photo(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Group.prototype, \"team\", {\r\n        /**\r\n         * Gets the team associated with this group, if it exists\r\n         */\r\n        get: function () {\r\n            return new Team(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Add the group to the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.addFavorite = function () {\r\n        return this.clone(Group, \"addFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Microsoft Team associated with this group\r\n     *\r\n     * @param properties Initial properties for the new Team\r\n     */\r\n    Group.prototype.createTeam = function (properties) {\r\n        return this.clone(Group, \"team\").setEndpoint(GraphEndpoints.Beta).putCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Return all the groups that the specified group is a member of. The check is transitive\r\n     *\r\n     * @param securityEnabledOnly\r\n     */\r\n    Group.prototype.getMemberGroups = function (securityEnabledOnly) {\r\n        if (securityEnabledOnly === void 0) { securityEnabledOnly = false; }\r\n        return this.clone(Group, \"getMemberGroups\").postCore({\r\n            body: jsS({\r\n                securityEnabledOnly: securityEnabledOnly,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this group\r\n     */\r\n    Group.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a group object\r\n     *\r\n     * @param properties Set of properties of this group to update\r\n     */\r\n    Group.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Remove the group from the list of the current user's favorite groups. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.removeFavorite = function () {\r\n        return this.clone(Group, \"removeFavorite\").postCore();\r\n    };\r\n    /**\r\n     * Reset the unseenCount of all the posts that the current user has not seen since their last visit\r\n     */\r\n    Group.prototype.resetUnseenCount = function () {\r\n        return this.clone(Group, \"resetUnseenCount\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will enable the current user to receive email notifications for this group,\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.subscribeByMail = function () {\r\n        return this.clone(Group, \"subscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Calling this method will prevent the current user from receiving email notifications for this group\r\n     * about new posts, events, and files in that group. Supported for only Office 365 groups\r\n     */\r\n    Group.prototype.unsubscribeByMail = function () {\r\n        return this.clone(Group, \"unsubscribeByMail\").postCore();\r\n    };\r\n    /**\r\n     * Get the occurrences, exceptions, and single instances of events in a calendar view defined by a time range, from the default calendar of a group\r\n     *\r\n     * @param start Start date and time of the time range\r\n     * @param end End date and time of the time range\r\n     */\r\n    Group.prototype.getCalendarView = function (start, end) {\r\n        var view = this.clone(Group, \"calendarView\");\r\n        view.query.set(\"startDateTime\", start.toISOString());\r\n        view.query.set(\"endDateTime\", end.toISOString());\r\n        return view.get();\r\n    };\r\n    return Group;\r\n}(GraphQueryableInstance));\r\nexport { Group };\r\n//# sourceMappingURL=groups.js.map","import { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"../config/graphlibconfig\";\r\nvar GraphHttpClient = /** @class */ (function () {\r\n    function GraphHttpClient() {\r\n        this._impl = GraphRuntimeConfig.fetchClientFactory();\r\n    }\r\n    GraphHttpClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, GraphRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json\");\r\n        }\r\n        var opts = extend(options, { headers: headers });\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    GraphHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    GraphHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return GraphHttpClient;\r\n}());\r\nexport { GraphHttpClient };\r\n//# sourceMappingURL=graphhttpclient.js.map","var GraphEndpoints = /** @class */ (function () {\r\n    function GraphEndpoints() {\r\n    }\r\n    /**\r\n     *\r\n     * @param url The url to set the endpoint\r\n     */\r\n    GraphEndpoints.ensure = function (url, endpoint) {\r\n        var all = [GraphEndpoints.Beta, GraphEndpoints.V1];\r\n        var regex = new RegExp(endpoint, \"i\");\r\n        var replaces = all.filter(function (s) { return !regex.test(s); }).map(function (s) { return s.replace(\".\", \"\\\\.\"); });\r\n        regex = new RegExp(\"/?(\" + replaces.join(\"|\") + \")/\", \"ig\");\r\n        return url.replace(regex, \"/\" + endpoint + \"/\");\r\n    };\r\n    GraphEndpoints.Beta = \"beta\";\r\n    GraphEndpoints.V1 = \"v1.0\";\r\n    return GraphEndpoints;\r\n}());\r\nexport { GraphEndpoints };\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, isUrlAbsolute, getGUID, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nimport { GraphEndpoints } from \"./types\";\r\n/**\r\n * Queryable Base Class\r\n *\r\n */\r\nvar GraphQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the Queryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or Queryable that should form the base part of the url\r\n     *\r\n     */\r\n    function GraphQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            var urlStr = baseUrl;\r\n            _this._parentUrl = urlStr;\r\n            _this._url = combine(urlStr, path);\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new queryable\r\n     */\r\n    GraphQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    GraphQueryable.prototype.toUrlAndQuery = function () {\r\n        var url = this.toUrl();\r\n        if (!isUrlAbsolute(url)) {\r\n            url = combine(\"https://graph.microsoft.com\", url);\r\n        }\r\n        if (this.query.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    GraphQueryable.prototype.getParent = function (factory, baseUrl, path) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        return new factory(baseUrl, path);\r\n    };\r\n    /**\r\n     * Clones this queryable into a new queryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    GraphQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        // TODO:: include batching info in clone\r\n        if (includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    GraphQueryable.prototype.setEndpoint = function (endpoint) {\r\n        this._url = GraphEndpoints.ensure(this._url, endpoint);\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    GraphQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        if (options === void 0) { options = {}; }\r\n        // TODO:: add batch support\r\n        return Promise.resolve({\r\n            batch: this.batch,\r\n            batchDependency: function () { return void (0); },\r\n            cachingOptions: this._cachingOptions,\r\n            clientFactory: function () { return new GraphHttpClient(); },\r\n            isBatched: this.hasBatch,\r\n            isCached: /^get$/i.test(verb) && this._useCaching,\r\n            options: options,\r\n            parser: parser,\r\n            pipeline: pipeline,\r\n            requestAbsoluteUrl: this.toUrlAndQuery(),\r\n            requestId: getGUID(),\r\n            verb: verb,\r\n        });\r\n    };\r\n    return GraphQueryable;\r\n}(ODataQueryable));\r\nexport { GraphQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar GraphQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableCollection, _super);\r\n    function GraphQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    GraphQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    GraphQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    GraphQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips a set number of items in the return set\r\n     *\r\n     * @param num Number of items to skip\r\n     */\r\n    GraphQueryableCollection.prototype.skip = function (num) {\r\n        this.query.set(\"$top\", num.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableCollection.prototype.skipToken = function (token) {\r\n        this.query.set(\"$skiptoken\", token);\r\n        return this;\r\n    };\r\n    Object.defineProperty(GraphQueryableCollection.prototype, \"count\", {\r\n        /**\r\n         * \tRetrieves the total count of matching resources\r\n         */\r\n        get: function () {\r\n            this.query.set(\"$count\", \"true\");\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return GraphQueryableCollection;\r\n}(GraphQueryable));\r\nexport { GraphQueryableCollection };\r\nvar GraphQueryableSearchableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableSearchableCollection, _super);\r\n    function GraphQueryableSearchableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * \tTo request second and subsequent pages of Graph data\r\n     */\r\n    GraphQueryableSearchableCollection.prototype.search = function (query) {\r\n        this.query.set(\"$search\", query);\r\n        return this;\r\n    };\r\n    return GraphQueryableSearchableCollection;\r\n}(GraphQueryableCollection));\r\nexport { GraphQueryableSearchableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar GraphQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphQueryableInstance, _super);\r\n    function GraphQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    GraphQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    GraphQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return GraphQueryableInstance;\r\n}(GraphQueryable));\r\nexport { GraphQueryableInstance };\r\n//# sourceMappingURL=graphqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Members = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Members, _super);\r\n    function Members(baseUrl, path) {\r\n        if (path === void 0) { path = \"members\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Use this API to add a member to an Office 365 group, a security group or a mail-enabled security group through\r\n     * the members navigation property. You can add users or other groups.\r\n     * Important: You can add only users to Office 365 groups.\r\n     *\r\n     * @param id Full @odata.id of the directoryObject, user, or group object you want to add (ex: https://graph.microsoft.com/v1.0/directoryObjects/${id})\r\n     */\r\n    Members.prototype.add = function (id) {\r\n        return this.clone(Members, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Members.prototype.getById = function (id) {\r\n        return new Member(this, id);\r\n    };\r\n    return Members;\r\n}(GraphQueryableCollection));\r\nexport { Members };\r\nvar Member = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Member, _super);\r\n    function Member() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Member;\r\n}(GraphQueryableInstance));\r\nexport { Member };\r\nvar Owners = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Owners, _super);\r\n    function Owners(baseUrl, path) {\r\n        if (path === void 0) { path = \"owners\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Owners;\r\n}(Members));\r\nexport { Owners };\r\n//# sourceMappingURL=members.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n// import { Attachments } from \"./attachments\";\r\nvar Calendars = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendars, _super);\r\n    function Calendars(baseUrl, path) {\r\n        if (path === void 0) { path = \"calendars\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Calendars;\r\n}(GraphQueryableCollection));\r\nexport { Calendars };\r\nvar Calendar = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Calendar, _super);\r\n    function Calendar() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Calendar.prototype, \"events\", {\r\n        get: function () {\r\n            return new Events(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Calendar;\r\n}(GraphQueryableInstance));\r\nexport { Calendar };\r\nvar Events = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Events, _super);\r\n    function Events(baseUrl, path) {\r\n        if (path === void 0) { path = \"events\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Events.prototype.getById = function (id) {\r\n        return new Event(this, id);\r\n    };\r\n    /**\r\n     * Adds a new event to the collection\r\n     *\r\n     * @param properties The set of properties used to create the event\r\n     */\r\n    Events.prototype.add = function (properties) {\r\n        var _this = this;\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                event: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Events;\r\n}(GraphQueryableCollection));\r\nexport { Events };\r\nvar Event = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Event, _super);\r\n    function Event() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO:: when supported\r\n    // /**\r\n    //  * Gets the collection of attachments for this event\r\n    //  */\r\n    // public get attachments(): Attachments {\r\n    //     return new Attachments(this);\r\n    // }\r\n    /**\r\n     * Update the properties of an event object\r\n     *\r\n     * @param properties Set of properties of this event to update\r\n     */\r\n    Event.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this event\r\n     */\r\n    Event.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Event;\r\n}(GraphQueryableInstance));\r\nexport { Event };\r\n//# sourceMappingURL=calendars.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar Attachments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachments, _super);\r\n    function Attachments(baseUrl, path) {\r\n        if (path === void 0) { path = \"attachments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a member of the group by id\r\n     *\r\n     * @param id Attachment id\r\n     */\r\n    Attachments.prototype.getById = function (id) {\r\n        return new Attachment(this, id);\r\n    };\r\n    /**\r\n     * Add attachment to this collection\r\n     *\r\n     * @param name Name given to the attachment file\r\n     * @param bytes File content\r\n     */\r\n    Attachments.prototype.addFile = function (name, bytes) {\r\n        return this.postCore({\r\n            body: jsS({\r\n                \"@odata.type\": \"#microsoft.graph.fileAttachment\",\r\n                contentBytes: bytes,\r\n                name: name,\r\n            }),\r\n        });\r\n    };\r\n    return Attachments;\r\n}(GraphQueryableCollection));\r\nexport { Attachments };\r\nvar Attachment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Attachment, _super);\r\n    function Attachment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Attachment;\r\n}(GraphQueryableInstance));\r\nexport { Attachment };\r\n//# sourceMappingURL=attachments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { Attachments } from \"./attachments\";\r\nvar Conversations = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversations, _super);\r\n    function Conversations(baseUrl, path) {\r\n        if (path === void 0) { path = \"conversations\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Create a new conversation by including a thread and a post.\r\n     *\r\n     * @param properties Properties used to create the new conversation\r\n     */\r\n    Conversations.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a conversation from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Conversations.prototype.getById = function (id) {\r\n        return new Conversation(this, id);\r\n    };\r\n    return Conversations;\r\n}(GraphQueryableCollection));\r\nexport { Conversations };\r\nvar Threads = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Threads, _super);\r\n    function Threads(baseUrl, path) {\r\n        if (path === void 0) { path = \"threads\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Threads.prototype.getById = function (id) {\r\n        return new Thread(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Threads.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Threads;\r\n}(GraphQueryableCollection));\r\nexport { Threads };\r\nvar Posts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Posts, _super);\r\n    function Posts(baseUrl, path) {\r\n        if (path === void 0) { path = \"posts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a thread from this collection by id\r\n     *\r\n     * @param id Group member's id\r\n     */\r\n    Posts.prototype.getById = function (id) {\r\n        return new Post(this, id);\r\n    };\r\n    /**\r\n     * Adds a new thread to this collection\r\n     *\r\n     * @param properties properties used to create the new thread\r\n     * @returns Id of the new thread\r\n     */\r\n    Posts.prototype.add = function (properties) {\r\n        return this.postCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Posts;\r\n}(GraphQueryableCollection));\r\nexport { Posts };\r\nvar Conversation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Conversation, _super);\r\n    function Conversation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Conversation.prototype, \"threads\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Threads(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this conversation\r\n     */\r\n    Conversation.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Conversation.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Conversation;\r\n}(GraphQueryableInstance));\r\nexport { Conversation };\r\nvar Thread = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Thread, _super);\r\n    function Thread() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Thread.prototype, \"posts\", {\r\n        /**\r\n         * Get all the threads in a group conversation.\r\n         */\r\n        get: function () {\r\n            return new Posts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Thread.prototype.reply = function (post) {\r\n        return this.clone(Thread, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this member from the group\r\n     */\r\n    Thread.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    return Thread;\r\n}(GraphQueryableInstance));\r\nexport { Thread };\r\nvar Post = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Post, _super);\r\n    function Post() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Post.prototype, \"attachments\", {\r\n        get: function () {\r\n            return new Attachments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this post\r\n     */\r\n    Post.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Forward a post to a recipient\r\n     */\r\n    Post.prototype.forward = function (info) {\r\n        return this.clone(Post, \"forward\").postCore({\r\n            body: jsS(info),\r\n        });\r\n    };\r\n    /**\r\n     * Reply to a thread in a group conversation and add a new post to it\r\n     *\r\n     * @param post Contents of the post\r\n     */\r\n    Post.prototype.reply = function (post) {\r\n        return this.clone(Post, \"reply\").postCore({\r\n            body: jsS({\r\n                post: post,\r\n            }),\r\n        });\r\n    };\r\n    return Post;\r\n}(GraphQueryableInstance));\r\nexport { Post };\r\nvar Senders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Senders, _super);\r\n    function Senders(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Add a new user or group to this senders collection\r\n     * @param id The full @odata.id value to add (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.add = function (id) {\r\n        return this.clone(Senders, \"$ref\").postCore({\r\n            body: jsS({\r\n                \"@odata.id\": id,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the entity from the collection\r\n     *\r\n     * @param id The full @odata.id value to remove (ex: https://graph.microsoft.com/v1.0/users/user@contoso.com)\r\n     */\r\n    Senders.prototype.remove = function (id) {\r\n        var remover = this.clone(Senders, \"$ref\");\r\n        remover.query.set(\"$id\", id);\r\n        return remover.deleteCore();\r\n    };\r\n    return Senders;\r\n}(GraphQueryableCollection));\r\nexport { Senders };\r\n//# sourceMappingURL=conversations.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nvar Plans = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plans, _super);\r\n    function Plans(baseUrl, path) {\r\n        if (path === void 0) { path = \"planner/plans\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a plan from this collection by id\r\n     *\r\n     * @param id Plan's id\r\n     */\r\n    Plans.prototype.getById = function (id) {\r\n        return new Plan(this, id);\r\n    };\r\n    return Plans;\r\n}(GraphQueryableCollection));\r\nexport { Plans };\r\nvar Plan = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Plan, _super);\r\n    function Plan() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Plan;\r\n}(GraphQueryableInstance));\r\nexport { Plan };\r\n//# sourceMappingURL=plans.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance } from \"./graphqueryable\";\r\nimport { BlobParser, BufferParser } from \"@pnp/odata\";\r\nvar Photo = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Photo, _super);\r\n    function Photo(baseUrl, path) {\r\n        if (path === void 0) { path = \"photo\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the image bytes as a blob (browser)\r\n     */\r\n    Photo.prototype.getBlob = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the image file byets as a Buffer (node.js)\r\n     */\r\n    Photo.prototype.getBuffer = function () {\r\n        return this.clone(Photo, \"$value\", false).get(new BufferParser());\r\n    };\r\n    /**\r\n     * Sets the file bytes\r\n     *\r\n     * @param content Image file contents, max 4 MB\r\n     */\r\n    Photo.prototype.setContent = function (content) {\r\n        return this.clone(Photo, \"$value\", false).patchCore({\r\n            body: content,\r\n        });\r\n    };\r\n    return Photo;\r\n}(GraphQueryableInstance));\r\nexport { Photo };\r\n//# sourceMappingURL=photos.js.map","import * as tslib_1 from \"tslib\";\r\nimport { graph, } from \"./rest\";\r\nimport { GroupType, } from \"./groups\";\r\nimport { GraphQueryableInstance, } from \"./graphqueryable\";\r\nimport { GraphEndpoints, } from \"./types\";\r\nimport { ODataDefaultParser, } from \"@pnp/odata\";\r\nimport { jsS, } from \"@pnp/common\";\r\nvar Teams = /** @class */ (function () {\r\n    function Teams() {\r\n    }\r\n    /**\r\n     * Creates a new team and associated Group with the given information\r\n     */\r\n    Teams.prototype.create = function (name, description, teamProperties) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (teamProperties === void 0) { teamProperties = {}; }\r\n        var groupProps = description && description.length > 0 ? { description: description } : {};\r\n        return graph.groups.add(name, name, GroupType.Office365, groupProps).then(function (gar) {\r\n            return gar.group.createTeam(teamProperties).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    group: gar.group,\r\n                    team: new Team(gar.group),\r\n                };\r\n            });\r\n        });\r\n    };\r\n    return Teams;\r\n}());\r\nexport { Teams };\r\n/**\r\n * Represents a Microsoft Team\r\n */\r\nvar Team = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Team, _super);\r\n    function Team(baseUrl, path) {\r\n        if (path === void 0) { path = \"team\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Updates this team instance's properties\r\n     *\r\n     * @param properties The set of properties to update\r\n     */\r\n    // TODO:: update properties to be typed once type is available in graph-types\r\n    Team.prototype.update = function (properties) {\r\n        var _this = this;\r\n        return this.clone(Team, \"\").setEndpoint(GraphEndpoints.Beta).patchCore({\r\n            body: jsS(properties),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                team: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    Team.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.clone(Team, \"\").setEndpoint(GraphEndpoints.Beta).getCore(parser, options);\r\n    };\r\n    return Team;\r\n}(GraphQueryableInstance));\r\nexport { Team };\r\n//# sourceMappingURL=teams.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Represents a onenote entity\r\n */\r\nvar OneNote = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OneNote, _super);\r\n    function OneNote(baseUrl, path) {\r\n        if (path === void 0) { path = \"onenote\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(OneNote.prototype, \"notebooks\", {\r\n        get: function () {\r\n            return new Notebooks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneNote.prototype, \"pages\", {\r\n        get: function () {\r\n            return new Pages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return OneNote;\r\n}(GraphQueryableInstance));\r\nexport { OneNote };\r\n/**\r\n * Describes a collection of Notebook objects\r\n *\r\n */\r\nvar Notebooks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebooks, _super);\r\n    function Notebooks(baseUrl, path) {\r\n        if (path === void 0) { path = \"notebooks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a notebook instance by id\r\n     *\r\n     * @param id Notebook id\r\n     */\r\n    Notebooks.prototype.getById = function (id) {\r\n        return new Notebook(this, id);\r\n    };\r\n    /**\r\n     * Create a new notebook as specified in the request body.\r\n     *\r\n     * @param displayName Notebook display name\r\n     */\r\n    Notebooks.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                notebook: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Notebooks;\r\n}(GraphQueryableCollection));\r\nexport { Notebooks };\r\n/**\r\n * Describes a notebook instance\r\n *\r\n */\r\nvar Notebook = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Notebook, _super);\r\n    function Notebook(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Notebook.prototype, \"sections\", {\r\n        get: function () {\r\n            return new Sections(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Notebook;\r\n}(GraphQueryableInstance));\r\nexport { Notebook };\r\n/**\r\n * Describes a collection of Sections objects\r\n *\r\n */\r\nvar Sections = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sections, _super);\r\n    function Sections(baseUrl, path) {\r\n        if (path === void 0) { path = \"sections\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a section instance by id\r\n     *\r\n     * @param id Section id\r\n     */\r\n    Sections.prototype.getById = function (id) {\r\n        return new Section(this, id);\r\n    };\r\n    /**\r\n     * Adds a new section\r\n     *\r\n     * @param displayName New section display name\r\n     */\r\n    Sections.prototype.add = function (displayName) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                section: _this.getById(r.id),\r\n            };\r\n        });\r\n    };\r\n    return Sections;\r\n}(GraphQueryableCollection));\r\nexport { Sections };\r\n/**\r\n * Describes a sections instance\r\n *\r\n */\r\nvar Section = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Section, _super);\r\n    function Section(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Section;\r\n}(GraphQueryableInstance));\r\nexport { Section };\r\n/**\r\n * Describes a collection of Pages objects\r\n *\r\n */\r\nvar Pages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Pages, _super);\r\n    function Pages(baseUrl, path) {\r\n        if (path === void 0) { path = \"pages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return Pages;\r\n}(GraphQueryableCollection));\r\nexport { Pages };\r\n//# sourceMappingURL=onenote.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nvar Contacts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contacts, _super);\r\n    function Contacts(baseUrl, path) {\r\n        if (path === void 0) { path = \"contacts\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Contacts.prototype.getById = function (id) {\r\n        return new Contact(this, id);\r\n    };\r\n    /**\r\n    * Create a new Contact for the user.\r\n    *\r\n    * @param givenName The contact's given name.\r\n    * @param surName The contact's surname.\r\n    * @param emailAddresses The contact's email addresses.\r\n    * @param businessPhones The contact's business phone numbers.\r\n    * @param additionalProperties A plain object collection of additional properties you want to set on the new contact\r\n    */\r\n    Contacts.prototype.add = function (givenName, surName, emailAddresses, businessPhones, additionalProperties) {\r\n        var _this = this;\r\n        if (additionalProperties === void 0) { additionalProperties = {}; }\r\n        var postBody = extend({\r\n            businessPhones: businessPhones,\r\n            emailAddresses: emailAddresses,\r\n            givenName: givenName,\r\n            surName: surName,\r\n        }, additionalProperties);\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contact: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return Contacts;\r\n}(GraphQueryableCollection));\r\nexport { Contacts };\r\nvar Contact = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Contact, _super);\r\n    function Contact() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Deletes this contact\r\n     */\r\n    Contact.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact object\r\n     *\r\n     * @param properties Set of properties of this contact to update\r\n     */\r\n    Contact.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return Contact;\r\n}(GraphQueryableInstance));\r\nexport { Contact };\r\nvar ContactFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolders, _super);\r\n    function ContactFolders(baseUrl, path) {\r\n        if (path === void 0) { path = \"contactFolders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    ContactFolders.prototype.getById = function (id) {\r\n        return new ContactFolder(this, id);\r\n    };\r\n    /**\r\n     * Create a new Contact Folder for the user.\r\n     *\r\n     * @param displayName The folder's display name.\r\n     * @param parentFolderId The ID of the folder's parent folder.\r\n     */\r\n    ContactFolders.prototype.add = function (displayName, parentFolderId) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n            parentFolderId: parentFolderId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contactFolder: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return ContactFolders;\r\n}(GraphQueryableCollection));\r\nexport { ContactFolders };\r\nvar ContactFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContactFolder, _super);\r\n    function ContactFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContactFolder.prototype, \"contacts\", {\r\n        /**\r\n         * Gets the contacts in this contact folder\r\n         */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContactFolder.prototype, \"childFolders\", {\r\n        /**\r\n        * Gets the contacts in this contact folder\r\n        */\r\n        get: function () {\r\n            return new ChildFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this contact folder\r\n     */\r\n    ContactFolder.prototype.delete = function () {\r\n        return this.deleteCore();\r\n    };\r\n    /**\r\n     * Update the properties of a contact folder\r\n     *\r\n     * @param properties Set of properties of this contact folder to update\r\n     */\r\n    ContactFolder.prototype.update = function (properties) {\r\n        return this.patchCore({\r\n            body: jsS(properties),\r\n        });\r\n    };\r\n    return ContactFolder;\r\n}(GraphQueryableInstance));\r\nexport { ContactFolder };\r\nvar ChildFolders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ChildFolders, _super);\r\n    function ChildFolders(baseUrl, path) {\r\n        if (path === void 0) { path = \"childFolders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    ChildFolders.prototype.getById = function (id) {\r\n        return new ContactFolder(this, id);\r\n    };\r\n    /**\r\n     * Create a new Child Folder in Contact folder.\r\n     *\r\n     * @param displayName The folder's display name.\r\n     * @param parentFolderId The ID of the folder's parent folder.\r\n     */\r\n    ChildFolders.prototype.add = function (displayName, parentFolderId) {\r\n        var _this = this;\r\n        var postBody = {\r\n            displayName: displayName,\r\n            parentFolderId: parentFolderId,\r\n        };\r\n        return this.postCore({\r\n            body: jsS(postBody),\r\n        }).then(function (r) {\r\n            return {\r\n                contactFolder: _this.getById(r.id),\r\n                data: r,\r\n            };\r\n        });\r\n    };\r\n    return ChildFolders;\r\n}(GraphQueryableInstance));\r\nexport { ChildFolders };\r\n//# sourceMappingURL=contacts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance } from \"./graphqueryable\";\r\nimport { OneNote } from \"./onenote\";\r\nimport { Contacts, ContactFolders } from \"./contacts\";\r\nvar Me = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Me, _super);\r\n    function Me(baseUrl, path) {\r\n        if (path === void 0) { path = \"me\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Me.prototype, \"onenote\", {\r\n        /**\r\n        * The onenote associated with me\r\n        */\r\n        get: function () {\r\n            return new OneNote(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Me.prototype, \"contacts\", {\r\n        /**\r\n        * The Contacts associated with the user\r\n        */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Me.prototype, \"contactFolders\", {\r\n        /**\r\n         * The Contact Folders associated with the user\r\n         */\r\n        get: function () {\r\n            return new ContactFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Me;\r\n}(GraphQueryableInstance));\r\nexport { Me };\r\n//# sourceMappingURL=me.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryableInstance, GraphQueryableCollection } from \"./graphqueryable\";\r\nimport { Contacts, ContactFolders } from \"./contacts\";\r\nimport { OneNote } from \"./onenote\";\r\n/**\r\n * Describes a collection of Users objects\r\n *\r\n */\r\nvar Users = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Users, _super);\r\n    function Users(baseUrl, path) {\r\n        if (path === void 0) { path = \"users\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection using the specified id\r\n     *\r\n     * @param id Id of the user to get from this collection\r\n     */\r\n    Users.prototype.getById = function (id) {\r\n        return new User(this, id);\r\n    };\r\n    return Users;\r\n}(GraphQueryableCollection));\r\nexport { Users };\r\n/**\r\n * Represents a user entity\r\n */\r\nvar User = /** @class */ (function (_super) {\r\n    tslib_1.__extends(User, _super);\r\n    function User() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(User.prototype, \"onenote\", {\r\n        /**\r\n        * The onenote associated with me\r\n        */\r\n        get: function () {\r\n            return new OneNote(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"contacts\", {\r\n        /**\r\n        * The Contacts associated with the user\r\n        */\r\n        get: function () {\r\n            return new Contacts(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(User.prototype, \"contactFolders\", {\r\n        /**\r\n        * The Contact Folders associated with the user\r\n        */\r\n        get: function () {\r\n            return new ContactFolders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return User;\r\n}(GraphQueryableInstance));\r\nexport { User };\r\n//# sourceMappingURL=users.js.map","import * as tslib_1 from \"tslib\";\r\nimport { GraphQueryable } from \"./graphqueryable\";\r\nimport { setup as _setup, } from \"./config/graphlibconfig\";\r\nimport { Groups } from \"./groups\";\r\nimport { Me } from \"./me\";\r\nimport { Teams } from \"./teams\";\r\nimport { Users } from \"./users\";\r\nvar GraphRest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphRest, _super);\r\n    function GraphRest(baseUrl, path) {\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(GraphRest.prototype, \"groups\", {\r\n        get: function () {\r\n            return new Groups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"teams\", {\r\n        get: function () {\r\n            return new Teams();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"me\", {\r\n        get: function () {\r\n            return new Me(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(GraphRest.prototype, \"users\", {\r\n        get: function () {\r\n            return new Users(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    GraphRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    return GraphRest;\r\n}(GraphQueryable));\r\nexport { GraphRest };\r\nexport var graph = new GraphRest(\"v1.0\");\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { objectDefinedNotNull, extend, jsS } from \"@pnp/common\";\r\nimport { GraphRuntimeConfig } from \"./config/graphlibconfig\";\r\nimport { GraphHttpClient } from \"./net/graphhttpclient\";\r\nvar GraphBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(GraphBatch, _super);\r\n    function GraphBatch(batchUrl) {\r\n        if (batchUrl === void 0) { batchUrl = \"https://graph.microsoft.com/beta/$batch\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.batchUrl = batchUrl;\r\n        return _this;\r\n    }\r\n    GraphBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        var client = new GraphHttpClient();\r\n        var batchRequest = {\r\n            requests: this.formatRequests(),\r\n        };\r\n        var batchOptions = {\r\n            body: jsS(batchRequest),\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            method: \"POST\",\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // let nextLinkFlag = false;\r\n        return client.fetch(this.batchUrl, batchOptions)\r\n            .then(function (r) { return r.json(); })\r\n            .then(this._parseResponse)\r\n            .then(function (parsedResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return parsedResponse.responses.reduce(function (chain, response, index) {\r\n                var request = _this.requests[index];\r\n                if (objectDefinedNotNull(request)) {\r\n                    Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", 0 /* Verbose */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }\r\n                else {\r\n                    // do we have a next url? if no this is an error\r\n                    if (parsedResponse.nextLink) {\r\n                        throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                    }\r\n                    // nextLinkFlag = true;\r\n                    // keep the chain moving, but don't add anything for this request yet\r\n                    // here we need to process the next link - so what do we do?\r\n                    // need to append a .then()\r\n                    // TODO::\r\n                    return chain;\r\n                }\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    GraphBatch.prototype.formatRequests = function () {\r\n        return this.requests.map(function (reqInfo, index) {\r\n            var requestFragment = {\r\n                id: \"\" + ++index,\r\n                method: reqInfo.method,\r\n                url: reqInfo.url,\r\n            };\r\n            var headers = {};\r\n            // merge global config headers\r\n            if (GraphRuntimeConfig.headers !== undefined && GraphRuntimeConfig.headers !== null) {\r\n                headers = extend(headers, GraphRuntimeConfig.headers);\r\n            }\r\n            if (reqInfo.options !== undefined) {\r\n                // merge per request headers\r\n                if (reqInfo.options.headers !== undefined && reqInfo.options.headers !== null) {\r\n                    headers = extend(headers, reqInfo.options.headers);\r\n                }\r\n                // add a request body\r\n                if (reqInfo.options.body !== undefined && reqInfo.options.body !== null) {\r\n                    requestFragment = extend(requestFragment, {\r\n                        body: reqInfo.options.body,\r\n                    });\r\n                }\r\n            }\r\n            requestFragment = extend(requestFragment, {\r\n                headers: headers,\r\n            });\r\n            return requestFragment;\r\n        });\r\n    };\r\n    GraphBatch.prototype._parseResponse = function (graphResponse) {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var parsedResponses = new Array(_this.requests.length).fill(null);\r\n            for (var i = 0; i < graphResponse.responses.length; ++i) {\r\n                var response = graphResponse.responses[i];\r\n                // we create the request id by adding 1 to the index, so we place the response by subtracting one to match\r\n                // the array of requests and make it easier to map them by index\r\n                var responseId = parseInt(response.id, 10) - 1;\r\n                if (response.status === 204) {\r\n                    parsedResponses[responseId] = new Response();\r\n                }\r\n                else {\r\n                    parsedResponses[responseId] = new Response(null, {\r\n                        headers: response.headers,\r\n                        status: response.status,\r\n                    });\r\n                }\r\n            }\r\n            resolve({\r\n                nextLink: graphResponse.nextLink,\r\n                responses: parsedResponses,\r\n            });\r\n        });\r\n    };\r\n    return GraphBatch;\r\n}(ODataBatch));\r\nexport { GraphBatch };\r\n//# sourceMappingURL=batch.js.map","import { getGUID } from \"@pnp/common\";\r\nexport class ODataBatch {\r\n    constructor(_batchId = getGUID()) {\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    get batchId() {\r\n        return this._batchId;\r\n    }\r\n    /**\r\n     * The requests contained in this batch\r\n     */\r\n    get requests() {\r\n        return this._reqs;\r\n    }\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    add(url, method, options, parser, id) {\r\n        const info = {\r\n            id,\r\n            method: method.toUpperCase(),\r\n            options,\r\n            parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url,\r\n        };\r\n        const p = new Promise((resolve, reject) => {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    }\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    addDependency() {\r\n        let resolver = () => void (0);\r\n        this._deps.push(new Promise((resolve) => {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    }\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    addResolveBatchDependency(p) {\r\n        this._rDeps.push(p);\r\n    }\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    execute() {\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(() => Promise.all(this._deps))\r\n            .then(() => this.executeImpl())\r\n            .then(() => Promise.all(this._rDeps))\r\n            .then(() => void (0));\r\n    }\r\n}\r\n//# sourceMappingURL=odatabatch.js.map","export * from \"./src/graph\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}