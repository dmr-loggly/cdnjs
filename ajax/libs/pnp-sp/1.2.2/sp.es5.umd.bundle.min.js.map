{"version":3,"sources":["webpack://pnp.sp/webpack/universalModuleDefinition","webpack://pnp.sp/webpack/bootstrap","webpack://pnp.sp/./build/packages/common/src/adalclient.js","webpack://pnp.sp/./build/packages/common/src/collections.js","webpack://pnp.sp/./build/packages/common/src/libconfig.js","webpack://pnp.sp/./build/packages/common/src/storage.js","webpack://pnp.sp/./build/packages/common/index.js","webpack://pnp.sp/./build/packages/common/src/util.js","webpack://pnp.sp/./build/packages/sp/es5/src/config/splibconfig.js","webpack://pnp.sp/./build/packages/sp/es5/src/utils/toabsoluteurl.js","webpack://pnp.sp/./build/packages/common/src/netutil.js","webpack://pnp.sp/(webpack)/buildin/global.js","webpack://pnp.sp/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp/./build/packages/logging/src/loglevel.js","webpack://pnp.sp/./build/packages/logging/src/logger.js","webpack://pnp.sp/./build/packages/odata/src/caching.js","webpack://pnp.sp/./build/packages/odata/src/parsers.js","webpack://pnp.sp/./build/packages/odata/src/pipeline.js","webpack://pnp.sp/./build/packages/odata/src/queryable.js","webpack://pnp.sp/./build/packages/sp/es5/src/utils/extractweburl.js","webpack://pnp.sp/./build/packages/sp/es5/src/odata.js","webpack://pnp.sp/./build/packages/sp/es5/src/net/digestcache.js","webpack://pnp.sp/./build/packages/sp/es5/src/net/sphttpclient.js","webpack://pnp.sp/./build/packages/sp/es5/src/utils/metadata.js","webpack://pnp.sp/./build/packages/sp/es5/src/sharepointqueryable.js","webpack://pnp.sp/./build/packages/sp/es5/src/siteusers.js","webpack://pnp.sp/./build/packages/sp/es5/src/sitegroups.js","webpack://pnp.sp/./build/packages/sp/es5/src/types.js","webpack://pnp.sp/./build/packages/sp/es5/src/roles.js","webpack://pnp.sp/./build/packages/sp/es5/src/sharepointqueryablesecurable.js","webpack://pnp.sp/./build/packages/sp/es5/src/files.js","webpack://pnp.sp/./build/packages/sp/es5/src/sharepointqueryableshareable.js","webpack://pnp.sp/./build/packages/sp/es5/src/webparts.js","webpack://pnp.sp/./build/packages/sp/es5/src/folders.js","webpack://pnp.sp/./build/packages/sp/es5/src/contenttypes.js","webpack://pnp.sp/./build/packages/sp/es5/src/attachmentfiles.js","webpack://pnp.sp/./build/packages/sp/es5/src/views.js","webpack://pnp.sp/./build/packages/sp/es5/src/fields.js","webpack://pnp.sp/./build/packages/sp/es5/src/forms.js","webpack://pnp.sp/./build/packages/sp/es5/src/subscriptions.js","webpack://pnp.sp/./build/packages/sp/es5/src/usercustomactions.js","webpack://pnp.sp/./build/packages/sp/es5/src/lists.js","webpack://pnp.sp/./build/packages/sp/es5/src/comments.js","webpack://pnp.sp/./build/packages/sp/es5/src/items.js","webpack://pnp.sp/./build/packages/sp/es5/src/appcatalog.js","webpack://pnp.sp/./build/packages/sp/es5/src/clientsidepages.js","webpack://pnp.sp/./build/packages/sp/es5/src/batch.js","webpack://pnp.sp/./build/packages/odata/src/odatabatch.js","webpack://pnp.sp/./build/packages/sp/es5/src/navigation.js","webpack://pnp.sp/./build/packages/sp/es5/src/regionalsettings.js","webpack://pnp.sp/./build/packages/sp/es5/src/search.js","webpack://pnp.sp/./build/packages/sp/es5/src/social.js","webpack://pnp.sp/./build/packages/sp/es5/src/searchsuggest.js","webpack://pnp.sp/./build/packages/sp/es5/src/features.js","webpack://pnp.sp/./build/packages/sp/es5/src/relateditems.js","webpack://pnp.sp/./build/packages/sp/es5/src/webs.js","webpack://pnp.sp/./build/packages/sp/es5/src/site.js","webpack://pnp.sp/./build/packages/sp/es5/src/userprofiles.js","webpack://pnp.sp/./build/packages/sp/es5/src/utilities.js","webpack://pnp.sp/./build/packages/sp/es5/src/rest.js","webpack://pnp.sp/./build/packages/sp/es5/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","adalclient_AdalClient","netutil","[object Object]","clientId","tenant","redirectUri","super","this","_displayCallback","_loginPromise","spfxContext","cliendId","pageContext","aadInfo","tenantId","toString","util","location","origin","url","options","Error","getToken","getResource","then","token","fetch","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","objectEntries","entries","keys","map","k","RuntimeConfig","_v","Map","set","config","target","maps","length","forEach","v","mergeMaps","objectToMap","defaultCachingStore","defaultCachingTimeoutSeconds","globalCacheDisable","enableCacheExpiration","cacheExpirationIntervalMilliseconds","storage_PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","expire","setItem","createPersistable","removeItem","put","defaultTimeout","pnp","deleteExpired","setTimeout","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","local","getStore","session","localStorage","sessionStorage","__webpack_exports__","getCtxCallback","context","method","params","apply","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","Math","random","floor","isFunc","cf","objectDefinedNotNull","obj","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","configurable","baseUrl","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","_util__WEBPACK_IMPORTED_MODULE_0__","Request","append","_token","Headers","g","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","b","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","push","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","f","screenTop","screenY","innerWidth","documentElement","clientWidth","body","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","extendStatics","setPrototypeOf","__proto__","__extends","__","__decorate","decorators","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","listeners","listener","subscribe","clearSubscribers","count","json","write","entry","err","subscribers","subscriber","caching_CachingOptions","common","storeName","storage","CachingParserWrapper","cacheOptions","response","cacheData","HttpRequestError","status","statusText","isHttpRequestError","parsers_ODataParserBase","handleError","parseImpl","has","parseFloat","text","txt","parseODataJSON","ok","clone","result","results","ODataDefaultParser","TextParser","BlobParser","blob","JSONParser","parsers_BufferParser","arrayBuffer","buffer","setResult","hasResult","next","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","verb","requestAbsoluteUrl","isCached","cachingOptions","batchDependency","hydrate","add","batchId","client","clientFactory","opts","getDefaultPipeline","logStart","caching","send","logEnd","queryable_Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","pathPart","query","toRequestContext","parentUrl","configureFrom","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","_super","SPODataEntityParserImpl","_this","odata_SPODataEntityArrayParserImpl","SPODataEntityArrayParserImpl","spODataEntity","spODataEntityArray","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","toUpperCase","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","as","toUrlAndQuery","aliasedParams","toUrl","labelName","select","selects","_i","expand","expands","getParent","inBatch","additionalPath","includeBatch","hasBatch","dependencyDispose","addBatchDependency","toabsoluteurl","_batch","getCore","addDependency","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","postCore","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","id","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","concat","removeById","removeByLoginName","LoginName","SiteUser","update","user","sitegroups_SiteGroups","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","format","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","patchCore","deleteCore","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","configure","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","App","deploy","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","Response","executeImpl","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","_batchId","_reqs","_deps","_rDeps","resolver","all","getNextOrder","collection","max","regexIndexOf","regex","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","clientsidepages_ClientSidePage","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","section","clientsidepages_CanvasSection","toHtml","fromHtml","control","clientsidepages_CanvasColumn","mergeColumnToTree","clientsidepages_ClientSideWebpart","mergePartToTree","clientsidepages_ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","CanvasSection","_memId","addColumn","factor","defaultColumn","clientsidepages_CanvasControl","CanvasControl","controlType","dataVersion","getControlData","CanvasColumn","getControl","jsonData","displayMode","clientsidepages_ClientSidePart","ClientSidePart","ClientSideText","_text","startsWith","editorType","controlIndex","ClientSideWebpart","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","funcs","search_props","toPropCase","str","$1","SearchQueryBuilder","queryText","Proxy","Querytext","self","proxy","pk","mappedPk","propKey","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","execute","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","webs_Web","webs_WebInfos","WebInfos","Web","Web_1","fromUrl","getParentWeb","ParentWeb","site_Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","Site","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","usingCaching","fm","rest_sp"],"mappings":"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","file":"sp.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp\"] = factory();\n\telse\n\t\troot[\"pnp.sp\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import { BearerTokenFetchClient } from \"./netutil\";\r\nimport { combine, isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nexport class AdalClient extends BearerTokenFetchClient {\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    constructor(clientId, tenant, redirectUri) {\r\n        super(null);\r\n        this.clientId = clientId;\r\n        this.tenant = tenant;\r\n        this.redirectUri = redirectUri;\r\n        this._displayCallback = null;\r\n        this._loginPromise = null;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    static fromSPFxContext(spfxContext, cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\") {\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    }\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    fetch(url, options) {\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(token => {\r\n            this.token = token;\r\n            return super.fetch(url, options);\r\n        });\r\n    }\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    getToken(resource) {\r\n        return new Promise((resolve, reject) => {\r\n            this.ensureAuthContext().then(_ => this.login()).then(_ => {\r\n                AdalClient._authContext.acquireToken(resource, (message, token) => {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    ensureAuthContext() {\r\n        return new Promise(resolve => {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: this.clientId,\r\n                    displayCall: (url) => {\r\n                        if (this._displayCallback) {\r\n                            this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: this.redirectUri,\r\n                    tenant: this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    login() {\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise((resolve, reject) => {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            this._displayCallback = (url) => {\r\n                const popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                const pollTimer = window.setInterval(() => {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            this.ensureAuthContext().then(_ => {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    }\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    getResource(url) {\r\n        const parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return `${parser.protocol}//${parser.hostname}`;\r\n    }\r\n}\r\n/**\r\n * Our auth context\r\n */\r\nAdalClient._authContext = null;\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nconst objectEntries = isFunc(Object.entries) ? Object.entries : (o) => Object.keys(o).map((k) => [k, o[k]]);\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target, ...maps) {\r\n    for (let i = 0; i < maps.length; i++) {\r\n        maps[i].forEach((v, k) => {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nconst s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nexport class RuntimeConfigImpl {\r\n    constructor(_v = new Map()) {\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    extend(config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    }\r\n    get(key) {\r\n        return this._v.get(key);\r\n    }\r\n    get defaultCachingStore() {\r\n        return this.get(s[0]);\r\n    }\r\n    get defaultCachingTimeoutSeconds() {\r\n        return this.get(s[1]);\r\n    }\r\n    get globalCacheDisable() {\r\n        return this.get(s[2]);\r\n    }\r\n    get enableCacheExpiration() {\r\n        return this.get(s[3]);\r\n    }\r\n    get cacheExpirationIntervalMilliseconds() {\r\n        return this.get(s[4]);\r\n    }\r\n    get spfxContext() {\r\n        return this.get(s[5]);\r\n    }\r\n}\r\nconst _runtimeConfig = new RuntimeConfigImpl();\r\nexport let RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nexport class PnPClientStorageWrapper {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(store, defaultTimeoutMinutes = -1) {\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    get(key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        const o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        const persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    }\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    put(key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    }\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    delete(key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    getOrPut(key, getter, expire) {\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise((resolve) => {\r\n            const o = this.get(key);\r\n            if (o == null) {\r\n                getter().then((d) => {\r\n                    this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    deleteExpired() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (let i = 0; i < this.store.length; i++) {\r\n                    const key = this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    test() {\r\n        const str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    createPersistable(o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            let defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    }\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    cacheExpirationHandler() {\r\n        this.deleteExpired().then(_ => {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(this, this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(e => {\r\n            console.error(e);\r\n        });\r\n    }\r\n}\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nclass MemoryStorage {\r\n    constructor(_store = new Map()) {\r\n        this._store = _store;\r\n    }\r\n    get length() {\r\n        return this._store.size;\r\n    }\r\n    clear() {\r\n        this._store.clear();\r\n    }\r\n    getItem(key) {\r\n        return this._store.get(key);\r\n    }\r\n    key(index) {\r\n        return Array.from(this._store)[index][0];\r\n    }\r\n    removeItem(key) {\r\n        this._store.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this._store.set(key, data);\r\n    }\r\n}\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nexport class PnPClientStorage {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(_local = null, _session = null) {\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    /**\r\n     * Provides access to the local storage of the browser\r\n     */\r\n    get local() {\r\n        if (this._local === null) {\r\n            this._local = this.getStore(\"local\");\r\n        }\r\n        return this._local;\r\n    }\r\n    /**\r\n     * Provides access to the session storage of the browser\r\n     */\r\n    get session() {\r\n        if (this._session === null) {\r\n            this._session = this.getStore(\"session\");\r\n        }\r\n        return this._session;\r\n    }\r\n    getStore(name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    }\r\n}\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method, ...params) {\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    let ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine(...paths) {\r\n    return paths\r\n        .filter(path => !stringIsNullOrEmpty(path))\r\n        .map(path => path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"))\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    const text = new Array(chars);\r\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    let d = new Date().getTime();\r\n    const guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        const r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite = false, filter = () => true) {\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    const check = noOverwrite ? (o, i) => !(i in o) : () => true;\r\n    // final filter we will use\r\n    const f = (v) => check(target, v) && filter(v);\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce((t, v) => {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const reg = new RegExp(`${attrName}\\\\s*?=\\\\s*?(\"|')([^\\\\1]*?)\\\\1`, \"i\");\r\n    const match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    const matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    let hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (let i = 0; i < s.length; i++) {\r\n        const chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        const temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach((value, name) => {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        const headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nexport class FetchClient {\r\n    fetch(url, options) {\r\n        return global.fetch(url, options);\r\n    }\r\n}\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nexport class BearerTokenFetchClient extends FetchClient {\r\n    constructor(_token) {\r\n        super();\r\n        this._token = _token;\r\n    }\r\n    get token() {\r\n        return this._token || \"\";\r\n    }\r\n    set token(token) {\r\n        this._token = token;\r\n    }\r\n    fetch(url, options = {}) {\r\n        const headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", `Bearer ${this._token}`);\r\n        options.headers = headers;\r\n        return super.fetch(url, options);\r\n    }\r\n}\r\n//# sourceMappingURL=netutil.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nexport class Logger {\r\n    /**\r\n     * Gets or sets the active log level to apply for log filtering\r\n     */\r\n    static get activeLogLevel() {\r\n        return Logger.instance.activeLogLevel;\r\n    }\r\n    static set activeLogLevel(value) {\r\n        Logger.instance.activeLogLevel = value;\r\n    }\r\n    static get instance() {\r\n        if (Logger._instance === undefined || Logger._instance === null) {\r\n            Logger._instance = new LoggerImpl();\r\n        }\r\n        return Logger._instance;\r\n    }\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    static subscribe(...listeners) {\r\n        listeners.map(listener => Logger.instance.subscribe(listener));\r\n    }\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    static clearSubscribers() {\r\n        return Logger.instance.clearSubscribers();\r\n    }\r\n    /**\r\n     * Gets the current subscriber count\r\n     */\r\n    static get count() {\r\n        return Logger.instance.count;\r\n    }\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    static write(message, level = 1 /* Info */) {\r\n        Logger.instance.log({ level: level, message: message });\r\n    }\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    static writeJSON(json, level = 1 /* Info */) {\r\n        this.write(JSON.stringify(json), level);\r\n    }\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    static log(entry) {\r\n        Logger.instance.log(entry);\r\n    }\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    static error(err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    }\r\n}\r\nclass LoggerImpl {\r\n    constructor(activeLogLevel = 2 /* Warning */, subscribers = []) {\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    subscribe(listener) {\r\n        this.subscribers.push(listener);\r\n    }\r\n    clearSubscribers() {\r\n        const s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    }\r\n    get count() {\r\n        return this.subscribers.length;\r\n    }\r\n    write(message, level = 1 /* Info */) {\r\n        this.log({ level: level, message: message });\r\n    }\r\n    log(entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(subscriber => subscriber.log(entry));\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=logger.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nexport class CachingOptions {\r\n    constructor(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    get store() {\r\n        if (this.storeName === \"local\") {\r\n            return CachingOptions.storage.local;\r\n        }\r\n        else {\r\n            return CachingOptions.storage.session;\r\n        }\r\n    }\r\n}\r\nCachingOptions.storage = new PnPClientStorage();\r\nexport class CachingParserWrapper {\r\n    constructor(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    parse(response) {\r\n        return this.parser.parse(response).then(r => this.cacheData(r));\r\n    }\r\n    cacheData(data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    }\r\n}\r\n//# sourceMappingURL=caching.js.map","import { isFunc, hOP } from \"@pnp/common\";\r\nexport class HttpRequestError extends Error {\r\n    constructor(message, response, status = response.status, statusText = response.statusText) {\r\n        super(message);\r\n        this.response = response;\r\n        this.status = status;\r\n        this.statusText = statusText;\r\n        this.isHttpRequestError = true;\r\n    }\r\n}\r\nexport class ODataParserBase {\r\n    parse(r) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.handleError(r, reject)) {\r\n                this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    }\r\n    parseImpl(r, resolve, reject) {\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(txt => txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {})\r\n                .then(json => resolve(this.parseODataJSON(json)))\r\n                .catch(e => reject(e));\r\n        }\r\n    }\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    handleError(r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(`Error making HttpClient request in queryable: [${r.status}] ${r.statusText}`, r.clone()));\r\n        }\r\n        return r.ok;\r\n    }\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    parseODataJSON(json) {\r\n        let result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport class ODataDefaultParser extends ODataParserBase {\r\n}\r\nexport class TextParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.text().then(resolve);\r\n    }\r\n}\r\nexport class BlobParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.blob().then(resolve);\r\n    }\r\n}\r\nexport class JSONParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        r.json().then(resolve);\r\n    }\r\n}\r\nexport class BufferParser extends ODataParserBase {\r\n    parseImpl(r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    }\r\n}\r\nexport class LambdaParser extends ODataParserBase {\r\n    constructor(parser) {\r\n        super();\r\n        this.parser = parser;\r\n    }\r\n    parseImpl(r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    }\r\n}\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: `[${context.requestId}] (${(new Date()).getTime()}) Returning result from pipeline. Set logging to verbose to see data.`,\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise((resolve) => {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Request pipeline contains no methods!`, 2 /* Warning */);\r\n    }\r\n    const promise = next(context).then(ctx => returnResult(ctx)).catch((e) => {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun = false) {\r\n    return (target, propertyKey, descriptor) => {\r\n        const method = descriptor.value;\r\n        descriptor.value = function (...args) {\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Skipping request pipeline method ${propertyKey}, existing result in pipeline.`, 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Calling request pipeline method ${propertyKey}.`, 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then((ctx) => next(ctx));\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nexport class PipelineMethods {\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    static logStart(context) {\r\n        return new Promise(resolve => {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Beginning ${context.verb} request (${context.requestAbsoluteUrl})`,\r\n            });\r\n            resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    static caching(context) {\r\n        return new Promise(resolve => {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Caching is enabled for request, checking cache...`, 1 /* Info */);\r\n                let cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    let data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: `[${context.requestId}] (${(new Date()).getTime()}) Value returned from cache.`,\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(ctx => resolve(ctx));\r\n                    }\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Value not found in cache.`, 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    }\r\n    /**\r\n     * Sends the request\r\n     */\r\n    static send(context) {\r\n        return new Promise((resolve, reject) => {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                const p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Batching request in batch ${context.batch.batchId}.`, 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Sending request.`, 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                const client = context.clientFactory();\r\n                const opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(response => context.parser.parse(response))\r\n                    .then(result => setResult(context, result))\r\n                    .then(ctx => resolve(ctx))\r\n                    .catch(e => reject(e));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    static logEnd(context) {\r\n        return new Promise(resolve => {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) ${context.verb} request will complete in batch ${context.batch.batchId}.`,\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) Completing ${context.verb} request.`,\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    }\r\n}\r\ntslib_1.__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logStart\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"caching\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod()\r\n], PipelineMethods, \"send\", null);\r\ntslib_1.__decorate([\r\n    requestPipelineMethod(true)\r\n], PipelineMethods, \"logEnd\", null);\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nexport class Queryable {\r\n    constructor() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    toUrl() {\r\n        return this._url;\r\n    }\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    concat(pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    }\r\n    /**\r\n     * Provides access to the query builder for this url\r\n     *\r\n     */\r\n    get query() {\r\n        return this._query;\r\n    }\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    configure(options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    }\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    configureFrom(o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    }\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    usingCaching(options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getCore(parser = new JSONParser(), options = {}) {\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    postCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    patchCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    deleteCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    putCore(options = {}, parser = new JSONParser()) {\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    append(pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    }\r\n    /**\r\n     * Gets the parent url used when creating this instance\r\n     *\r\n     */\r\n    get parentUrl() {\r\n        return this._parentUrl;\r\n    }\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    extend(parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    }\r\n}\r\nexport class ODataQueryable extends Queryable {\r\n    constructor() {\r\n        super();\r\n        this._batch = null;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    inBatch(batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    }\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    toUrl() {\r\n        return this._url;\r\n    }\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    get(parser = new ODataDefaultParser(), options = {}) {\r\n        return this.getCore(parser, options);\r\n    }\r\n    getCore(parser = new ODataDefaultParser(), options = {}) {\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    postCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    patchCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    deleteCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    putCore(options = {}, parser = new ODataDefaultParser()) {\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(context => pipe(context));\r\n    }\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    addBatchDependency() {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return () => null;\r\n    }\r\n    /**\r\n     * Indicates if the current query has a batch associated\r\n     *\r\n     */\r\n    get hasBatch() {\r\n        return objectDefinedNotNull(this._batch);\r\n    }\r\n    /**\r\n     * The batch currently associated with this query or null\r\n     *\r\n     */\r\n    get batch() {\r\n        return this.hasBatch ? this._batch : null;\r\n    }\r\n}\r\n//# sourceMappingURL=queryable.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.2\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TemplateFileType, File } from \"./files\";\r\nimport { Item } from \"./items\";\r\nimport { extend, combine, getGUID, getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nexport { CanvasControl };\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nexport { CanvasColumn };\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nexport { ClientSidePart };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import { getGUID } from \"@pnp/common\";\r\nexport class ODataBatch {\r\n    constructor(_batchId = getGUID()) {\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    get batchId() {\r\n        return this._batchId;\r\n    }\r\n    /**\r\n     * The requests contained in this batch\r\n     */\r\n    get requests() {\r\n        return this._reqs;\r\n    }\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    add(url, method, options, parser, id) {\r\n        const info = {\r\n            id,\r\n            method: method.toUpperCase(),\r\n            options,\r\n            parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url,\r\n        };\r\n        const p = new Promise((resolve, reject) => {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    }\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    addDependency() {\r\n        let resolver = () => void (0);\r\n        this._deps.push(new Promise((resolve) => {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    }\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    addResolveBatchDependency(p) {\r\n        this._rDeps.push(p);\r\n    }\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    execute() {\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(() => Promise.all(this._deps))\r\n            .then(() => this.executeImpl())\r\n            .then(() => Promise.all(this._rDeps))\r\n            .then(() => void (0));\r\n    }\r\n}\r\n//# sourceMappingURL=odatabatch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","export * from \"./src/sp\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}