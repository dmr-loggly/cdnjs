{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","event","element","eventString","detail","isBelowViewport","container","threshold","document","createEvent","initCustomEvent","isAtLeftOfViewport","setSources","settings","setValue","data_sizes","style","srcDataName","data_src","srcDataValue","getData","mustChangeToWebP","supportsWebP","to_webp","addClass","tagName","supportsClassList","classList","className","parent","setSourcesInChildren","srcsetDataName","removeClass","sizesDataValue","sizesDataName","setAttributeIfNotNullOrEmpty","replace","srcsetDataValue","_isFirstLoop","window","_boundHandleScroll","_reveal","replaceExtToWebp","backgroundImage","getDefaultSettings","elements_selector","throttle","data_srcset","class_loading","class_loaded","class_error","class_initial","skip_invisible","callback_load","callback_error","callback_enter","callback","argument","getBoundingClientRect","top","pageYOffset","ownerDocument","documentElement","clientTop","fold","getTopOffset","offsetHeight","getLeftOffset","isAtRightOfViewport","left","documentWidth","isAboveViewport","pageXOffset","createInstance","options","instance","offsetWidth","classObj","optsLength","CustomEvent","err","dispatchEvent","isBot","runningOnBrowser","setData","attribute","value","setAttribute","webPString","elem","test","navigator","userAgent","parentTag","createElement","condition","toDataURL","indexOf","attrName","dataAttrName","toWebP","children","i","attrValue","childTag","add","loadCallback","remove","RegExp","instanceSettings","_settings","_extends","callCallback","addEventListener","_previousLoopTime","callback_set","_loopThroughElements","update","processedIndexes","force","firstLoop","errorCallback","removeEventListener","load","callback_processed","elementsLength","_stopScrollHandler","elements","length","forceDownload","elementsToPurge","offsetParent","isInsideViewport","handleScroll","push","setWasProcessed","clearTimeout","pop","_loopTimeout","_purgeElements","_elements","loadAll","getWasProcessed","Array","splice","_isHandlingScroll","_queryOriginNode","autoInitOptions","now","Date","remainingTime","setTimeout","bind","prototype","slice","call","querySelectorAll","_startScrollHandler","destroy","lazyLoadOptions","getAttribute","processedDataName","processedDataValue","autoInitialize"],"mappings":"kYAAC,SAAUA,EAAQC,GACC,YAAnB,oBAAOC,QAAP,YAAAC,QAAOD,WAA0C,oBAAXE,OAAyBA,OAAOF,QAAUD,IAC9D,mBAAXI,QAAyBA,OAAOC,IAAMD,OAAOJ,GACnDD,EAAOO,SAAWN,IAHnB,CAAAO,KAAA,WAAkBP,aA8FXQ,SAAAA,EAAQC,EAAgBC,EAAeC,GAC1C,QAEGC,EAAAH,EAAAI,EAAAC,IACAN,EAAQO,EAASC,EAAYF,IAC7BN,EAAMS,EAAgBP,EAAtBI,IACHI,EAAAT,EAAAI,EAAAC,IAuIH,SAAAK,EAAAV,EAAAW,GAAA,IAEMC,EArCPD,EAqCGE,WACQC,EAtCXH,EAsCGX,YACAe,EAvCHJ,EAuCGK,SAEHC,EAAAC,EAAAlB,EAAAe,GA1CMI,EAAmBC,GAAgBT,EAASU,QA4CnD,OAAMC,EAAWC,SACb,IAAIC,MACAxB,IAAAA,EAAQyB,EAAcC,WACtBC,GAAA,YAAAA,EAAAJ,SACHK,EACD5B,EALJ,SApCK6B,EA4CCC,GAGE,IAAAC,EAAAb,EAAAlB,EAAAgC,GACHC,EAAAjC,EAAA,QAAA+B,GACD/B,IAAAA,EAAoBA,EAAQ0B,EAAUQ,GAL1CD,EApCIjC,EA4CJ,SA1CImC,EACAhB,GA6CJc,EACCjC,EACA,MA1CGiB,EA+CHE,GAEA,MAEA,IAAKiB,SACLC,EAAwBrC,EAAesC,MAAAA,GACvC,MAbD,IAAA,QA/BGV,EAAqB5B,EAAS,MAAOe,GA+CxClB,EAAqBG,EAAA,MAAAiB,GACpBsB,MACC,QACC,GAAAtB,EAAQ,CACR,IAAAL,EAAA4B,EAAAvB,EAAAE,GA7CCnB,EAAQc,MAAM2B,gBAAd,QAAwC7B,EAAxC,OA1OH,IAAC8B,EAAmB,WAAA,OAAEC,kBAAA,MAItBvC,UAAWiC,OAFZhC,UAAIqC,IAAqBE,SAAO,IAC/BD,SAAAA,MACAvC,YAAWiC,SACXhC,WAAAA,QACAuC,cAJ+B,UAK/B5B,aAAU,SACV6B,YAAAA,QACAhC,cAAY,UACZiC,gBAAAA,EACAC,cAAAA,KACAC,eAAa,KACbC,aAAAA,KACAC,mBAAgB,KAChBC,eAAAA,KACAC,SAAAA,IAGAC,EAAgB,SAjBeC,EAAAC,GAkB/BlC,GAlB+BiC,EAAPC,IAsBpBD,EAAU,SAAAtD,GACbsD,OACAtD,EAAAwD,wBAAAC,IAHFpB,OAAAqB,YAUE1D,EAAQ2D,cAAcC,gBAAgBC,WAIlC1D,EAAkB,SAASH,EAASI,EAAWC,GAKpD,OAJAD,IACCA,OAGDiC,OAAOyB,YAAQC,OAAa/D,YAL7B+D,EAAA3D,GAAAA,EAAA4D,eAKgBD,EAAa/D,GAAWK,GAGxC4D,EAAA,SAAAjE,GACC,OAODA,EAAMkE,wBAAsBC,KAC3B9B,OAAM+B,YACNpE,EAAM8D,cACL1D,gBACGgE,YAKCC,EAAkB,SAAlBA,EAAAA,EAAoCjE,GACzC,IAAM0D,EACL1D,OAAciC,WAKf,OAPDjC,IAAAiC,OALK+B,EAAgB/B,OAAOiC,YAWtB7D,EAAAA,GAAqB2D,IAEzBhE,EAAciC,GAASA,GARnBgC,EAAkB,SAASrE,EAASI,EAAWC,GAmBpD,OANAD,IACED,OAAAA,OAAgBH,YAAoBK,EAArCD,KAKD2D,EAAA/D,GAAAK,EAAAL,EAAAgE,cAGKO,EAAiB,SAAjBA,EAAiBnE,EAAoBoE,GAGvC,OADApE,IAAIH,OAAcoC,OAAAiC,YAAlBL,EAAA7D,KACIqE,EAAwBD,GAA5BnE,EAAAL,EAAA0E,aAHEH,EAAiB,SAAUI,EAAUH,GAkB3C,IAAAzE,EAES6E,EAAY,IAAAD,EAAAH,GACb,IADJzE,EAIK,IAAA8E,YALYL,yBAKZtE,QAAAuE,SAAAA,KAED,MAAKK,IAEJ/E,EAAAO,SAAAC,YAAA,gBACJC,gBAVgBgE,yBAUhB,GAAA,GAAAC,SAAAA,IAhBDpC,OAAO0C,cAAchF,IAuCnBiF,EACJC,SAAAA,EAAAA,GAEF,OAAMzD,EAAAA,aARN,QASCyD,IAGIC,EAACD,SAAAA,EAAkBE,EAAAC,GACtB,OAAApF,EAAAqF,aAbF,QAaEF,EAAAC,IAGGE,EAAa,SAAAtF,GAAA,OACjBkF,EAAIK,EA/BqB,gBAiBD,SAgBpBA,EAAA,SAAAvF,GAAA,MAhBoB,SAiBvBkB,EAAAlB,EAlCwB,kBAiBpBiF,EAAqC,oBAAX5C,OAQhC2C,EALEC,KAAsB,aAAc5C,SAoBtC,gCAAAmD,KAAAC,UAAAC,WAlBMlE,EAoBNyD,GAAMrD,cAAuBtB,SAAvBsB,cACL+D,KAyBA3F,EAnBcuB,WACZ,IAAA0D,EACAhD,OAAAA,EAGF,IAvBIsD,EAAOjF,SAASsF,cAAc,UAyBV,SAAAL,EACxBM,aAAYT,EAAMlD,WAAQ,QAD3B,IAAAqD,EAAAO,UAdA,cAcAC,QAAA,mBAYSV,GA1BHzD,EAAuB,SA6B7B+D,EAAuCK,EAAAC,EAAAC,GAMtC,IAAMjF,IAAAA,EAAAA,EAAAA,EAAeC,EAAiBH,EAAjBoF,SAArBC,GAAAA,GAAA,EACA,GAAyBhF,WAAnBD,EAAAA,QAAmBC,CACzB,IAAAiF,EAAgB9E,EAAhB+E,EAAAL,GACChE,EAAAqE,EAAAN,EAAAK,EAAAH,KASE1D,EAAA,SAAA4C,EAAAS,GAAA,OACDA,EAAM9D,EAAAA,QAAiBb,kBAAiBc,SAAxCoD,GAEAnD,EAAgCjC,SAChCiC,EAMAA,EAMAmD,EACAc,GAEAjE,GAGAL,EAAAA,aAAAA,EAAAY,EAAqCzB,EAArCmF,KAyDA5E,EAAA,SAAAtB,EAAe0B,GACdF,EACAxB,EAAAyB,UAAA8E,IAAA7E,GAGDI,EAAAA,YAAqBnB,EAASmC,UAAAA,IAA9B,IAAApB,GAPDI,EAAA,SAAA9B,EAAA0B,GAnCMF,EA+CAgF,EAAAA,UAAeC,OAAfD,GAGJxG,EAAA0B,UAAA1B,EAAA0B,UAAAQ,QAAA,IAAAwE,OAAA,WAAAhF,EAAA,YAAA,KAAAQ,QAAA,OAAA,IAAAA,QAAA,OAAA,KAHFrC,EAAA,SAAA8G,GAnCD7G,KAAK8G,UAAYC,YAAkBnE,IAAsBiE,GA+CxDG,KAAAA,iBACAhH,KAAI8G,UAAQxG,YAAUiC,OACrBrC,SACAA,KAAAA,UAAQ+G,UAERjH,KAAAkH,kBAAA,EACDtG,KAAAA,aAAA,KACAoG,KAAAA,mBAAsBG,KAAAA,aAAcjH,KAApCF,MA5CDA,KAAKsC,cAAe,EA+CpB8E,OAAAA,iBAAsB,SAAApH,KAAAwC,oBACrBxC,KAAAqH,UAGAtH,EAAIuG,WAAJ7D,QACC6E,SAAAA,EADDC,GAAA,GAECC,IAAAA,EAAiBlF,GAFlB,CAMC,IAAAzB,EAAAb,KAAA8G,UAECW,EAAA,SAAAA,IA5CI5G,IAyDHW,EAAAA,oBAAkBX,OAASsC,GAC3BjD,EAAAwH,oBAAA,QAAAD,GACDzF,EAAA9B,EAAAW,EAAAmC,eACAxB,EAAKmG,EAAKzH,EAAVgD,aACA8D,EAAAnG,EAAAyC,eAAApD,KAGAwG,EAAA,SAAAA,IAEF7F,IAGCmG,EAAAA,EAAanG,EAAS+G,eACtBpG,EAAAtB,EAAAW,EAAAoC,cACD/C,EAAAwH,oBAAA,OAAAhB,GACAxG,EAAI2H,oBAAsB,QAAAJ,GACzBT,EAAKc,EAAAA,cAAL5H,KAGD8G,EAAIQ,EAAWjE,eAAArD,IACd,MAAKoC,SAAe,SAApB2D,QAAA/F,EAAAuB,UAAA,IACAvB,EAAA+G,iBAAA,OAAAP,GAxFkBxG,EAAA+G,iBAAA,QAAAQ,GAoClBjG,EAAStB,EAASW,EAASmC,gBAwD5BpC,EAAMmH,EAAWlH,GAAjBmG,EACCa,EAAiBE,aAASC,KAnD5BZ,qBAAsB,SAASa,GAuD9B,IAAK3B,EAAWuB,KAAAA,UACfE,EAAI7H,KAAU6H,UACdF,EAAAE,EAAAA,EAAAC,OAAA,EACA1B,OAAAA,EACC4B,KACAV,EAAAxH,KAAAsC,aAEF,IAAAgE,EAAA,EAAAA,EAAAuB,EAAAvB,IAAA,CACA,IAAApG,EAAOgI,EAAgBF,GAEtBnH,EAAAuC,gBAAA,OAAAlD,EAAAiI,eAKAjD,GACA+C,GAIAG,EArHkBlI,EA8DhBW,EAASP,UA0DbwH,EAAAA,cAGEN,GAIAhG,EAAAtB,EAAAW,EAAAsC,eAGFkF,KAAAA,KAAAA,GA1DGf,EAAiBgB,KAAKhC,GA6DxBiC,EAAiBrI,IAIf,KAAIoH,EAAJU,QACCQ,EAAAA,OAAalB,EAAbmB,MAAA,GACAzB,EAAK0B,EAALd,mBAAAG,EAAAC,QAGIZ,IAALS,GACA7H,KAPD8H,qBAWGN,IACAxH,KAAAsC,cAAK8E,IAMRuB,eAAKvB,WACL,IAAAW,EAAA/H,KAAA4I,UA3JkBf,EAAAE,EAAAC,OA8Ff1B,OAAAA,EAgELuC,KAEC,IAhKmBvC,EAAA,EAAAA,EAAAuB,EAAAvB,IAAA,CAkGlB,IAAIpG,EAAU6H,EAASzB,GAiExBwC,EAAA5I,IACAgI,EAAiBa,KAAAA,GAQjB,KA5KmBb,EAAAF,OAAA,GA0GlBD,EAASiB,OAAOd,EAAgBO,MAAO,IAuEvCD,oBAAkBE,WAClB1I,KAAK0I,oBACL1I,KAAAiJ,mBAAA,EACDjJ,KAAK8H,UAAAA,UAALb,iBACA,SACAjH,KAAKkJ,sBAKLpB,mBAAa5H,WACbF,KAAAiJ,oBA5LFjJ,KAAAiJ,mBAAA,EA2HGjJ,KAAK8G,UAAUxG,UAAUoH,oBAoE5B,SACA1H,KAAImJ,sBAKJd,aAAOtI,WA5dP,IAAA+C,EAAA9C,KAAA8G,UAAAhE,SA4ZE,GAAiB,IAAbA,EAAgB,CACnB,IAAIsG,EAAMC,KAAKD,MACXE,EAAgBxG,GAAYsG,EAAMpJ,KAAKkH,mBACvCoC,GAAiB,GAAKA,EAAgBxG,GACrC9C,KAAK0I,eACRF,aAAaxI,KAAK0I,cAClB1I,KAAK0I,aAAe,MAErB1I,KAAKkH,kBAAoBkC,EACzBpJ,KAAKoH,wBACMpH,KAAK0I,eAChB1I,KAAK0I,aAAea,WACnB,WACCvJ,KAAKkH,kBAAoBmC,KAAKD,MAC9BpJ,KAAK0I,aAAe,KACpB1I,KAAKoH,wBACJoC,KAAKxJ,MACPsJ,SAIFtJ,KAAKoH,wBAIPyB,QAAS,WACR7I,KAAKoH,sBAAqB,IAG3BC,OAAQ,WAEPrH,KAAK4I,UAAYG,MAAMU,UAAUC,MAAMC,KACtC3J,KAAKkJ,iBAAiBU,iBACrB5J,KAAK8G,UAAUjE,oBAGjB7C,KAAK2I,iBACL3I,KAAKoH,uBACLpH,KAAK6J,uBAGNC,QAAS,WACRvH,OAAOmF,oBAAoB,SAAU1H,KAAKwC,oBACtCxC,KAAK0I,eACRF,aAAaxI,KAAK0I,cAClB1I,KAAK0I,aAAe,MAErB1I,KAAK8H,qBACL9H,KAAK4I,UAAY,KACjB5I,KAAKkJ,iBAAmB,KACxBlJ,KAAK8G,UAAY,MAGlBa,KAAM,SAASzH,EAASqH,GACvBvH,KAAKyC,QAAQvC,EAASqH,KAKxB,IAAI4B,EAAkB5G,OAAOwH,gBAK7B,OAJI5E,GAAoBgE,GA5VxB,SAAM/H,EAAWlB,GAChB,IAAA4E,EAAekF,EAARhC,OADR,GAAAlD,EAQMyD,IAAAA,IAAAA,EAAAA,EAAkBjC,EAAAxB,EAAlByD,IACLnD,EAAiB6E,EAAAA,EAAmBC,SAL/B9E,EAAUP,EAAC3E,GAyVhBiK,CAAepK,EAAUoJ,GAGnBpJ","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nvar getDefaultSettings = () => ({\r\n\telements_selector: \"img\",\r\n\tcontainer: window,\r\n\tthreshold: 300,\r\n\tthrottle: 150,\r\n\tdata_src: \"src\",\r\n\tdata_srcset: \"srcset\",\r\n\tdata_sizes: \"sizes\",\r\n\tclass_loading: \"loading\",\r\n\tclass_loaded: \"loaded\",\r\n\tclass_error: \"error\",\r\n\tclass_initial: \"initial\",\r\n\tskip_invisible: true,\r\n\tcallback_load: null,\r\n\tcallback_error: null,\r\n\tcallback_set: null,\r\n\tcallback_processed: null,\r\n\tcallback_enter: null,\r\n\tto_webp: false\r\n});\n\nconst callCallback = function(callback, argument) {\r\n\tif (callback) {\r\n\t\tcallback(argument);\r\n\t}\r\n};\n\nconst getTopOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().top +\r\n\t\twindow.pageYOffset -\r\n\t\telement.ownerDocument.documentElement.clientTop\r\n\t);\r\n};\r\n\r\nconst isBelowViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? window.innerHeight + window.pageYOffset\r\n\t\t\t: getTopOffset(container) + container.offsetHeight;\r\n\treturn fold <= getTopOffset(element) - threshold;\r\n};\r\n\r\nconst getLeftOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().left +\r\n\t\twindow.pageXOffset -\r\n\t\telement.ownerDocument.documentElement.clientLeft\r\n\t);\r\n};\r\n\r\nconst isAtRightOfViewport = function(element, container, threshold) {\r\n\tconst documentWidth = window.innerWidth;\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? documentWidth + window.pageXOffset\r\n\t\t\t: getLeftOffset(container) + documentWidth;\r\n\treturn fold <= getLeftOffset(element) - threshold;\r\n};\r\n\r\nconst isAboveViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageYOffset : getTopOffset(container);\r\n\treturn fold >= getTopOffset(element) + threshold + element.offsetHeight;\r\n};\r\n\r\nconst isAtLeftOfViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageXOffset : getLeftOffset(container);\r\n\treturn fold >= getLeftOffset(element) + threshold + element.offsetWidth;\r\n};\r\n\r\nfunction isInsideViewport(element, container, threshold) {\r\n\treturn (\r\n\t\t!isBelowViewport(element, container, threshold) &&\r\n\t\t!isAboveViewport(element, container, threshold) &&\r\n\t\t!isAtRightOfViewport(element, container, threshold) &&\r\n\t\t!isAtLeftOfViewport(element, container, threshold)\r\n\t);\r\n}\n\n/* Creates instance and notifies it through the window element */\r\nconst createInstance = function (classObj, options) { \r\n    var event;\r\n    let eventString = \"LazyLoad::Initialized\";\r\n    let instance = new classObj(options);\r\n    try {\r\n        // Works in modern browsers\r\n        event = new CustomEvent(eventString, { detail: { instance } });\r\n    } \r\n    catch(err) {\r\n        // Works in Internet Explorer (all versions)\r\n        event = document.createEvent(\"CustomEvent\");\r\n        event.initCustomEvent(eventString, false, false, { instance });\r\n    }\r\n    window.dispatchEvent(event);\r\n};\r\n\r\n/* Auto initialization of one or more instances of lazyload, depending on the \r\n    options passed in (plain object or an array) */\r\nfunction autoInitialize (classObj, options) { \r\n    let optsLength = options.length;\r\n    if (!optsLength) {\r\n        // Plain object\r\n        createInstance(classObj, options);\r\n    }\r\n    else {\r\n        // Array of objects\r\n        for (let i = 0; i < optsLength; i++) {\r\n            createInstance(classObj, options[i]);\r\n        }\r\n    }\r\n}\n\nconst dataPrefix = \"data-\";\r\nconst processedDataName = \"was-processed\";\r\nconst processedDataValue = \"true\";\r\n\r\nconst getData = (element, attribute) => {\r\n\treturn element.getAttribute(dataPrefix + attribute);\r\n};\r\n\r\nconst setData = (element, attribute, value) => {\r\n\treturn element.setAttribute(dataPrefix + attribute, value);\r\n};\r\n\r\nconst setWasProcessed = element =>\r\n\tsetData(element, processedDataName, processedDataValue);\r\n\r\nconst getWasProcessed = element =>\r\n\tgetData(element, processedDataName) === processedDataValue;\n\nconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\nconst isBot =\r\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\r\nconst supportsClassList =\r\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\r\n\r\nconst detectWebP = () => {\r\n\tif (!runningOnBrowser) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar webPString = \"image/webp\";\r\n\tvar elem = document.createElement(\"canvas\");\r\n\r\n\tif (elem.getContext && elem.getContext(\"2d\")) {\r\n\t\treturn elem.toDataURL(webPString).indexOf(\"data:\" + webPString) === 0;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\nconst supportsWebP = detectWebP();\n\nconst setSourcesInChildren = function(\r\n\tparentTag,\r\n\tattrName,\r\n\tdataAttrName,\r\n\ttoWebP\r\n) {\r\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\tlet attrValue = getData(childTag, dataAttrName);\r\n\t\t\tsetAttributeIfNotNullOrEmpty(childTag, attrName, attrValue, toWebP);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst replaceExtToWebp = (value, condition) =>\r\n\tcondition ? value.replace(/\\.(jpe?g|png)/gi, \".webp\") : value;\r\n\r\nconst setAttributeIfNotNullOrEmpty = function(\r\n\telement,\r\n\tattrName,\r\n\tvalue,\r\n\ttoWebP\r\n) {\r\n\tif (!value) {\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, replaceExtToWebp(value, toWebP));\r\n};\r\n\r\nfunction setSources(element, settings) {\r\n\tconst {\r\n\t\tdata_sizes: sizesDataName,\r\n\t\tdata_srcset: srcsetDataName,\r\n\t\tdata_src: srcDataName\r\n\t} = settings;\r\n\tconst srcDataValue = getData(element, srcDataName);\r\n\tconst mustChangeToWebP = supportsWebP && settings.to_webp;\r\n\tswitch (element.tagName) {\r\n\t\tcase \"IMG\": {\r\n\t\t\tconst parent = element.parentNode;\r\n\t\t\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\t\t\tsetSourcesInChildren(\r\n\t\t\t\t\tparent,\r\n\t\t\t\t\t\"srcset\",\r\n\t\t\t\t\tsrcsetDataName,\r\n\t\t\t\t\tmustChangeToWebP\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst sizesDataValue = getData(element, sizesDataName);\r\n\t\t\tsetAttributeIfNotNullOrEmpty(element, \"sizes\", sizesDataValue);\r\n\t\t\tconst srcsetDataValue = getData(element, srcsetDataName);\r\n\t\t\tsetAttributeIfNotNullOrEmpty(\r\n\t\t\t\telement,\r\n\t\t\t\t\"srcset\",\r\n\t\t\t\tsrcsetDataValue,\r\n\t\t\t\tmustChangeToWebP\r\n\t\t\t);\r\n\t\t\tsetAttributeIfNotNullOrEmpty(\r\n\t\t\t\telement,\r\n\t\t\t\t\"src\",\r\n\t\t\t\tsrcDataValue,\r\n\t\t\t\tmustChangeToWebP\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"IFRAME\":\r\n\t\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\t\tbreak;\r\n\t\tcase \"VIDEO\":\r\n\t\t\tsetSourcesInChildren(element, \"src\", srcDataName);\r\n\t\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tif (srcDataValue) {\r\n\t\t\t\tlet setValue = replaceExtToWebp(srcDataValue, mustChangeToWebP);\r\n\t\t\t\telement.style.backgroundImage = `url(\"${setValue}\")`;\r\n\t\t\t}\r\n\t}\r\n}\n\nconst addClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.add(className);\r\n        return;\r\n    }\r\n    element.className += (element.className ? \" \" : \"\") + className;\r\n};\r\n\r\nconst removeClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.remove(className);\r\n        return;\r\n    }\r\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n};\n\n/*\r\n * Constructor\r\n */\r\n\r\nconst LazyLoad = function(instanceSettings) {\r\n\tthis._settings = Object.assign({}, getDefaultSettings(), instanceSettings);\r\n\tthis._queryOriginNode =\r\n\t\tthis._settings.container === window\r\n\t\t\t? document\r\n\t\t\t: this._settings.container;\r\n\r\n\tthis._previousLoopTime = 0;\r\n\tthis._loopTimeout = null;\r\n\tthis._boundHandleScroll = this.handleScroll.bind(this);\r\n\r\n\tthis._isFirstLoop = true;\r\n\twindow.addEventListener(\"resize\", this._boundHandleScroll);\r\n\tthis.update();\r\n};\r\n\r\nLazyLoad.prototype = {\r\n\t_reveal: function(element, force) {\r\n\t\tif (!force && getWasProcessed(element)) {\r\n\t\t\treturn; // element has already been processed and force wasn't true\r\n\t\t}\r\n\r\n\t\tconst settings = this._settings;\r\n\r\n\t\tconst errorCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_error);\r\n\t\t\tcallCallback(settings.callback_error, element);\r\n\t\t};\r\n\r\n\t\tconst loadCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_loaded);\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tcallCallback(settings.callback_load, element);\r\n\t\t};\r\n\r\n\t\tcallCallback(settings.callback_enter, element);\r\n\t\tif ([\"IMG\", \"IFRAME\", \"VIDEO\"].indexOf(element.tagName) > -1) {\r\n\t\t\telement.addEventListener(\"load\", loadCallback);\r\n\t\t\telement.addEventListener(\"error\", errorCallback);\r\n\t\t\taddClass(element, settings.class_loading);\r\n\t\t}\r\n\t\tsetSources(element, settings);\r\n\t\tcallCallback(settings.callback_set, element);\r\n\t},\r\n\r\n\t_loopThroughElements: function(forceDownload) {\r\n\t\tconst settings = this._settings,\r\n\t\t\telements = this._elements,\r\n\t\t\telementsLength = !elements ? 0 : elements.length;\r\n\t\tlet i,\r\n\t\t\tprocessedIndexes = [],\r\n\t\t\tfirstLoop = this._isFirstLoop;\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If must skip_invisible and element is invisible, skip it */\r\n\t\t\tif (settings.skip_invisible && element.offsetParent === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tisBot ||\r\n\t\t\t\tforceDownload ||\r\n\t\t\t\tisInsideViewport(\r\n\t\t\t\t\telement,\r\n\t\t\t\t\tsettings.container,\r\n\t\t\t\t\tsettings.threshold\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tif (firstLoop) {\r\n\t\t\t\t\taddClass(element, settings.class_initial);\r\n\t\t\t\t}\r\n\t\t\t\t/* Start loading the image */\r\n\t\t\t\tthis.load(element);\r\n\t\t\t\t/* Marking the element as processed. */\r\n\t\t\t\tprocessedIndexes.push(i);\r\n\t\t\t\tsetWasProcessed(element);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing processed elements from this._elements. */\r\n\t\twhile (processedIndexes.length) {\r\n\t\t\telements.splice(processedIndexes.pop(), 1);\r\n\t\t\tcallCallback(settings.callback_processed, elements.length);\r\n\t\t}\r\n\t\t/* Stop listening to scroll event when 0 elements remains */\r\n\t\tif (elementsLength === 0) {\r\n\t\t\tthis._stopScrollHandler();\r\n\t\t}\r\n\t\t/* Sets isFirstLoop to false */\r\n\t\tif (firstLoop) {\r\n\t\t\tthis._isFirstLoop = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_purgeElements: function() {\r\n\t\tconst elements = this._elements,\r\n\t\t\telementsLength = elements.length;\r\n\t\tlet i,\r\n\t\t\telementsToPurge = [];\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If the element has already been processed, skip it */\r\n\t\t\tif (getWasProcessed(element)) {\r\n\t\t\t\telementsToPurge.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing elements to purge from this._elements. */\r\n\t\twhile (elementsToPurge.length > 0) {\r\n\t\t\telements.splice(elementsToPurge.pop(), 1);\r\n\t\t}\r\n\t},\r\n\r\n\t_startScrollHandler: function() {\r\n\t\tif (!this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = true;\r\n\t\t\tthis._settings.container.addEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t_stopScrollHandler: function() {\r\n\t\tif (this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = false;\r\n\t\t\tthis._settings.container.removeEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\thandleScroll: function() {\r\n\t\tconst throttle = this._settings.throttle;\r\n\r\n\t\tif (throttle !== 0) {\r\n\t\t\tlet now = Date.now();\r\n\t\t\tlet remainingTime = throttle - (now - this._previousLoopTime);\r\n\t\t\tif (remainingTime <= 0 || remainingTime > throttle) {\r\n\t\t\t\tif (this._loopTimeout) {\r\n\t\t\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis._previousLoopTime = now;\r\n\t\t\t\tthis._loopThroughElements();\r\n\t\t\t} else if (!this._loopTimeout) {\r\n\t\t\t\tthis._loopTimeout = setTimeout(\r\n\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\tthis._previousLoopTime = Date.now();\r\n\t\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t\t\tthis._loopThroughElements();\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tremainingTime\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._loopThroughElements();\r\n\t\t}\r\n\t},\r\n\r\n\tloadAll: function() {\r\n\t\tthis._loopThroughElements(true);\r\n\t},\r\n\r\n\tupdate: function() {\r\n\t\t// Converts to array the nodeset obtained querying the DOM from _queryOriginNode with elements_selector\r\n\t\tthis._elements = Array.prototype.slice.call(\r\n\t\t\tthis._queryOriginNode.querySelectorAll(\r\n\t\t\t\tthis._settings.elements_selector\r\n\t\t\t)\r\n\t\t);\r\n\t\tthis._purgeElements();\r\n\t\tthis._loopThroughElements();\r\n\t\tthis._startScrollHandler();\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\twindow.removeEventListener(\"resize\", this._boundHandleScroll);\r\n\t\tif (this._loopTimeout) {\r\n\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\tthis._loopTimeout = null;\r\n\t\t}\r\n\t\tthis._stopScrollHandler();\r\n\t\tthis._elements = null;\r\n\t\tthis._queryOriginNode = null;\r\n\t\tthis._settings = null;\r\n\t},\r\n\r\n\tload: function(element, force) {\r\n\t\tthis._reveal(element, force);\r\n\t}\r\n};\r\n\r\n/* Automatic instances creation if required (useful for async script loading!) */\r\nlet autoInitOptions = window.lazyLoadOptions;\r\nif (runningOnBrowser && autoInitOptions) {\r\n\tautoInitialize(LazyLoad, autoInitOptions);\r\n}\n\nreturn LazyLoad;\n\n})));\n"]}