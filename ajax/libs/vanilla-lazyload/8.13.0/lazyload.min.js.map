{"version":3,"sources":["lazyload.js"],"names":["global","factory","exports","_typeof","module","define","amd","LazyLoad","this","event","element","eventString","detail","isBelowViewport","container","threshold","document","createEvent","initCustomEvent","isAtLeftOfViewport","setAttributeIfNotNullOrEmpty","sizesDataName","settings","data_sizes","tagName","data_srcset","srcDataValue","getData","srcDataName","setSourcesInChildren","parent","srcsetDataName","backgroundImage","sizesDataValue","srcsetDataValue","window","supportsClassList","classList","removeClass","getDefaultSettings","elements_selector","throttle","data_src","class_loading","class_loaded","class_error","class_initial","skip_invisible","callback_load","callback_processed","callback","argument","callback_enter","getBoundingClientRect","top","pageYOffset","ownerDocument","documentElement","clientTop","fold","getTopOffset","offsetHeight","getLeftOffset","isAtRightOfViewport","left","documentWidth","isAboveViewport","pageXOffset","createInstance","options","instance","offsetWidth","classObj","optsLength","CustomEvent","err","dispatchEvent","attribute","attributeValue","setData","value","setAttribute","setWasProcessed","getWasProcessed","parentTag","attrName","dataAttrName","childTag","i","children","setSources","runningOnBrowser","isBot","test","navigator","userAgent","createElement","_settings","_queryOriginNode","add","className","_loopTimeout","update","remove","prototype","replace","RegExp","instanceSettings","errorCallback","removeEventListener","addClass","bind","_isFirstLoop","addEventListener","_boundHandleScroll","_reveal","force","callCallback","callback_set","callback_error","elementsLength","firstLoop","loadCallback","indexOf","forceDownload","isInsideViewport","elements","_elements","length","offsetParent","_purgeElements","elementsToPurge","processedIndexes","push","splice","pop","_startScrollHandler","_stopScrollHandler","_isHandlingScroll","handleScroll","now","Date","remainingTime","clearTimeout","_loopThroughElements","destroy","_previousLoopTime","load","setTimeout","autoInitOptions","autoInitialize","loadAll","Array","slice","call","querySelectorAll","lazyLoadOptions","getAttribute","processedDataName","processedDataValue"],"mappings":"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","file":"lazyload.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.LazyLoad = factory());\n}(this, (function () { 'use strict';\n\nvar getDefaultSettings = () => ({\r\n\telements_selector: \"img\",\r\n\tcontainer: window,\r\n\tthreshold: 300,\r\n\tthrottle: 150,\r\n\tdata_src: \"src\",\r\n\tdata_srcset: \"srcset\",\r\n\tdata_sizes: \"sizes\",\r\n\tclass_loading: \"loading\",\r\n\tclass_loaded: \"loaded\",\r\n\tclass_error: \"error\",\r\n\tclass_initial: \"initial\",\r\n\tskip_invisible: true,\r\n\tcallback_load: null,\r\n\tcallback_error: null,\r\n\tcallback_set: null,\r\n\tcallback_processed: null,\r\n\tcallback_enter: null\r\n});\n\nconst callCallback = function(callback, argument) {\r\n\tif (callback) {\r\n\t\tcallback(argument);\r\n\t}\r\n};\n\nconst getTopOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().top +\r\n\t\twindow.pageYOffset -\r\n\t\telement.ownerDocument.documentElement.clientTop\r\n\t);\r\n};\r\n\r\nconst isBelowViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? window.innerHeight + window.pageYOffset\r\n\t\t\t: getTopOffset(container) + container.offsetHeight;\r\n\treturn fold <= getTopOffset(element) - threshold;\r\n};\r\n\r\nconst getLeftOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().left +\r\n\t\twindow.pageXOffset -\r\n\t\telement.ownerDocument.documentElement.clientLeft\r\n\t);\r\n};\r\n\r\nconst isAtRightOfViewport = function(element, container, threshold) {\r\n\tconst documentWidth = window.innerWidth;\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? documentWidth + window.pageXOffset\r\n\t\t\t: getLeftOffset(container) + documentWidth;\r\n\treturn fold <= getLeftOffset(element) - threshold;\r\n};\r\n\r\nconst isAboveViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageYOffset : getTopOffset(container);\r\n\treturn fold >= getTopOffset(element) + threshold + element.offsetHeight;\r\n};\r\n\r\nconst isAtLeftOfViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageXOffset : getLeftOffset(container);\r\n\treturn fold >= getLeftOffset(element) + threshold + element.offsetWidth;\r\n};\r\n\r\nfunction isInsideViewport(element, container, threshold) {\r\n\treturn (\r\n\t\t!isBelowViewport(element, container, threshold) &&\r\n\t\t!isAboveViewport(element, container, threshold) &&\r\n\t\t!isAtRightOfViewport(element, container, threshold) &&\r\n\t\t!isAtLeftOfViewport(element, container, threshold)\r\n\t);\r\n}\n\n/* Creates instance and notifies it through the window element */\r\nconst createInstance = function (classObj, options) { \r\n    var event;\r\n    let eventString = \"LazyLoad::Initialized\";\r\n    let instance = new classObj(options);\r\n    try {\r\n        // Works in modern browsers\r\n        event = new CustomEvent(eventString, { detail: { instance } });\r\n    } \r\n    catch(err) {\r\n        // Works in Internet Explorer (all versions)\r\n        event = document.createEvent(\"CustomEvent\");\r\n        event.initCustomEvent(eventString, false, false, { instance });\r\n    }\r\n    window.dispatchEvent(event);\r\n};\r\n\r\n/* Auto initialization of one or more instances of lazyload, depending on the \r\n    options passed in (plain object or an array) */\r\nfunction autoInitialize (classObj, options) { \r\n    let optsLength = options.length;\r\n    if (!optsLength) {\r\n        // Plain object\r\n        createInstance(classObj, options);\r\n    }\r\n    else {\r\n        // Array of objects\r\n        for (let i = 0; i < optsLength; i++) {\r\n            createInstance(classObj, options[i]);\r\n        }\r\n    }\r\n}\n\nconst dataPrefix = \"data-\";\r\nconst processedDataName = \"was-processed\";\r\nconst processedDataValue = \"true\";\r\n\r\nconst getData = (element, attribute) => {\r\n\treturn element.getAttribute(dataPrefix + attribute);\r\n};\r\n\r\nconst setData = (element, attribute, value) => {\r\n\treturn element.setAttribute(dataPrefix + attribute, value);\r\n};\r\n\r\nconst setWasProcessed = element =>\r\n\tsetData(element, processedDataName, processedDataValue);\r\n\r\nconst getWasProcessed = element =>\r\n\tgetData(element, processedDataName) === processedDataValue;\n\nconst setSourcesInChildren = function(parentTag, attrName, dataAttrName) {\r\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\tlet attributeValue = getData(childTag, dataAttrName);\r\n\t\t\tif (attributeValue) {\r\n\t\t\t\tchildTag.setAttribute(attrName, attributeValue);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst setAttributeIfNotNullOrEmpty = function(element, attrName, value) {\r\n\tif (!value) {\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, value);\r\n};\r\n\r\nfunction setSources(element, settings) {\r\n\tconst {\r\n\t\tdata_sizes: sizesDataName,\r\n\t\tdata_srcset: srcsetDataName,\r\n\t\tdata_src: srcDataName\r\n\t} = settings;\r\n\tconst srcDataValue = getData(element, srcDataName);\r\n\tconst tagName = element.tagName;\r\n\tif (tagName === \"IMG\") {\r\n\t\tconst parent = element.parentNode;\r\n\t\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName);\r\n\t\t}\r\n\t\tconst sizesDataValue = getData(element, sizesDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"sizes\", sizesDataValue);\r\n\t\tconst srcsetDataValue = getData(element, srcsetDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"srcset\", srcsetDataValue);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (tagName === \"IFRAME\") {\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (tagName === \"VIDEO\") {\r\n\t\tsetSourcesInChildren(element, \"src\", srcDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (srcDataValue) {\r\n\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\r\n\t}\r\n}\n\nconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\nconst isBot =\r\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\r\nconst supportsClassList =\r\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst addClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.add(className);\r\n        return;\r\n    }\r\n    element.className += (element.className ? \" \" : \"\") + className;\r\n};\r\n\r\nconst removeClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.remove(className);\r\n        return;\r\n    }\r\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n};\n\n/*\r\n * Constructor\r\n */\r\n\r\nconst LazyLoad = function(instanceSettings) {\r\n\tthis._settings = Object.assign({}, getDefaultSettings(), instanceSettings);\r\n\tthis._queryOriginNode =\r\n\t\tthis._settings.container === window\r\n\t\t\t? document\r\n\t\t\t: this._settings.container;\r\n\r\n\tthis._previousLoopTime = 0;\r\n\tthis._loopTimeout = null;\r\n\tthis._boundHandleScroll = this.handleScroll.bind(this);\r\n\r\n\tthis._isFirstLoop = true;\r\n\twindow.addEventListener(\"resize\", this._boundHandleScroll);\r\n\tthis.update();\r\n};\r\n\r\nLazyLoad.prototype = {\r\n\t_reveal: function(element, force) {\r\n\t\tif (!force && getWasProcessed(element)) {\r\n\t\t\treturn; // element has already been processed and force wasn't true\r\n\t\t}\r\n\r\n\t\tconst settings = this._settings;\r\n\r\n\t\tconst errorCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_error);\r\n\t\t\tcallCallback(settings.callback_error, element);\r\n\t\t};\r\n\r\n\t\tconst loadCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_loaded);\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tcallCallback(settings.callback_load, element);\r\n\t\t};\r\n\r\n\t\tcallCallback(settings.callback_enter, element);\r\n\t\tif ([\"IMG\", \"IFRAME\", \"VIDEO\"].indexOf(element.tagName) > -1) {\r\n\t\t\telement.addEventListener(\"load\", loadCallback);\r\n\t\t\telement.addEventListener(\"error\", errorCallback);\r\n\t\t\taddClass(element, settings.class_loading);\r\n\t\t}\r\n\t\tsetSources(element, settings);\r\n\t\tcallCallback(settings.callback_set, element);\r\n\t},\r\n\r\n\t_loopThroughElements: function(forceDownload) {\r\n\t\tconst settings = this._settings,\r\n\t\t\telements = this._elements,\r\n\t\t\telementsLength = !elements ? 0 : elements.length;\r\n\t\tlet i,\r\n\t\t\tprocessedIndexes = [],\r\n\t\t\tfirstLoop = this._isFirstLoop;\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If must skip_invisible and element is invisible, skip it */\r\n\t\t\tif (settings.skip_invisible && element.offsetParent === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tisBot ||\r\n\t\t\t\tforceDownload ||\r\n\t\t\t\tisInsideViewport(\r\n\t\t\t\t\telement,\r\n\t\t\t\t\tsettings.container,\r\n\t\t\t\t\tsettings.threshold\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tif (firstLoop) {\r\n\t\t\t\t\taddClass(element, settings.class_initial);\r\n\t\t\t\t}\r\n\t\t\t\t/* Start loading the image */\r\n\t\t\t\tthis.load(element);\r\n\t\t\t\t/* Marking the element as processed. */\r\n\t\t\t\tprocessedIndexes.push(i);\r\n\t\t\t\tsetWasProcessed(element);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing processed elements from this._elements. */\r\n\t\twhile (processedIndexes.length) {\r\n\t\t\telements.splice(processedIndexes.pop(), 1);\r\n\t\t\tcallCallback(settings.callback_processed, elements.length);\r\n\t\t}\r\n\t\t/* Stop listening to scroll event when 0 elements remains */\r\n\t\tif (elementsLength === 0) {\r\n\t\t\tthis._stopScrollHandler();\r\n\t\t}\r\n\t\t/* Sets isFirstLoop to false */\r\n\t\tif (firstLoop) {\r\n\t\t\tthis._isFirstLoop = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_purgeElements: function() {\r\n\t\tconst elements = this._elements,\r\n\t\t\telementsLength = elements.length;\r\n\t\tlet i,\r\n\t\t\telementsToPurge = [];\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If the element has already been processed, skip it */\r\n\t\t\tif (getWasProcessed(element)) {\r\n\t\t\t\telementsToPurge.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing elements to purge from this._elements. */\r\n\t\twhile (elementsToPurge.length > 0) {\r\n\t\t\telements.splice(elementsToPurge.pop(), 1);\r\n\t\t}\r\n\t},\r\n\r\n\t_startScrollHandler: function() {\r\n\t\tif (!this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = true;\r\n\t\t\tthis._settings.container.addEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t_stopScrollHandler: function() {\r\n\t\tif (this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = false;\r\n\t\t\tthis._settings.container.removeEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\thandleScroll: function() {\r\n\t\tconst throttle = this._settings.throttle;\r\n\r\n\t\tif (throttle !== 0) {\r\n\t\t\tlet now = Date.now();\r\n\t\t\tlet remainingTime = throttle - (now - this._previousLoopTime);\r\n\t\t\tif (remainingTime <= 0 || remainingTime > throttle) {\r\n\t\t\t\tif (this._loopTimeout) {\r\n\t\t\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis._previousLoopTime = now;\r\n\t\t\t\tthis._loopThroughElements();\r\n\t\t\t} else if (!this._loopTimeout) {\r\n\t\t\t\tthis._loopTimeout = setTimeout(\r\n\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\tthis._previousLoopTime = Date.now();\r\n\t\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t\t\tthis._loopThroughElements();\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tremainingTime\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._loopThroughElements();\r\n\t\t}\r\n\t},\r\n\r\n\tloadAll: function() {\r\n\t\tthis._loopThroughElements(true);\r\n\t},\r\n\r\n\tupdate: function() {\r\n\t\t// Converts to array the nodeset obtained querying the DOM from _queryOriginNode with elements_selector\r\n\t\tthis._elements = Array.prototype.slice.call(\r\n\t\t\tthis._queryOriginNode.querySelectorAll(\r\n\t\t\t\tthis._settings.elements_selector\r\n\t\t\t)\r\n\t\t);\r\n\t\tthis._purgeElements();\r\n\t\tthis._loopThroughElements();\r\n\t\tthis._startScrollHandler();\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\twindow.removeEventListener(\"resize\", this._boundHandleScroll);\r\n\t\tif (this._loopTimeout) {\r\n\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\tthis._loopTimeout = null;\r\n\t\t}\r\n\t\tthis._stopScrollHandler();\r\n\t\tthis._elements = null;\r\n\t\tthis._queryOriginNode = null;\r\n\t\tthis._settings = null;\r\n\t},\r\n\r\n\tload: function(element, force) {\r\n\t\tthis._reveal(element, force);\r\n\t}\r\n};\r\n\r\n/* Automatic instances creation if required (useful for async script loading!) */\r\nlet autoInitOptions = window.lazyLoadOptions;\r\nif (runningOnBrowser && autoInitOptions) {\r\n\tautoInitialize(LazyLoad, autoInitOptions);\r\n}\n\nreturn LazyLoad;\n\n})));\n"]}