{"version":3,"sources":["lazyload.js"],"names":["LazyLoad","isInsideViewport","element","container","threshold","isBelowViewport","isAboveViewport","isAtRightOfViewport","isAtLeftOfViewport","setSources","settings","sizesDataName","data_sizes","srcsetDataName","data_srcset","srcDataName","data_src","srcDataValue","getData","tagName","parent","parentNode","setSourcesInChildren","sizesDataValue","setAttributeIfNotNullOrEmpty","srcsetDataValue","style","backgroundImage","getDefaultSettings","elements_selector","window","throttle","class_loading","class_loaded","class_error","class_initial","skip_invisible","callback_load","callback_error","callback_set","callback_processed","callback_enter","callCallback","callback","argument","getTopOffset","getBoundingClientRect","top","pageYOffset","ownerDocument","documentElement","clientTop","innerHeight","offsetHeight","getLeftOffset","left","pageXOffset","clientLeft","documentWidth","innerWidth","offsetWidth","createInstance","classObj","options","event","instance","CustomEvent","detail","err","document","createEvent","initCustomEvent","dispatchEvent","attribute","getAttribute","setData","value","setAttribute","setWasProcessed","getWasProcessed","parentTag","attrName","dataAttrName","childTag","i","children","attributeValue","runningOnBrowser","isBot","test","navigator","userAgent","supportsClassList","createElement","addClass","className","classList","add","removeClass","remove","replace","RegExp","instanceSettings","this","_settings","_extends","_queryOriginNode","_previousLoopTime","_loopTimeout","_boundHandleScroll","handleScroll","bind","_isFirstLoop","addEventListener","update","prototype","_reveal","force","errorCallback","removeEventListener","loadCallback","indexOf","_loopThroughElements","forceDownload","elements","_elements","elementsLength","length","processedIndexes","firstLoop","offsetParent","load","push","splice","pop","_stopScrollHandler","_purgeElements","elementsToPurge","_startScrollHandler","_isHandlingScroll","now","Date","remainingTime","clearTimeout","setTimeout","loadAll","Array","slice","call","querySelectorAll","destroy","autoInitOptions","lazyLoadOptions","optsLength","autoInitialize"],"mappings":"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","file":"lazyload.iife.min.js","sourcesContent":["var LazyLoad = (function () {\n'use strict';\n\nvar getDefaultSettings = () => ({\r\n\telements_selector: \"img\",\r\n\tcontainer: window,\r\n\tthreshold: 300,\r\n\tthrottle: 150,\r\n\tdata_src: \"src\",\r\n\tdata_srcset: \"srcset\",\r\n\tdata_sizes: \"sizes\",\r\n\tclass_loading: \"loading\",\r\n\tclass_loaded: \"loaded\",\r\n\tclass_error: \"error\",\r\n\tclass_initial: \"initial\",\r\n\tskip_invisible: true,\r\n\tcallback_load: null,\r\n\tcallback_error: null,\r\n\tcallback_set: null,\r\n\tcallback_processed: null,\r\n\tcallback_enter: null\r\n});\n\nconst callCallback = function(callback, argument) {\r\n\tif (callback) {\r\n\t\tcallback(argument);\r\n\t}\r\n};\n\nconst getTopOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().top +\r\n\t\twindow.pageYOffset -\r\n\t\telement.ownerDocument.documentElement.clientTop\r\n\t);\r\n};\r\n\r\nconst isBelowViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? window.innerHeight + window.pageYOffset\r\n\t\t\t: getTopOffset(container) + container.offsetHeight;\r\n\treturn fold <= getTopOffset(element) - threshold;\r\n};\r\n\r\nconst getLeftOffset = function(element) {\r\n\treturn (\r\n\t\telement.getBoundingClientRect().left +\r\n\t\twindow.pageXOffset -\r\n\t\telement.ownerDocument.documentElement.clientLeft\r\n\t);\r\n};\r\n\r\nconst isAtRightOfViewport = function(element, container, threshold) {\r\n\tconst documentWidth = window.innerWidth;\r\n\tconst fold =\r\n\t\tcontainer === window\r\n\t\t\t? documentWidth + window.pageXOffset\r\n\t\t\t: getLeftOffset(container) + documentWidth;\r\n\treturn fold <= getLeftOffset(element) - threshold;\r\n};\r\n\r\nconst isAboveViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageYOffset : getTopOffset(container);\r\n\treturn fold >= getTopOffset(element) + threshold + element.offsetHeight;\r\n};\r\n\r\nconst isAtLeftOfViewport = function(element, container, threshold) {\r\n\tconst fold =\r\n\t\tcontainer === window ? window.pageXOffset : getLeftOffset(container);\r\n\treturn fold >= getLeftOffset(element) + threshold + element.offsetWidth;\r\n};\r\n\r\nfunction isInsideViewport(element, container, threshold) {\r\n\treturn (\r\n\t\t!isBelowViewport(element, container, threshold) &&\r\n\t\t!isAboveViewport(element, container, threshold) &&\r\n\t\t!isAtRightOfViewport(element, container, threshold) &&\r\n\t\t!isAtLeftOfViewport(element, container, threshold)\r\n\t);\r\n}\n\n/* Creates instance and notifies it through the window element */\r\nconst createInstance = function (classObj, options) { \r\n    var event;\r\n    let eventString = \"LazyLoad::Initialized\";\r\n    let instance = new classObj(options);\r\n    try {\r\n        // Works in modern browsers\r\n        event = new CustomEvent(eventString, { detail: { instance } });\r\n    } \r\n    catch(err) {\r\n        // Works in Internet Explorer (all versions)\r\n        event = document.createEvent(\"CustomEvent\");\r\n        event.initCustomEvent(eventString, false, false, { instance });\r\n    }\r\n    window.dispatchEvent(event);\r\n};\r\n\r\n/* Auto initialization of one or more instances of lazyload, depending on the \r\n    options passed in (plain object or an array) */\r\nfunction autoInitialize (classObj, options) { \r\n    let optsLength = options.length;\r\n    if (!optsLength) {\r\n        // Plain object\r\n        createInstance(classObj, options);\r\n    }\r\n    else {\r\n        // Array of objects\r\n        for (let i = 0; i < optsLength; i++) {\r\n            createInstance(classObj, options[i]);\r\n        }\r\n    }\r\n}\n\nconst dataPrefix = \"data-\";\r\nconst processedDataName = \"was-processed\";\r\nconst processedDataValue = \"true\";\r\n\r\nconst getData = (element, attribute) => {\r\n\treturn element.getAttribute(dataPrefix + attribute);\r\n};\r\n\r\nconst setData = (element, attribute, value) => {\r\n\treturn element.setAttribute(dataPrefix + attribute, value);\r\n};\r\n\r\nconst setWasProcessed = element =>\r\n\tsetData(element, processedDataName, processedDataValue);\r\n\r\nconst getWasProcessed = element =>\r\n\tgetData(element, processedDataName) === processedDataValue;\n\nconst setSourcesInChildren = function(parentTag, attrName, dataAttrName) {\r\n\tfor (let i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\r\n\t\tif (childTag.tagName === \"SOURCE\") {\r\n\t\t\tlet attributeValue = getData(childTag, dataAttrName);\r\n\t\t\tif (attributeValue) {\r\n\t\t\t\tchildTag.setAttribute(attrName, attributeValue);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst setAttributeIfNotNullOrEmpty = function(element, attrName, value) {\r\n\tif (!value) {\r\n\t\treturn;\r\n\t}\r\n\telement.setAttribute(attrName, value);\r\n};\r\n\r\nfunction setSources(element, settings) {\r\n\tconst {\r\n\t\tdata_sizes: sizesDataName,\r\n\t\tdata_srcset: srcsetDataName,\r\n\t\tdata_src: srcDataName\r\n\t} = settings;\r\n\tconst srcDataValue = getData(element, srcDataName);\r\n\tconst tagName = element.tagName;\r\n\tif (tagName === \"IMG\") {\r\n\t\tconst parent = element.parentNode;\r\n\t\tif (parent && parent.tagName === \"PICTURE\") {\r\n\t\t\tsetSourcesInChildren(parent, \"srcset\", srcsetDataName);\r\n\t\t}\r\n\t\tconst sizesDataValue = getData(element, sizesDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"sizes\", sizesDataValue);\r\n\t\tconst srcsetDataValue = getData(element, srcsetDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"srcset\", srcsetDataValue);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (tagName === \"IFRAME\") {\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (tagName === \"VIDEO\") {\r\n\t\tsetSourcesInChildren(element, \"src\", srcDataName);\r\n\t\tsetAttributeIfNotNullOrEmpty(element, \"src\", srcDataValue);\r\n\t\treturn;\r\n\t}\r\n\tif (srcDataValue) {\r\n\t\telement.style.backgroundImage = `url(\"${srcDataValue}\")`;\r\n\t}\r\n}\n\nconst runningOnBrowser = typeof window !== \"undefined\";\r\n\r\nconst isBot =\r\n\t(runningOnBrowser && !(\"onscroll\" in window)) ||\r\n\t/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent);\r\nconst supportsClassList =\r\n\trunningOnBrowser && \"classList\" in document.createElement(\"p\");\n\nconst addClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.add(className);\r\n        return;\r\n    }\r\n    element.className += (element.className ? \" \" : \"\") + className;\r\n};\r\n\r\nconst removeClass = (element, className) => {\r\n    if (supportsClassList) {\r\n        element.classList.remove(className);\r\n        return;\r\n    }\r\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\r\n};\n\n/*\r\n * Constructor\r\n */\r\n\r\nconst LazyLoad = function(instanceSettings) {\r\n\tthis._settings = Object.assign({}, getDefaultSettings(), instanceSettings);\r\n\tthis._queryOriginNode =\r\n\t\tthis._settings.container === window\r\n\t\t\t? document\r\n\t\t\t: this._settings.container;\r\n\r\n\tthis._previousLoopTime = 0;\r\n\tthis._loopTimeout = null;\r\n\tthis._boundHandleScroll = this.handleScroll.bind(this);\r\n\r\n\tthis._isFirstLoop = true;\r\n\twindow.addEventListener(\"resize\", this._boundHandleScroll);\r\n\tthis.update();\r\n};\r\n\r\nLazyLoad.prototype = {\r\n\t_reveal: function(element, force) {\r\n\t\tif (!force && getWasProcessed(element)) {\r\n\t\t\treturn; // element has already been processed and force wasn't true\r\n\t\t}\r\n\r\n\t\tconst settings = this._settings;\r\n\r\n\t\tconst errorCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_error);\r\n\t\t\tcallCallback(settings.callback_error, element);\r\n\t\t};\r\n\r\n\t\tconst loadCallback = function() {\r\n\t\t\t/* As this method is asynchronous, it must be protected against external destroy() calls */\r\n\t\t\tif (!settings) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tremoveClass(element, settings.class_loading);\r\n\t\t\taddClass(element, settings.class_loaded);\r\n\t\t\telement.removeEventListener(\"load\", loadCallback);\r\n\t\t\telement.removeEventListener(\"error\", errorCallback);\r\n\t\t\tcallCallback(settings.callback_load, element);\r\n\t\t};\r\n\r\n\t\tcallCallback(settings.callback_enter, element);\r\n\t\tif ([\"IMG\", \"IFRAME\", \"VIDEO\"].indexOf(element.tagName) > -1) {\r\n\t\t\telement.addEventListener(\"load\", loadCallback);\r\n\t\t\telement.addEventListener(\"error\", errorCallback);\r\n\t\t\taddClass(element, settings.class_loading);\r\n\t\t}\r\n\t\tsetSources(element, settings);\r\n\t\tcallCallback(settings.callback_set, element);\r\n\t},\r\n\r\n\t_loopThroughElements: function(forceDownload) {\r\n\t\tconst settings = this._settings,\r\n\t\t\telements = this._elements,\r\n\t\t\telementsLength = !elements ? 0 : elements.length;\r\n\t\tlet i,\r\n\t\t\tprocessedIndexes = [],\r\n\t\t\tfirstLoop = this._isFirstLoop;\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If must skip_invisible and element is invisible, skip it */\r\n\t\t\tif (settings.skip_invisible && element.offsetParent === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tisBot ||\r\n\t\t\t\tforceDownload ||\r\n\t\t\t\tisInsideViewport(\r\n\t\t\t\t\telement,\r\n\t\t\t\t\tsettings.container,\r\n\t\t\t\t\tsettings.threshold\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tif (firstLoop) {\r\n\t\t\t\t\taddClass(element, settings.class_initial);\r\n\t\t\t\t}\r\n\t\t\t\t/* Start loading the image */\r\n\t\t\t\tthis.load(element);\r\n\t\t\t\t/* Marking the element as processed. */\r\n\t\t\t\tprocessedIndexes.push(i);\r\n\t\t\t\tsetWasProcessed(element);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing processed elements from this._elements. */\r\n\t\twhile (processedIndexes.length) {\r\n\t\t\telements.splice(processedIndexes.pop(), 1);\r\n\t\t\tcallCallback(settings.callback_processed, elements.length);\r\n\t\t}\r\n\t\t/* Stop listening to scroll event when 0 elements remains */\r\n\t\tif (elementsLength === 0) {\r\n\t\t\tthis._stopScrollHandler();\r\n\t\t}\r\n\t\t/* Sets isFirstLoop to false */\r\n\t\tif (firstLoop) {\r\n\t\t\tthis._isFirstLoop = false;\r\n\t\t}\r\n\t},\r\n\r\n\t_purgeElements: function() {\r\n\t\tconst elements = this._elements,\r\n\t\t\telementsLength = elements.length;\r\n\t\tlet i,\r\n\t\t\telementsToPurge = [];\r\n\r\n\t\tfor (i = 0; i < elementsLength; i++) {\r\n\t\t\tlet element = elements[i];\r\n\t\t\t/* If the element has already been processed, skip it */\r\n\t\t\tif (getWasProcessed(element)) {\r\n\t\t\t\telementsToPurge.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/* Removing elements to purge from this._elements. */\r\n\t\twhile (elementsToPurge.length > 0) {\r\n\t\t\telements.splice(elementsToPurge.pop(), 1);\r\n\t\t}\r\n\t},\r\n\r\n\t_startScrollHandler: function() {\r\n\t\tif (!this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = true;\r\n\t\t\tthis._settings.container.addEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\t_stopScrollHandler: function() {\r\n\t\tif (this._isHandlingScroll) {\r\n\t\t\tthis._isHandlingScroll = false;\r\n\t\t\tthis._settings.container.removeEventListener(\r\n\t\t\t\t\"scroll\",\r\n\t\t\t\tthis._boundHandleScroll\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\thandleScroll: function() {\r\n\t\tconst throttle = this._settings.throttle;\r\n\r\n\t\tif (throttle !== 0) {\r\n\t\t\tlet now = Date.now();\r\n\t\t\tlet remainingTime = throttle - (now - this._previousLoopTime);\r\n\t\t\tif (remainingTime <= 0 || remainingTime > throttle) {\r\n\t\t\t\tif (this._loopTimeout) {\r\n\t\t\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis._previousLoopTime = now;\r\n\t\t\t\tthis._loopThroughElements();\r\n\t\t\t} else if (!this._loopTimeout) {\r\n\t\t\t\tthis._loopTimeout = setTimeout(\r\n\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\tthis._previousLoopTime = Date.now();\r\n\t\t\t\t\t\tthis._loopTimeout = null;\r\n\t\t\t\t\t\tthis._loopThroughElements();\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tremainingTime\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._loopThroughElements();\r\n\t\t}\r\n\t},\r\n\r\n\tloadAll: function() {\r\n\t\tthis._loopThroughElements(true);\r\n\t},\r\n\r\n\tupdate: function() {\r\n\t\t// Converts to array the nodeset obtained querying the DOM from _queryOriginNode with elements_selector\r\n\t\tthis._elements = Array.prototype.slice.call(\r\n\t\t\tthis._queryOriginNode.querySelectorAll(\r\n\t\t\t\tthis._settings.elements_selector\r\n\t\t\t)\r\n\t\t);\r\n\t\tthis._purgeElements();\r\n\t\tthis._loopThroughElements();\r\n\t\tthis._startScrollHandler();\r\n\t},\r\n\r\n\tdestroy: function() {\r\n\t\twindow.removeEventListener(\"resize\", this._boundHandleScroll);\r\n\t\tif (this._loopTimeout) {\r\n\t\t\tclearTimeout(this._loopTimeout);\r\n\t\t\tthis._loopTimeout = null;\r\n\t\t}\r\n\t\tthis._stopScrollHandler();\r\n\t\tthis._elements = null;\r\n\t\tthis._queryOriginNode = null;\r\n\t\tthis._settings = null;\r\n\t},\r\n\r\n\tload: function(element, force) {\r\n\t\tthis._reveal(element, force);\r\n\t}\r\n};\r\n\r\n/* Automatic instances creation if required (useful for async script loading!) */\r\nlet autoInitOptions = window.lazyLoadOptions;\r\nif (runningOnBrowser && autoInitOptions) {\r\n\tautoInitialize(LazyLoad, autoInitOptions);\r\n}\n\nreturn LazyLoad;\n\n}());\n"]}