{"version":3,"sources":["webpack://pnp.sp-addinhelpers/webpack/universalModuleDefinition","webpack://pnp.sp-addinhelpers/webpack/bootstrap","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/collections.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/adalclient.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/libconfig.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/storage.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/index.js","webpack://pnp.sp-addinhelpers/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/util.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/config/splibconfig.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/utils/toabsoluteurl.js","webpack://pnp.sp-addinhelpers/./build/packages/common/es5/src/netutil.js","webpack://pnp.sp-addinhelpers/(webpack)/buildin/global.js","webpack://pnp.sp-addinhelpers/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp-addinhelpers/./build/packages/logging/es5/src/loglevel.js","webpack://pnp.sp-addinhelpers/./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js","webpack://pnp.sp-addinhelpers/./build/packages/logging/es5/src/logger.js","webpack://pnp.sp-addinhelpers/./build/packages/logging/es5/src/listeners.js","webpack://pnp.sp-addinhelpers/./build/packages/odata/es5/src/caching.js","webpack://pnp.sp-addinhelpers/./build/packages/odata/es5/src/parsers.js","webpack://pnp.sp-addinhelpers/./build/packages/odata/es5/src/pipeline.js","webpack://pnp.sp-addinhelpers/./build/packages/odata/es5/src/queryable.js","webpack://pnp.sp-addinhelpers/./build/packages/odata/es5/src/odatabatch.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/utils/extractweburl.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/odata.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/net/digestcache.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/net/sphttpclient.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/utils/metadata.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/sharepointqueryable.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/siteusers.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/sitegroups.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/types.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/roles.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/sharepointqueryablesecurable.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/files.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/sharepointqueryableshareable.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/webparts.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/folders.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/contenttypes.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/attachmentfiles.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/views.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/fields.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/forms.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/subscriptions.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/usercustomactions.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/lists.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/comments.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/items.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/appcatalog.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/clientsidepages.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/batch.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/navigation.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/regionalsettings.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/search.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/social.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/searchsuggest.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/features.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/relateditems.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/webs.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/site.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/userprofiles.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/utilities.js","webpack://pnp.sp-addinhelpers/./build/packages/sp/es5/src/rest.js","webpack://pnp.sp-addinhelpers/./build/packages/sp-addinhelpers/es5/src/sprestaddin.js","webpack://pnp.sp-addinhelpers/./build/packages/sp-addinhelpers/es5/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","objectEntries","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","toString","util","location","origin","fetch","url","options","Error","getToken","getResource","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","netutil","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","objectToMap","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","getCtxCallback","context","method","params","apply","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","Math","random","floor","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","g","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","push","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","f","screenTop","screenY","innerWidth","documentElement","clientWidth","body","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","sprequestexecutorclient_SPRequestExecutorClient","SPRequestExecutorClient","convertToResponse","spResponse","responseHeaders","statusCode","Response","status","statusText","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","next","done","requestOptions","success","response","es5","binaryStringRequestBody","executeAsync","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","cacheData","parsers_HttpRequestError","HttpRequestError","isHttpRequestError","parsers_ODataParserBase","ODataParserBase","handleError","parseImpl","has","parseFloat","text","txt","parseODataJSON","ok","clone","result","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","verb","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","queryable_ODataQueryable","ODataQueryable","_batch","inBatch","toUrl","_url","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","addBatchDependency","addDependency","hasBatch","Queryable","_query","_options","_parentUrl","_useCaching","_cachingOptions","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","labelName","select","selects","expand","expands","getParent","parentUrl","additionalPath","includeBatch","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","SiteUser","update","user","sitegroups_SiteGroups","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","App","deploy","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","getNextOrder","collection","max","regexIndexOf","regex","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","clientsidepages_ClientSidePage","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","section","clientsidepages_CanvasSection","toHtml","fromHtml","control","clientsidepages_CanvasColumn","mergeColumnToTree","clientsidepages_ClientSideWebpart","mergePartToTree","clientsidepages_ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","CanvasSection","_memId","addColumn","factor","defaultColumn","clientsidepages_CanvasControl","CanvasControl","controlType","dataVersion","getControlData","CanvasColumn","getControl","jsonData","displayMode","clientsidepages_ClientSidePart","ClientSidePart","ClientSideText","_text","startsWith","editorType","controlIndex","ClientSideWebpart","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","spODataEntity","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","Querytext","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","webs_Web","webs_WebInfos","WebInfos","Web","Web_1","fromUrl","getParentWeb","ParentWeb","site_Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","Site","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","utilities_UtilityMethod","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","rest_SPRest","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","fm","sprestaddin_SPRestAddIn","SPRestAddIn","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","sprestaddin_sp"],"mappings":"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","file":"sp-addinhelpers.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-addinhelpers\"] = factory();\n\telse\n\t\troot[\"pnp.sp-addinhelpers\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { combine, isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","import { extend } from \"@pnp/common\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(\"Error making HttpClient request in queryable: [\" + r.status + \"] \" + r.statusText, r.clone()));\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.3\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.3\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TemplateFileType, File } from \"./files\";\r\nimport { Item } from \"./items\";\r\nimport { extend, combine, getGUID, getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nexport { CanvasControl };\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nexport { CanvasColumn };\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nexport { ClientSidePart };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.3\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP } from \"@pnp/common\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { isUrlAbsolute, combine, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!isUrlAbsolute(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!isUrlAbsolute(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = combine(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map","export * from \"./src/addinhelpers\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}