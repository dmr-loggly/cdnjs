{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sp-addinhelpers.es5.umd.bundle.min.js","webpack:///webpack/bootstrap c984b9dc6cdcd457aafc","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./build/packages/sp-addinhelpers/es5/index.js","webpack:///./build/packages/sp-addinhelpers/es5/src/addinhelpers.js","webpack:///./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js","webpack:///./node_modules/adal-angular/dist/adal.min.js","webpack:///./build/packages/sp-addinhelpers/es5/src/sprestaddin.js","webpack:///./dist/packages/sp/dist/sp.es5.js","webpack:///./dist/packages/odata/dist/odata.es5.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","getCtxCallback","context","method","params","_i","arguments","length","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combine","paths","filter","path","stringIsNullOrEmpty","map","replace","join","getGUID","r","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","Array","constructor","extend","target","source","noOverwrite","check","f","v","getOwnPropertyNames","reduce","t","isUrlAbsolute","url","test","getAttrValueFromString","html","attrName","reg","RegExp","match","exec","jsS","JSON","stringify","hOP","getHashCode","hash","charCodeAt","mergeHeaders","Request","headers","forEach","value","append","mergeOptions","objectToMap","Map","objectEntries","mergeMaps","maps","k","set","RuntimeConfig","FetchClient","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__","global$1","window","fetch","options","BearerTokenFetchClient","_super","_token","_this","token","Headers","AdalClient","clientId","tenant","redirectUri","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","location","origin","Error","getToken","getResource","then","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","displayCall","_displayCallback","navigateToLoginRequestUrl","_loginPromise","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","clearInterval","document","URL","indexOf","handleWindowCallback","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","entries","keys","RuntimeConfigImpl","_v","config","key","_runtimeConfig","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","from","data","_local","_session","getStore","localStorage","sessionStorage","__extends","b","__","extendStatics","create","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","g","Function","eval","Logger","LogLevel","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","level","log","writeJSON","json","entry","err","subscribers","push","slice","subscriber","ConsoleListener","msg","format","warn","FunctionListener","__WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__","__WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__","__WEBPACK_IMPORTED_MODULE_1__sprestaddin__","SPRequestExecutorClient","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","convertToResponse","spResponse","responseHeaders","h","body","statusCode","Response","status","statusText","SP","RequestExecutor","iterator","temp","addinWebUrl","substring","executor","next","done","requestOptions","success","response","binaryStringRequestBody","executeAsync","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","j","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","SPRestAddIn","sp","__WEBPACK_IMPORTED_MODULE_1__pnp_sp__","__WEBPACK_IMPORTED_MODULE_2__pnp_common__","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","query","configure","_options","extractWebUrl","candidateUrl","substr","odataUrlFrom","candidate","parts","__metadata","uri","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","spODataEntity","SPODataEntityParserImpl","setup","toAbsoluteUrl","SPRuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","metadata","type","defaultPath","class_1","args","__WEBPACK_IMPORTED_MODULE_1_tslib__","getNextOrder","collection","max","order","regexIndexOf","regex","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","trim","reindex","columns","controls","SPRest","Site","Web","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","hydrate","SPRuntimeConfigImpl","SPODataEntityArrayParserImpl","spPart","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","Accept","Content-Type","fetchRaw","cache","credentials","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","SPHttpClient","_impl","_digestCache","opts","has","toUpperCase","digest","rawHeaders","retry","ctx","setRetry","delay","attempts","retryCount","retryContext","post","patch","SharePointQueryable","_forceCaching","lastIndexOf","_parentUrl","_url","as","toUrlAndQuery","aliasedParams","toUrl","labelName","select","selects","expand","expands","getParent","batch","parentUrl","configureFrom","inBatch","clone","additionalPath","includeBatch","hasBatch","toRequestContext","verb","pipeline","dependencyDispose","addBatchDependency","batchDependency","cachingOptions","_cachingOptions","clientFactory","isBatched","isCached","_useCaching","requestAbsoluteUrl","requestId","SharePointQueryableCollection","orderBy","ascending","skip","top","SharePointQueryableInstance","_update","mapper","props","postCore","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","SiteUsers","SiteUsers_1","getById","id","SiteUser","getByEmail","getByLoginName","loginName","su","concat","removeById","removeByLoginName","add","LoginName","update","user","SiteGroups","CurrentUser","ControlMode","SiteGroups_1","sg","SiteGroup","properties","postBody","group","Id","getByName","groupName","retGroup","RoleAssignments","RoleAssignments_1","ra","RoleAssignment","principalId","roleDefId","remove","RoleDefinitionBindings","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","basePermissions","BasePermissions","Description","Name","Order","definition","retDef","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","CheckinType","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","shareEverything","LimitedWebPartManager","WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","moveTo","zoneId","zoneIndex","Folders","Folders_1","Folder","folder","Files","recycle","listItemAllFields","Item","destUrl","_a","srcUrl","ServerRelativeUrl","client","webBaseUrl","hostUrl","methodUrl","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","ContentType","additionalSettings","assign","Group","StringValue","FieldLinks","fl","FieldLink","AttachmentFiles","AttachmentFiles_1","AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","getText","getParsed","getBlob","getBuffer","getJSON","setContent","Views","Views_1","getByTitle","title","personalView","PersonalView","Title","view","ViewFields","renderAsHtml","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields","Fields_1","Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","results","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","subscriptionId","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","result","subscription","patchCore","deleteCore","UserCustomActions","UserCustomActions_1","uca","UserCustomAction","action","Lists","Lists_1","list","List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","text","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","mode","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","Comments","Comments_1","Comment","Replies","like","unlike","Replies_1","Items_1","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","promise","item","candidatelistItemEntityTypeFullName","File","ItemVersions","ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","versionId","ItemVersion","PagedItemCollection","nextUrl","_parent","handleError","__next","parseODataJSON","odata.etag","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","moveOperations","MoveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","parseFloat","fileOffset","ContinueUpload","Versions_1","Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","TemplateFileType","PromotedState","AppCatalog","getAppById","App","filename","deploy","retract","install","uninstall","upgrade","SPBatch","ParseResponse","responses","statusRegExp","lines","line","executeImpl","batchId","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","SortDirection","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","addSection","section","CanvasSection","toHtml","fromHtml","controlType","control","CanvasColumn","mergeColumnToTree","ClientSideWebpart","mergePartToTree","ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","_memId","addColumn","factor","defaultColumn","CanvasControl","dataVersion","getControlData","getControl","jsonData","displayMode","ClientSidePart","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","Navigation","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones_1","Search","execute","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","SearchResults","prop","Querytext","toSearchQuery","rawResponse","_query","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","ReorderingRuleMatchType","QueryPropertyValueType","SocialActorType","SearchSuggest","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","Features","Features_1","force","featdefScope","featureId","feature","Feature","deactivate","DefinitionId","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","WebInfos","Web_1","fromUrl","getParentWeb","ParentWeb","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","UserProfileQuery","clientPeoplePickerQuery","ClientPeoplePickerQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","buffer","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","SocialQuery","SocialQuery_1","MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","SocialActorTypes","SocialFollowResult","SocialStatusCode","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","_baseUrl","searchSuggest","finalQuery","searchWithCaching","usingCaching","fm","returnResult","setResult","hasResult","shift","pipe","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","getDefaultPipeline","PipelineMethods","logStart","caching","send","logEnd","CachingOptions","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","ODataQueryable","ODataBatch","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","cacheData","HttpRequestError","isHttpRequestError","parseImpl","txt","ok","blob","arrayBuffer","LambdaParser","Queryable","pathPart","globalCacheDisable","getCore","putCore","_batch","addDependency","_batchId","_reqs","_deps","_rDeps","resolver","all"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,uBAAAD,IAEAD,EAAA,uBAAAC,KACC,mBAAAK,WAAAC,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAR,OAGA,IAAAC,GAAAQ,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAX,WAUA,OANAM,GAAAE,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAU,GAAA,EAGAV,EAAAD,QAvBA,GAAAS,KA4DA,OAhCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAM,GAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDpB,EAAAuB,EAAA,GAGAvB,IAAAwB,EAAA,KDgBM,SAAU9B,EAAQ+B,EAAqBzB,GAE7C,cE/EA,SAAA0B,GAwBA,QAAAC,GAAAC,EAAAC,GAEA,OADAC,MACAC,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3CD,EAAAC,EAAA,GAAAC,UAAAD,EAEA,mBACAF,EAAAK,MAAAN,EAAAE,IAYA,QAAAK,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAC,MAAAJ,EACA,QAAAC,EAAAI,eACA,WACAF,EAAAG,YAAAH,EAAAI,cAAAL,EACA,MACA,eACAC,EAAAK,SAAAL,EAAAM,WAAA,EAAAP,EACA,MACA,aACAC,EAAAK,SAAAL,EAAAM,WAAAP,EACA,MACA,YACAC,EAAAO,QAAAP,EAAAQ,UAAA,EAAAT,EACA,MACA,WACAC,EAAAO,QAAAP,EAAAQ,UAAAT,EACA,MACA,YACAC,EAAAS,QAAAT,EAAAU,UAAA,KAAAX,EACA,MACA,cACAC,EAAAS,QAAAT,EAAAU,UAAA,IAAAX,EACA,MACA,cACAC,EAAAS,QAAAT,EAAAU,UAAA,IAAAX,EACA,MACA,SACAC,MAAAW,GAGA,MAAAX,GAOA,QAAAY,KAEA,OADAC,MACArB,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3CqB,EAAArB,GAAAC,UAAAD,EAEA,OAAAqB,GACAC,OAAA,SAAAC,GAAiC,OAAAC,EAAAD,KACjCE,IAAA,SAAAF,GAA8B,MAAAA,GAAAG,QAAA,eAAAA,QAAA,iBAC9BC,KAAA,KACAD,QAAA,WAuBA,QAAAE,KACA,GAAAnD,IAAA,GAAAgC,OAAAS,SAMA,OALA,uCAAAQ,QAAA,iBAAAlD,GACA,GAAAqD,IAAApD,EAAA,GAAAqD,KAAAC,UAAA,IAEA,OADAtD,GAAAqD,KAAAE,MAAAvD,EAAA,KACA,MAAAD,EAAAqD,EAAA,EAAAA,EAAA,GAAAI,SAAA,MAUA,QAAAC,GAAAC,GACA,wBAAAA,GAMA,QAAAC,GAAAC,GACA,gBAAAA,GAAA,OAAAA,EAKA,QAAAC,GAAAC,GACA,MAAAC,OAAAF,QACAE,MAAAF,QAAAC,GAEAA,GAAA,gBAAAA,GAAArC,QAAAqC,EAAAE,cAAAD,MAWA,QAAAE,GAAAC,EAAAC,EAAAC,EAAAvB,GAGA,OAFA,KAAAuB,IAAiCA,GAAA,OACjC,KAAAvB,IAA4BA,EAAA,WAAuB,YACnDc,EAAAQ,GACA,MAAAD,EAGA,IAAAG,GAAAD,EAAA,SAAAjE,EAAAR,GAA+C,QAAAA,IAAAQ,KAAoB,WAAgB,UAEnFmE,EAAA,SAAAC,GAA0B,MAAAF,GAAAH,EAAAK,IAAA1B,EAAA0B,GAC1B,OAAAnE,QAAAoE,oBAAAL,GACAtB,OAAAyB,GACAG,OAAA,SAAAC,EAAAH,GAEA,MADAG,GAAAH,GAAAJ,EAAAI,GACAG,GACKR,GAOL,QAAAS,GAAAC,GACA,4BAAAC,KAAAD,GAOA,QAAA7B,GAAA/B,GACA,WAAA0B,KAAA1B,GAAA,OAAAA,KAAAS,OAAA,EASA,QAAAqD,GAAAC,EAAAC,GAEAD,IAAA9B,QAAA,sBAAkC,OAClC,IAAAgC,GAAA,GAAAC,QAAAF,EAAA,sCACAG,EAAAF,EAAAG,KAAAL,EACA,eAAAI,KAAA1D,OAAA,EAAA0D,EAAA,QAmBA,QAAAE,GAAAlF,GACA,MAAAmF,MAAAC,UAAApF,GAQA,QAAAqF,GAAArF,EAAAY,GACA,MAAAX,QAAAU,eAAAjB,KAAAM,EAAAY,GAQA,QAAA0E,GAAAzE,GACA,GAAA0E,GAAA,CACA,QAAA1E,EAAAS,OACA,MAAAiE,EAEA,QAAA/F,GAAA,EAAmBA,EAAAqB,EAAAS,OAAc9B,IAAA,CAEjC+F,MAAA,GAAAA,EADA1E,EAAA2E,WAAAhG,GAEA+F,GAAA,EAEA,MAAAA,GAIA,QAAAE,GAAA1B,EAAAC,GACA,OAAAzB,KAAAyB,GAAA,OAAAA,EAAA,CACA,GAAA0B,SAAA,IAAoCC,QAAA3B,IACpC2B,QAAAC,QAAA,SAAAC,EAAA/F,GACAiE,EAAA+B,OAAAhG,EAAA+F,MAIA,QAAAE,GAAAhC,EAAAC,GACA,GAAAR,EAAAQ,GAAA,CACA,GAAA2B,GAAA7B,EAAAC,EAAA4B,YAAiD3B,EAAA2B,QACjD5B,GAAAD,EAAAC,EAAAC,GACAD,EAAA4B,WAgNA,QAAAK,GAAAhG,GACA,WAAAuC,KAAAvC,GAAA,OAAAA,EACA,GAAAiG,KAAAC,EAAAlG,IAEA,GAAAiG,KAQA,QAAAE,GAAApC,GAEA,OADAqC,MACAhF,EAAA,EAAoBA,EAAAC,UAAAC,OAAuBF,IAC3CgF,EAAAhF,EAAA,GAAAC,UAAAD,EAEA,QAAA5B,GAAA,EAAmBA,EAAA4G,EAAA9E,OAAiB9B,IACpC4G,EAAA5G,GAAAoG,QAAA,SAAAxB,EAAAiC,GACAtC,EAAAuC,IAAAD,EAAAjC,IAGA,OAAAL,GA7eA1E,EAAAQ,EAAAiB,EAAA,qBAAAyF,KAAAlH,EAAAQ,EAAAiB,EAAA,qBAAA2E,KAAApG,EAAAQ,EAAAiB,EAAA,qBAAAiF,KAAA1G,EAAAQ,EAAAiB,EAAA,qBAAA0F,KAAAnH,EAAAQ,EAAAiB,EAAA,qBAAA2F,KAAApH,EAAAQ,EAAAiB,EAAA,qBAAAE,KAAA3B,EAAAQ,EAAAiB,EAAA,qBAAAU,KAAAnC,EAAAQ,EAAAiB,EAAA,qBAAA0B,KAAAnD,EAAAQ,EAAAiB,EAAA,qBAAAkC,KAAA3D,EAAAQ,EAAAiB,EAAA,qBAAAwC,KAAAjE,EAAAQ,EAAAiB,EAAA,qBAAA0C,KAAAnE,EAAAQ,EAAAiB,EAAA,qBAAA4C,KAAArE,EAAAQ,EAAAiB,EAAA,qBAAAgD,KAAAzE,EAAAQ,EAAAiB,EAAA,qBAAA0D,KAAAnF,EAAAQ,EAAAiB,EAAA,qBAAA8B,KAAAvD,EAAAQ,EAAAiB,EAAA,qBAAA6D,KAAAtF,EAAAQ,EAAAiB,EAAA,qBAAAoE,KAAA7F,EAAAQ,EAAAiB,EAAA,qBAAAuE,KAAAhG,EAAAQ,EAAAiB,EAAA,qBAAAwE,IAAA,IAAAoB,GAAArH,EAAA,GAAAsH,EAAAtH,EAAA,GAYAuH,GAZAvH,EAAAiB,EAAAqG,OAYA,KAAA5F,IACA,mBAAA7B,WACA,mBAAA2H,mBA+PAL,EAAA,WACA,QAAAA,MAKA,MAHAA,GAAA9F,UAAAoG,MAAA,SAAArC,EAAAsC,GACA,MAAAH,GAAAE,MAAArC,EAAAsC,IAEAP,KAKAQ,EAAA,SAAAC,GAEA,QAAAD,GAAAE,GACA,GAAAC,GAAAF,EAAAvH,KAAAP,WAEA,OADAgI,GAAAD,SACAC,EAoBA,MAxBIlH,QAAAyG,EAAA,GAASM,EAAAC,GAMbhH,OAAAC,eAAA8G,EAAAtG,UAAA,SACAL,IAAA,WACA,MAAAlB,MAAA+H,QAEAZ,IAAA,SAAAc,GACAjI,KAAA+H,OAAAE,GAEAhH,YAAA,EACAD,cAAA,IAEA6G,EAAAtG,UAAAoG,MAAA,SAAArC,EAAAsC,OACA,KAAAA,IAAiCA,KACjC,IAAApB,GAAA,GAAA0B,QAIA,OAHA5B,GAAAE,EAAAoB,EAAApB,SACAA,EAAAW,IAAA,0BAAAnH,KAAA+H,QACAH,EAAApB,UACAsB,EAAAvG,UAAAoG,MAAApH,KAAAP,KAAAsF,EAAAsC,IAEAC,GACCR,GA+JDN,GA1JA,SAAAe,GAQA,QAAAK,GAAAC,EAAAC,EAAAC,GACA,GAAAN,GAAAF,EAAAvH,KAAAP,KAAA,OAAAA,IAIA,OAHAgI,GAAAI,WACAJ,EAAAK,SACAL,EAAAM,cACAN,EAZIlH,OAAAyG,EAAA,GAASY,EAAAL,GAuBbK,EAAAI,gBAAA,SAAAC,EAAAC,GAIA,WAHA,KAAAA,IAAkCA,EAAA,wCAGlC,GAAAN,GAAAM,EAAAD,EAAAE,YAAAC,QAAAC,SAAA1E,WAAAb,EAAAqE,OAAAmB,SAAAC,OAAA,mCAQAX,EAAA5G,UAAAoG,MAAA,SAAArC,EAAAsC,GACA,GAAAI,GAAAhI,IACA,KAAAqF,EAAAC,GACA,KAAAyD,OAAA,qDAGA,OAAA/I,MAAAgJ,SAAAhJ,KAAAiJ,YAAA3D,IAAA4D,KAAA,SAAAjB,GAEA,MADAD,GAAAC,QACAH,EAAAvG,UAAAoG,MAAApH,KAAAyH,EAAA1C,EAAAsC,MAQAO,EAAA5G,UAAAyH,SAAA,SAAAG,GACA,GAAAnB,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACAtB,EAAAuB,oBAAAL,KAAA,SAAAM,GAAyD,MAAAxB,GAAAyB,UAAwBP,KAAA,SAAAM,GACjFrB,EAAAuB,aAAAC,aAAAR,EAAA,SAAAS,EAAA3B,GACA,GAAA2B,EACA,MAAAN,GAAAP,MAAAa,GAEAP,GAAApB,OAEa4B,MAAAP,MAMbnB,EAAA5G,UAAAgI,kBAAA,WACA,GAAAvB,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,GACA,OAAAlB,EAAAuB,eACAvB,EAAAuB,aAA0C5I,OAAA0G,EAAA,SAC1CY,SAAAJ,EAAAI,SACA0B,YAAA,SAAAxE,GACA0C,EAAA+B,kBACA/B,EAAA+B,iBAAAzE,IAGA0E,2BAAA,EACA1B,YAAAN,EAAAM,YACAD,OAAAL,EAAAK,UAGAgB,OAMAlB,EAAA5G,UAAAkI,MAAA,WACA,GAAAzB,GAAAhI,IACA,OAAAA,MAAAiK,cACAjK,KAAAiK,eAEAjK,KAAAiK,cAAA,GAAAb,SAAA,SAAAC,EAAAC,GACA,GAAAnB,EAAAuB,aAAAQ,gBACA,MAAAb,IAEArB,GAAA+B,iBAAA,SAAAzE,GACA,GAAA6E,GAAAzC,OAAA0C,KAAA9E,EAAA,gCACA,KAAA6E,EACA,MAAAb,GAAAP,MAAA,qFAEAoB,MAAAE,OACAF,EAAAE,OAEA,IAAAC,GAAA5C,OAAA6C,YAAA,WACAJ,MAAAK,YAAApH,KAAA+G,EAAAK,QACA9C,OAAA+C,cAAAH,EAEA,MACA,IAAAH,EAAAO,SAAAC,IAAAC,QAAA5C,EAAAM,eACAZ,OAAA+C,cAAAH,GACAnC,EAAAuB,aAAAmB,qBAAAV,EAAAtB,SAAAzC,MACA+D,EAAAW,QACAzB,KAGA,MAAA0B,GACAzB,EAAAyB,KAEiB,KAGjB/C,EAAAuB,oBAAAL,KAAA,SAAAM,GACArB,EAAAuB,aAAAsB,kBAAA,EACA7C,EAAAuB,aAAAD,QACAzB,EAAA+B,iBAAA,SAGA/J,KAAAiK,gBAQA9B,EAAA5G,UAAA0H,YAAA,SAAA3D,GACA,GAAA2F,GAAAP,SAAAQ,cAAA,IAEA,OADAD,GAAAE,KAAA7F,EACA2F,EAAAG,SAAA,KAAAH,EAAAI,UAKAlD,EAAAuB,aAAA,MAEC7B,GAKD1D,EAAArD,OAAAwK,SAAAxK,OAAAwK,QAAA,SAAAzK,GAA4E,MAAAC,QAAAyK,KAAA1K,GAAA6C,IAAA,SAAAwD,GAAyC,OAAAA,EAAArG,EAAAqG,QAmCrHxF,GACA,sBACA,+BACA,qBACA,wBACA,sCACA,eAEA8J,EAAA,WACA,QAAAA,GAAAC,OACA,KAAAA,IAA4BA,EAAA,GAAA3E,MAC5B9G,KAAAyL,KAEAzL,KAAAyL,GAAAtE,IAAAzF,EAAA,cACA1B,KAAAyL,GAAAtE,IAAAzF,EAAA,OACA1B,KAAAyL,GAAAtE,IAAAzF,EAAA,OACA1B,KAAAyL,GAAAtE,IAAAzF,EAAA,OACA1B,KAAAyL,GAAAtE,IAAAzF,EAAA,QACA1B,KAAAyL,GAAAtE,IAAAzF,EAAA,SAsDA,MAhDA8J,GAAAjK,UAAAoD,OAAA,SAAA+G,GACA1L,KAAAyL,GAAAzE,EAAAhH,KAAAyL,GAAA5E,EAAA6E,KAEAF,EAAAjK,UAAAL,IAAA,SAAAyK,GACA,MAAA3L,MAAAyL,GAAAvK,IAAAyK,IAEA7K,OAAAC,eAAAyK,EAAAjK,UAAA,uBACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyK,EAAAjK,UAAA,gCACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyK,EAAAjK,UAAA,sBACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyK,EAAAjK,UAAA,yBACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyK,EAAAjK,UAAA,uCACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyK,EAAAjK,UAAA,eACAL,IAAA,WACA,MAAAlB,MAAAkB,IAAAQ,EAAA,KAEAT,YAAA,EACAD,cAAA,IAEAwK,KAEAI,EAAA,GAAAJ,GACApE,EAAAwE,EAMAC,EAAA,WAMA,QAAAA,GAAAC,EAAAC,OACA,KAAAA,IAA+CA,GAAA,GAC/C/L,KAAA8L,QACA9L,KAAA+L,wBACA/L,KAAAgM,QAAAhM,KAAAuF,OAGA6B,EAAA6E,uBACAjM,KAAAkM,yBA2IA,MAnIAL,GAAAtK,UAAAL,IAAA,SAAAyK,GACA,IAAA3L,KAAAgM,QACA,WAEA,IAAAnL,GAAAb,KAAA8L,MAAAK,QAAAR,EACA,KAAAtH,EAAAxD,GACA,WAEA,IAAAuL,GAAApG,KAAAqG,MAAAxL,EACA,WAAA6B,MAAA0J,EAAAE,aAAA,GAAA5J,OACA1C,KAAAuM,OAAAZ,GACA,MAGAS,EAAA1F,OAUAmF,EAAAtK,UAAAiL,IAAA,SAAAb,EAAA9K,EAAA4L,GACAzM,KAAAgM,SACAhM,KAAA8L,MAAAY,QAAAf,EAAA3L,KAAA2M,kBAAA9L,EAAA4L,KAQAZ,EAAAtK,UAAAgL,OAAA,SAAAZ,GACA3L,KAAAgM,SACAhM,KAAA8L,MAAAc,WAAAjB,IAUAE,EAAAtK,UAAAsL,SAAA,SAAAlB,EAAA/K,EAAA6L,GACA,GAAAzE,GAAAhI,IACA,OAAAA,MAAAgM,QAGA,GAAA5C,SAAA,SAAAC,GACA,GAAAxI,GAAAmH,EAAA9G,IAAAyK,EACA,OAAA9K,EACAD,IAAAsI,KAAA,SAAAxI,GACAsH,EAAAwE,IAAAb,EAAAjL,EAAA+L,GACApD,EAAA3I,KAIA2I,EAAAxI,KAXAD,KAkBAiL,EAAAtK,UAAAuL,cAAA,WACA,GAAA9E,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACAtB,EAAAgE,SACA3C,GAEA,KACA,OAAAhJ,GAAA,EAA+BA,EAAA2H,EAAA8D,MAAA3J,OAAwB9B,IAAA,CACvD,GAAAsL,GAAA3D,EAAA8D,MAAAH,IAAAtL,EACA,QAAAsL,GAEA,yBAAApG,KAAAyC,EAAA8D,MAAAK,QAAAR,KAEA3D,EAAA9G,IAAAyK,GAIAtC,IAEA,MAAA0B,GACAzB,EAAAyB,OAOAc,EAAAtK,UAAAgE,KAAA,WAEA,IAGA,MAFAvF,MAAA8L,MAAAY,QAFA,SAGA1M,KAAA8L,MAAAc,WAHA,MAIA,EAEA,MAAA7B,GACA,WAMAc,EAAAtK,UAAAoL,kBAAA,SAAA9L,EAAA4L,GACA,OAAArJ,KAAAqJ,EAAA,CAEA,GAAAM,GAAA3F,EAAA4F,4BACAhN,MAAA+L,sBAAA,IACAgB,EAAA,GAAA/M,KAAA+L,uBAEAU,EAAApK,EAAA,GAAAK,MAAA,SAAAqK,GAEA,MAAAhH,IAAoBkH,IAAA,EAAAX,WAAAG,EAAA/F,MAAA7F,KAKpBgL,EAAAtK,UAAA2K,uBAAA,WACA,GAAAlE,GAAAhI,IACAA,MAAA8M,gBAAA5D,KAAA,SAAAM,GAEA0D,WAAArL,EAAAmG,IAAAkE,wBAAA9E,EAAA+F,uCACStD,MAAA,SAAAkB,GACTqC,QAAAC,MAAAtC,MAGAc,KAKAyB,EAAA,WACA,QAAAA,GAAAC,OACA,KAAAA,IAAgCA,EAAA,GAAAzG,MAChC9G,KAAAuN,SAwBA,MAtBAzM,QAAAC,eAAAuM,EAAA/L,UAAA,UACAL,IAAA,WACA,MAAAlB,MAAAuN,OAAAC,MAEAvM,YAAA,EACAD,cAAA,IAEAsM,EAAA/L,UAAAkM,MAAA,WACAzN,KAAAuN,OAAAE,SAEAH,EAAA/L,UAAA4K,QAAA,SAAAR,GACA,MAAA3L,MAAAuN,OAAArM,IAAAyK,IAEA2B,EAAA/L,UAAAoK,IAAA,SAAA+B,GACA,MAAAjJ,OAAAkJ,KAAA3N,KAAAuN,QAAAG,GAAA,IAEAJ,EAAA/L,UAAAqL,WAAA,SAAAjB,GACA3L,KAAAuN,OAAAhB,OAAAZ,IAEA2B,EAAA/L,UAAAmL,QAAA,SAAAf,EAAAiC,GACA5N,KAAAuN,OAAApG,IAAAwE,EAAAiC,IAEAN,KAKAhG,EAAA,WAMA,QAAAA,GAAAuG,EAAAC,OACA,KAAAD,IAAgCA,EAAA,UAChC,KAAAC,IAAkCA,EAAA,MAClC9N,KAAA6N,SACA7N,KAAA8N,WAkCA,MAhCAhN,QAAAC,eAAAuG,EAAA/F,UAAA,SAIAL,IAAA,WAIA,MAHA,QAAAlB,KAAA6N,SACA7N,KAAA6N,OAAA7N,KAAA+N,SAAA,UAEA/N,KAAA6N,QAEA5M,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAuG,EAAA/F,UAAA,WAIAL,IAAA,WAIA,MAHA,QAAAlB,KAAA8N,WACA9N,KAAA8N,SAAA9N,KAAA+N,SAAA,YAEA/N,KAAA8N,UAEA7M,YAAA,EACAD,cAAA,IAEAsG,EAAA/F,UAAAwM,SAAA,SAAApN,GACA,MACA,IAAAkL,GADA,UAAAlL,EACA,oCAAA2M,GAAAU,aAEA,sCAAAV,GAAAW,iBAEA3G,OFqH6B/G,KAAKoB,EAAqBzB,EAAoB,KAIrE,SAAUN,EAAQ+B,EAAqBzB,GAE7C,YGn5BO,SAAAgO,GAAAxN,EAAAyN,GAEP,QAAAC,KAAmBpO,KAAA0E,YAAAhE,EADnB2N,EAAA3N,EAAAyN,GAEAzN,EAAAa,UAAA,OAAA4M,EAAArN,OAAAwN,OAAAH,IAAAC,EAAA7M,UAAA4M,EAAA5M,UAAA,GAAA6M,IAwBO,QAAAG,GAAAC,EAAA5J,EAAA+G,EAAA8C,GACP,GAAA/N,GAAAD,EAAAyB,UAAAC,OAAA2B,EAAArD,EAAA,EAAAmE,EAAA,OAAA6J,IAAA3N,OAAA4N,yBAAA9J,EAAA+G,GAAA8C,CACA,oBAAAE,UAAA,kBAAAA,SAAAC,SAAA9K,EAAA6K,QAAAC,SAAAJ,EAAA5J,EAAA+G,EAAA8C,OACA,QAAApO,GAAAmO,EAAArM,OAAA,EAA4C9B,GAAA,EAAQA,KAAAK,EAAA8N,EAAAnO,MAAAyD,GAAArD,EAAA,EAAAC,EAAAoD,GAAArD,EAAA,EAAAC,EAAAkE,EAAA+G,EAAA7H,GAAApD,EAAAkE,EAAA+G,KAAA7H,EACpD,OAAArD,GAAA,GAAAqD,GAAAhD,OAAAC,eAAA6D,EAAA+G,EAAA7H,KAtDAnC,EAAA,EAAAuM,EAAAvM,EAAA,EAAA4M;;;;;;;;;;;;;;AAgBA,GAAAF,GAAA,SAAA3N,EAAAyN,GAIA,OAHAE,EAAAvN,OAAA+N,iBACUC,uBAAgBrK,QAAA,SAAA/D,EAAAyN,GAAsCzN,EAAAoO,UAAAX,IAChE,SAAAzN,EAAAyN,GAAyB,OAAA1M,KAAA0M,KAAA3M,eAAAC,KAAAf,EAAAe,GAAA0M,EAAA1M,MACzBf,EAAAyN,KHwmCM,SAAUvO,EAAQD,GI5nCxB,GAAAoP,EAGAA,GAAA,WACA,MAAA/O,QAGA,KAEA+O,KAAAC,SAAA,qBAAAC,MAAA,QACC,MAAAlE,GAED,gBAAArD,UACAqH,EAAArH,QAOA9H,EAAAD,QAAAoP,GJmoCM,SAAUnP,EAAQ+B,EAAqBzB,GAE7C,YKzpCAA,GAAAQ,EAAAiB,EAAA,qBAAAuN;;;;;;;;;AAaA,GAiIAC,GAjIAD,EAAA,WACA,QAAAA,MAyFA,MAvFApO,QAAAC,eAAAmO,EAAA,kBAIAhO,IAAA,WACA,MAAAgO,GAAAE,SAAAC,gBAEAlI,IAAA,SAAAT,GACAwI,EAAAE,SAAAC,eAAA3I,GAEAzF,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAmO,EAAA,YACAhO,IAAA,WAIA,WAHAkC,KAAA8L,EAAAI,WAAA,OAAAJ,EAAAI,YACAJ,EAAAI,UAAA,GAAAC,IAEAL,EAAAI,WAEArO,YAAA,EACAD,cAAA,IAOAkO,EAAAM,UAAA,WAEA,OADAC,MACAxN,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/CwN,EAAAxN,GAAAC,UAAAD,EAEAwN,GAAA/L,IAAA,SAAAgM,GAA2C,MAAAR,GAAAE,SAAAI,UAAAE,MAK3CR,EAAAS,iBAAA,WACA,MAAAT,GAAAE,SAAAO,oBAEA7O,OAAAC,eAAAmO,EAAA,SAIAhO,IAAA,WACA,MAAAgO,GAAAE,SAAAQ,OAEA3O,YAAA,EACAD,cAAA,IAQAkO,EAAAW,MAAA,SAAAjG,EAAAkG,OACA,KAAAA,IAA+BA,EAAA,GAC/BZ,EAAAE,SAAAW,KAA6BD,QAAAlG,aAQ7BsF,EAAAc,UAAA,SAAAC,EAAAH,OACA,KAAAA,IAA+BA,EAAA,GAC/B9P,KAAA6P,MAAA7J,KAAAC,UAAAgK,GAAAH,IAOAZ,EAAAa,IAAA,SAAAG,GACAhB,EAAAE,SAAAW,IAAAG,IAOAhB,EAAA7B,MAAA,SAAA8C,GACAjB,EAAAE,SAAAW,KAA6BnC,KAAAuC,EAAAL,MAAA,EAAAlG,QAAAuG,EAAAvG,WAE7BsF,KAEAK,EAAA,WACA,QAAAA,GAAAF,EAAAe,OACA,KAAAf,IAAwCA,EAAA,OACxC,KAAAe,IAAqCA,MACrCpQ,KAAAqP,iBACArP,KAAAoQ,cA0BA,MAxBAb,GAAAhO,UAAAiO,UAAA,SAAAE,GACA1P,KAAAoQ,YAAAC,KAAAX,IAEAH,EAAAhO,UAAAoO,iBAAA,WACA,GAAAjO,GAAA1B,KAAAoQ,YAAAE,MAAA,EAEA,OADAtQ,MAAAoQ,YAAAjO,OAAA,EACAT,GAEAZ,OAAAC,eAAAwO,EAAAhO,UAAA,SACAL,IAAA,WACA,MAAAlB,MAAAoQ,YAAAjO,QAEAlB,YAAA,EACAD,cAAA,IAEAuO,EAAAhO,UAAAsO,MAAA,SAAAjG,EAAAkG,OACA,KAAAA,IAA+BA,EAAA,GAC/B9P,KAAA+P,KAAkBD,QAAAlG,aAElB2F,EAAAhO,UAAAwO,IAAA,SAAAG,OACA9M,KAAA8M,GAAAlQ,KAAAqP,gBAAAa,EAAAJ,OACA9P,KAAAoQ,YAAA1M,IAAA,SAAA6M,GAAwD,MAAAA,GAAAR,IAAAG,MAGxDX,MAOA,SAAAJ,GACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,qBACAA,IAAA,iBACAA,IAAA,eACCA,YAMD,WACA,QAAAqB,MAOAA,EAAAjP,UAAAwO,IAAA,SAAAG,GACA,GAAAO,GAAAzQ,KAAA0Q,OAAAR,EACA,QAAAA,EAAAJ,OACA,OACA,OACA1C,QAAA2C,IAAAU,EACA,MACA,QACArD,QAAAuD,KAAAF,EACA,MACA,QACArD,QAAAC,MAAAoD,KASAD,EAAAjP,UAAAmP,OAAA,SAAAR,GACA,GAAAO,KAKA,OAJAA,GAAAJ,KAAA,YAAAH,EAAAtG,aACAxG,KAAA8M,EAAAtC,MACA6C,EAAAJ,KAAA,UAAArK,KAAAC,UAAAiK,EAAAtC,OAEA6C,EAAA7M,KAAA,SAQA,WAOA,QAAAgN,GAAA7O,GACA/B,KAAA+B,SAOA6O,EAAArP,UAAAwO,IAAA,SAAAG,GACAlQ,KAAA+B,OAAAmO,QLyqCM,SAAUtQ,EAAQ+B,EAAqBzB,GAE7C,YMh4CAY,QAAAC,eAAAY,EAAA,cAAA+E,OAAA,OAAAmK,GAAA3Q,EAAA,EAAAA,GAAAQ,EAAAiB,EAAA,2CAAAkP,GAAA,IAAA3Q,EAAAQ,EAAAiB,EAAA,+BAAAkP,GAAA,IAAA3Q,EAAAQ,EAAAiB,EAAA,sBAAAkP,GAAA,KN24CM,SAAUjR,EAAQ+B,EAAqBzB,GAE7C,YO74CA,IAAA4Q,GAAA5Q,EAAA,EAAAA,GAAAQ,EAAAiB,EAAA,qBAAAmP,GAAA,OAAAC,GAAA7Q,EAAA,EAAAA,GAAAQ,EAAAiB,EAAA,qBAAAoP,GAAA,IAAA7Q,EAAAQ,EAAAiB,EAAA,qBAAAoP,GAAA,KPy5CM,SAAUnR,EAAQ+B,EAAqBzB,GAE7C,YQ35CAA,GAAAQ,EAAAiB,EAAA,qBAAAqP,IAAA,IAAAC,GAAA/Q,EAAA,GAIA8Q,EAAA,WACA,QAAAA,KAIAhR,KAAAkR,kBAAA,SAAAC,GACA,GAAAC,GAAA,GAAAlJ,QACA,QAAA9E,KAAA+N,EAAA3K,QACA,OAAA6K,KAAAF,GAAA3K,QACA2K,EAAA3K,QAAA6K,IACAD,EAAAzK,OAAA0K,EAAAF,EAAA3K,QAAA6K,GAKA,IAAAC,GAAA,MAAAH,EAAAI,WAAA,KAAAJ,EAAAG,IACA,WAAAE,UAAAF,GACA9K,QAAA4K,EACAK,OAAAN,EAAAI,WACAG,WAAAP,EAAAO,cA8CA,MAvCAV,GAAAzP,UAAAoG,MAAA,SAAArC,EAAAsC,GACA,GAAAI,GAAAhI,IACA,QAAAoD,KAAAuO,QAAAvO,KAAAuO,GAAAC,gBACA,KAAA7I,OAAA,uJAEA,IACwB8I,GAAAC,EADxBC,EAAAzM,EAAA0M,UAAA,EAAA1M,EAAAsF,QAAA,UAAAqH,EAAA,GAAAN,IAAAC,gBAAAG,GACAvL,IACA,IAAAoB,EAAApB,SAAAoB,EAAApB,kBAAA0B,SAGA,IAFA2J,EAAAjK,EAAApB,QAAA8E,UACAwG,EAAAD,EAAAK,QACAJ,EAAAK,MACA3L,EAAAsL,EAAApL,MAAA,IAAAoL,EAAApL,MAAA,GACAoL,EAAAD,EAAAK,WAIA1L,GAAAoB,EAAApB,OAEA,WAAA4C,SAAA,SAAAC,EAAAC,GACA,GAAA8I,IACA/E,MAAA,SAAAA,GACA/D,EAAAtB,EAAAkJ,kBAAA7D,KAEA7G,UACAzE,OAAA6F,EAAA7F,OACAsQ,QAAA,SAAAC,GACAjJ,EAAArB,EAAAkJ,kBAAAoB,KAEAhN,MAGA8M,GADAxK,EAAA0J,KACiCxQ,OAAAmQ,EAAA,GAAMmB,GAAkBd,KAAA1J,EAAA0J,OAGxBxQ,OAAAmQ,EAAA,GAAMmB,GAAkBG,yBAAA,IAEzDN,EAAAO,aAAAJ,MAGApB,MRq6CM,SAAUpR,EAAQD;ASz+CxB,GAAA8S,GAAA,WAAqC,YAAa,OAAAA,GAAA,SAAAC,GAAyC,GAAA1S,KAAA2S,cAAsBC,MAAA,QAAAC,YAAA,cAAAC,QAAA,WAA0D9S,KAAA+S,eAAqBC,eAAA,iBAAAC,MAAA,SAA8CjT,KAAAkT,WAAiBC,aAAA,eAAAC,WAAA,aAAAC,SAAA,WAAAC,kBAAA,oBAAAC,cAAA,gBAAAC,MAAA,QAAAC,SAAmKC,WAAA,kBAAAC,iBAAA,wBAAAC,eAAA,sBAAAC,YAAA,mBAAAC,YAAA,mBAAAC,cAAA,qBAAAR,cAAA,qBAAAS,SAAA,gBAAAC,QAAA,eAAAT,MAAA,aAAAF,kBAAA,yBAAAY,cAAA,qBAAAC,YAAA,mBAAAC,aAAA,0BAAAC,sBAAA,8BAAyfC,mBAAA,IAAAC,gBAAA,KAAAC,kBAAA,IAAAC,4BAAA,WAAAC,6BAAA,YAAAC,+BAAA,cAAAC,eAA+MpB,MAAA,EAAAqB,KAAA,EAAAC,KAAA,EAAAC,QAAA,GAAgCC,kBAAmBC,EAAA,SAAAC,EAAA,WAAAC,EAAA,QAAAC,EAAA,YAA+CC,YAAA,IAAAC,aAAA,KAAkC7C,EAAAlR,UAAAgU,mBAAA,MAAA9C,GAAAlR,UAAAgU,kBAA8G,IAAA9C,EAAAlR,UAAAgU,mBAAAvV,UAAAoP,SAAA,qCAAApP,KAAA0L,UAA4H1L,KAAAwV,SAAA,KAAAxV,KAAAyV,OAAA,EAAAzV,KAAA0V,WAAA,EAAA1V,KAAA2V,MAAA,KAAA3V,KAAA4V,mBAA2F5V,KAAAgL,kBAAA,EAAAhL,KAAA6V,yBAAA,EAAA7V,KAAA8V,gBAAA9V,KAAA+V,gCAAmH/V,KAAAgW,iCAAsChW,KAAAiW,kBAAAjW,KAAAkW,aAAAlW,KAAA2S,aAAAC,MAAAlL,OAAAyO,cAAAnW,KAAA0S,EAAA5I,aAAA,kBAAA4I,GAAA5I,YAAA,SAAAf,OAAA,gCAA6L,KAAA2J,EAAAtK,SAAA,SAAAW,OAAA,uBAAuD/I,MAAA0L,OAAA1L,KAAAoW,aAAA1D,OAAA,KAAA1S,KAAA0L,OAAA1B,4BAAAhK,KAAA0L,OAAA1B,2BAAA,GAAAhK,KAAA0L,OAAA+J,QAAAzV,KAAAyV,OAAA,GAAAzV,KAAA0L,OAAA8J,UAAA,kBAAAxV,MAAA0L,OAAA8J,WAAAxV,KAAAwV,SAAAxV,KAAA0L,OAAA8J,UAAAxV,KAAA0L,OAAA0D,WAAApP,KAAAoP,SAAApP,KAAA0L,OAAA0D,UAAApP,KAAA0L,OAAA2K,gBAAArW,KAAA0L,OAAA2K,cAAArW,KAAA0L,OAAAtD,UAAApI,KAAA0L,OAAApD,cAAAtI,KAAA0L,OAAApD,YAAAZ,OAAAmB,SAAAsC,KAAAmL,MAAA,QAAAA,MAAA,SAAAtW,KAAA0L,OAAA6K,wBAAAvW,KAAA0L,OAAA6K,sBAAA7O,OAAAmB,SAAAsC,KAAAmL,MAAA,QAAAA,MAAA,SAAAtW,KAAA0L,OAAA8K,qBAAAxW,KAAA0L,OAAA8K,uBAAAxW,KAAA0L,OAAAgK,YAAA1V,KAAA0V,UAAA1V,KAAA0L,OAAAgK,WAAA1V,KAAA0L,OAAA+K,mBAAAzW,KAAAkT,UAAAsB,kBAAAxU,KAAA0L,OAAA+K,mBAAs0B,mBAAA/O,iBAAAgP,SAA8CC,mBAAA,EAAA7G,MAAA,EAAAC,IAAA,SAAA2C,OAA+CD,EAAAlR,UAAAkI,MAAA,WAAmD,GAAAzJ,KAAAgL,iBAAA,WAAAhL,MAAA4W,KAAA,oBAAoE5W,MAAAgL,kBAAA,CAAyB,IAAA0H,GAAA1S,KAAA6W,OAAmB7W,MAAA0L,OAAAoL,MAAApE,EAAA1S,KAAA+W,cAAA/W,KAAA6W,OAAoD,IAAA1I,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAY,sBAAkElG,IAAA,KAAAA,EAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAY,sBAAA,IAAAlG,EAAAzG,OAAAmB,SAAAsC,KAAAnL,KAAAkX,QAAA,mBAAAxE,EAAA,cAAAvE,GAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAS,cAAA/F,GAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAA,IAAAnU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAI,YAAAnB,GAAA,GAAA1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAM,cAAA/T,KAAA+W,eAAA,GAAA/W,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,IAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,GAAgf,IAAA7S,GAAAT,KAAAmX,gBAAA,2BAAAC,mBAAApX,KAAA+W,cAA6F/W,MAAA0L,OAAA5B,YAAA9J,KAAA0L,OAAA5B,YAAArJ,GAAAT,KAAAyV,OAAAzV,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAI,YAAA,IAAA7T,KAAA8V,aAAAzF,KAAAqC,GAAA1S,KAAAqX,iBAAA3E,EAAA1S,KAAA0L,OAAAtD,SAAApI,KAAAwV,UAAAxV,KAAAsX,YAAA7W,IAAAT,KAAAuX,WAAA9W,IAAmPgS,EAAAlR,UAAAiW,WAAA,SAAA9E,EAAAvE,EAAA1N,EAAAC,GAA8D,IAAI,GAAAqK,GAAArD,OAAA+P,WAAA/P,OAAA+P,WAAA/P,OAAAgQ,QAAA1S,EAAA0C,OAAAiQ,UAAAjQ,OAAAiQ,UAAAjQ,OAAAkQ,QAAA7I,EAAArH,OAAAmQ,YAAAnN,SAAAoN,gBAAAC,aAAArN,SAAA4G,KAAAyG,YAAA1G,EAAA3J,OAAAsQ,aAAAtN,SAAAoN,gBAAAG,cAAAvN,SAAA4G,KAAA2G,aAAA5X,EAAA0O,EAAA,EAAAtO,EAAA,EAAAsK,EAAAmN,EAAA7G,EAAA,EAAA3Q,EAAA,EAAAsE,EAAAkC,EAAAQ,OAAA0C,KAAAsI,EAAAvE,EAAA,SAAA1N,EAAA,YAAAC,EAAA,SAAAwX,EAAA,UAAA7X,EAAoX,OAAA6G,GAAAmD,OAAAnD,EAAAmD,QAAAnD,EAA4B,MAAAwL,GAAS,MAAA1S,MAAA2Q,KAAA,wBAAA+B,EAAA9I,SAAA5J,KAAAgL,kBAAA,EAAAhL,KAAA6V,yBAAA,SAAmHpD,EAAAlR,UAAA4W,kBAAA,SAAAzF,EAAAvE,EAAA1N,EAAAC,EAAAqK,GAAuE/K,KAAA2Q,KAAAjQ,GAAAV,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA/S,GAAAT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA5S,GAAAV,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAApJ,GAAAoD,GAAAnO,KAAA4V,gBAAAzH,KAAAnO,KAAA4V,gBAAAzH,GAAA,MAAAnO,KAAAgL,kBAAA,EAAAhL,KAAA6V,yBAAA,EAAAnD,KAAAhS,EAAA,KAAAD,IAA+SgS,EAAAlR,UAAA+V,YAAA,SAAA5E,EAAAvE,EAAA1N,GAA6D,GAAAC,GAAAV,KAAAwX,WAAA9E,EAAA,QAAA1S,KAAAkT,UAAAmC,YAAArV,KAAAkT,UAAAoC,cAAAvK,EAAAtK,GAAAT,KAAAwV,QAA2G,UAAA9U,EAAA,CAAY,GAAAsE,GAAA,2DAAkE,YAAAhF,MAAAmY,kBAAApN,EAAAoD,EAAA,sBAAAnJ,KAAkE,GAAAhF,KAAAiW,eAAA5F,KAAA3P,IAAA,GAAAV,KAAA0L,OAAApD,YAAAsC,QAAA,QAAAmE,GAAA/O,KAAA0L,OAAApD,YAAAgO,MAAA,YAAoH,IAAAvH,GAAA/O,KAAA0L,OAAApD,WAAmC,IAAA+I,GAAArR,KAAAK,EAAAqH,OAAA6C,YAAA,WAA2C,IAAA7J,KAAA8J,YAAA,KAAA9J,EAAA8J,OAAA,CAAoC,GAAAkI,GAAA,sBAAAjS,EAAA,yGAAwI,OAAA4Q,GAAAqE,WAAArE,EAAA+G,WAAA,mBAAA3X,EAAA4Q,EAAA6B,UAAAoB,mBAAA5B,GAAArB,EAAA8G,kBAAApN,EAAAoD,EAAAuE,EAAAjS,SAAAiH,QAAA+C,cAAApK,GAAoJ,IAAI,GAAA2E,GAAAtE,EAAAmI,QAAiB,QAAAwP,UAAArT,EAAAmG,MAAAP,QAAAyN,UAAAtJ,IAAA,MAAAsC,GAAAqE,UAAArE,EAAA+G,WAAA,wBAAApT,EAAAoB,MAAAiL,EAAAxG,qBAAA7F,EAAAoB,MAAAsB,OAAA+C,cAAApK,GAAAgR,EAAArG,kBAAA,EAAAqG,EAAAwE,yBAAA,EAAAxE,EAAAuF,KAAA,wBAAAvF,EAAA4E,sBAAAvV,GAAAoK,QAA2R,MAAA4H,MAAW,IAAID,EAAAlR,UAAA6W,WAAA,SAAA1F,EAAAvE,IAA0D,WAAY,QAAAuE,KAAAvE,GAAgBA,MAAMmK,SAAA,EAAAC,YAAA,EAAAC,WAAA,GAAwC,IAAA/X,GAAAiK,SAAA+N,YAAA,cAA0C,OAAAhY,GAAAiY,gBAAAhG,EAAAvE,EAAAmK,QAAAnK,EAAAoK,WAAApK,EAAAqK,QAAA/X,EAA8D,qBAAAiH,QAAAiR,YAAA,QAAkDjG,GAAAnR,UAAAmG,OAAAkR,MAAArX,UAAAmG,OAAAiR,YAAAjG,IAA2D,IAAAjS,GAAA,GAAAkY,aAAAjG,GAAyB8F,OAAArK,GAAWzG,QAAAmR,cAAApY,IAAwBgS,EAAAlR,UAAAuX,gBAAA,WAA4D,MAAA9Y,MAAAgL,kBAA6ByH,EAAAlR,UAAAwX,aAAA,SAAArG,GAA0D,GAAAvE,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAC,WAAuD,OAAAvF,KAAAnO,KAAAgZ,SAAA7K,MAAAvD,QAAA8H,EAAA1S,KAAAkT,UAAAoB,qBAAA,GAA+E7B,EAAAlR,UAAA0X,eAAA,SAAAvG,GAA4D,IAAA1S,KAAA+Y,aAAArG,GAAA,WAAqC,IAAAvE,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAE,iBAAAjB,GAAAjS,EAAAT,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAG,eAAAlB,GAAAhS,EAAAV,KAAA0L,OAAAwN,qBAAA,GAA+J,OAAAzY,MAAAT,KAAAmZ,OAAAzY,EAAAyN,GAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAE,iBAAAjB,EAAA,IAAA1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAG,eAAAlB,EAAA,UAA0JD,EAAAlR,UAAA2I,cAAA,WAA0D,GAAAlK,KAAA2V,MAAA,MAAA3V,MAAA2V,KAAgC,IAAAjD,GAAA1S,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAQ,QAAoD,OAAAjU,MAAA2V,MAAA3V,KAAAoZ,YAAA1G,GAAA1S,KAAA2V,OAAiDlD,EAAAlR,UAAA8V,iBAAA,SAAA3E,EAAAvE,EAAA1N,GAAkET,KAAA4V,gBAAAzH,GAAAuE,EAAA1S,KAAAgW,8BAAAtD,KAAA1S,KAAAgW,8BAAAtD,MAA4G,IAAAhS,GAAAV,IAAWA,MAAAgW,8BAAAtD,GAAArC,KAAA5P,GAAAT,KAAA+V,6BAAArD,KAAA1S,KAAA+V,6BAAArD,GAAA,SAAAjS,EAAAsK,EAAA/F,EAAA+J,GAA4IrO,EAAAkV,gBAAAzH,GAAA,IAA0B,QAAAkD,GAAA,EAAYA,EAAA3Q,EAAAsV,8BAAAtD,GAAAvQ,SAA4CkP,EAAA,IAAQ3Q,EAAAsV,8BAAAtD,GAAArB,GAAA5Q,EAAAsK,EAAA/F,EAAA+J,GAA+C,MAAA/J,GAAStE,EAAAiQ,KAAA3L,GAAUtE,EAAAsV,8BAAAtD,GAAA,KAAAhS,EAAAqV,6BAAArD,GAAA,QAAiFD,EAAAlR,UAAA8X,YAAA,SAAA3G,EAAAvE,EAAA1N,GAA6DT,KAAA4W,KAAA,qCAAAlE,EAAkD,IAAAhS,GAAAV,KAAAsZ,cAAA,iBAAA5G,GAAA3H,EAAA/K,KAAA6W,QAAA,IAAAnE,CAAkE1S,MAAA0L,OAAAoL,MAAA/L,EAAA/K,KAAA8V,aAAAzF,KAAAtF,GAAA/K,KAAAkX,QAAA,+BAAAnM,GAAAtK,KAAA,OAA0G,IAAAuE,GAAAhF,KAAAuZ,+BAAAvZ,KAAAmX,gBAAA1W,EAAAiS,GAAA,SAA8EjS,KAAAT,KAAA+S,cAAAC,iBAAAhT,KAAA+W,cAAA/W,KAAA6W,QAAA7W,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAM,cAAA/T,KAAA+W,eAAA,GAAA/R,GAAA,UAAAoS,mBAAApX,KAAA+W,gBAAA/R,GAAA,eAAAA,EAAAhF,KAAAwZ,mBAAAxU,GAAAhF,KAAAqX,iBAAAtM,EAAA2H,EAAAvE,GAAAnO,KAAAyZ,WAAA,eAAAzU,GAAAtE,EAAAgZ,IAAA,cAAA1Z,KAAA2Z,kBAAA3U,EAAA,iBAAA0N,MAAyXD,EAAAlR,UAAAqY,cAAA,SAAAlH,EAAAvE,GAA6DnO,KAAA4W,KAAA,yBAAoC,IAAAnW,GAAAT,KAAAsZ,cAAA,oBAAA5Y,EAAAV,KAAA6W,QAAA,IAAA7W,KAAA0L,OAAAtD,QAAqFpI,MAAA+W,cAAA/W,KAAA6W,QAAA7W,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAM,cAAA/T,KAAA+W,eAAA,GAAA/W,KAAA0L,OAAAoL,MAAApW,EAAAV,KAAA8V,aAAAzF,KAAA3P,GAAAV,KAAAkX,QAAA,iCAAAxW,EAA0M,IAAAqK,GAAA,OAAAoD,OAAA,KAAAA,EAAA,KAAAnO,KAAA0L,OAAAtD,SAAA+F,KAAA,WAAAnJ,EAAAhF,KAAAuZ,+BAAAvZ,KAAAmX,gBAAAhJ,EAAApD,GAAA,SAA+I/F,IAAA,eAAAA,EAAAhF,KAAAwZ,mBAAAxU,MAAA,UAAAoS,mBAAApX,KAAA+W,eAAA/W,KAAAqX,iBAAA3W,EAAAV,KAAA0L,OAAAtD,SAAAsK,GAAA1S,KAAAyZ,WAAA,eAAAzU,GAAAvE,EAAAiZ,IAAA,cAAA1Z,KAAA2Z,kBAAA3U,EAAA,mBAAAhF,KAAA0L,OAAAtD,WAA2QqK,EAAAlR,UAAAsY,iCAAA,SAAAnH,EAAAvE,GAAgF,UAAAvI,QAAA,SAAA8M,EAAA,KAAAnN,KAAA4I,IAA0CsE,EAAAlR,UAAAgY,+BAAA,SAAA7G,EAAAvE,GAA8E,GAAA1N,GAAA,GAAAmF,QAAA,OAAAuI,EAAA,UAAqC,OAAAuE,KAAA/O,QAAAlD,EAAA,IAAAA,EAAA,GAAAmF,QAAA,IAAAuI,EAAA,YAAAuE,IAAA/O,QAAAlD,EAAA,IAAAA,EAAA,GAAAmF,QAAA,IAAAuI,EAAA,WAAAuE,IAAA/O,QAAAlD,EAAA,KAA0HgS,EAAAlR,UAAAoY,kBAAA,SAAAjH,EAAAvE,EAAA1N,GAAmET,KAAAkX,QAAA,qCAAAzW,GAAAT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAW,aAAA3T,EAAAT,KAAAkT,UAAAyB,gCAAA3U,KAAA8Z,WAAApH,EAAAvE,EAA8K,IAAAzN,GAAAV,IAAWkN,YAAA,WAAsB,GAAAxM,EAAAsW,SAAAtW,EAAAwS,UAAAO,QAAAW,aAAA3T,KAAAC,EAAAwS,UAAAyB,+BAAA,CAAgGjU,EAAAwW,QAAA,sCAAAxW,EAAAwS,UAAAsB,kBAAA,6BAAA/T,EAA8G,IAAAiS,GAAAhS,EAAAkV,gBAAAnV,EAA2BiS,IAAAhS,EAAAqV,6BAAArD,IAAAhS,EAAAqV,6BAAArD,GAAA,6EAAAhS,EAAAuW,UAAAvW,EAAAwS,UAAAO,QAAAW,aAAA3T,EAAAC,EAAAwS,UAAAuB,+BAA8O/T,EAAAwS,UAAAsB,oBAAgC/B,EAAAlR,UAAAuY,WAAA,SAAApH,EAAAvE,GAA0D,GAAA1N,GAAAT,IAAWS,GAAAmW,KAAA,cAAAzI,EAAwB,IAAAzN,GAAAyN,CAAQjB,YAAA,WAAsB,GAAAiB,GAAA1N,EAAA6Y,cAAA5Y,EAAyB,MAAAyN,EAAAuL,KAAA,gBAAAvL,EAAAuL,MAAAvL,EAAAuL,IAAAhH,EAAAjS,EAAAqZ,WAAApH,EAAAhS,KAA+D,MAAM+R,EAAAlR,UAAAoI,aAAA,SAAA+I,EAAAvE,GAA4D,GAAAnO,KAAAgZ,SAAAtG,GAAA,MAAA1S,MAAA2Q,KAAA,4BAAAxC,GAAA,mDAAwH,IAAA1N,GAAAT,KAAAiZ,eAAAvG,EAA6B,OAAAjS,IAAAT,KAAA4W,KAAA,0CAAAlE,OAAAvE,GAAA,KAAA1N,EAAA,OAAAT,KAAA2V,OAAA3V,KAAA0L,OAAAqO,sBAAA,IAAA/Z,KAAA0L,OAAAqO,oBAAAnP,QAAA,mBAAA5K,KAAA4V,gBAAAlD,GAAA1S,KAAAqX,iBAAArX,KAAA4V,gBAAAlD,KAAAvE,IAAAnO,KAAAkW,aAAAlW,KAAA2S,aAAAE,YAAAH,IAAA1S,KAAA0L,OAAAtD,SAAApI,KAAA2V,OAAA3V,KAAAkX,QAAA,oBAAAlX,KAAA4Z,cAAAzL,KAAAnO,KAAAkX,QAAA,qCAAAlX,KAAA4Z,cAAAzL,EAAAnO,KAAA+S,cAAAC,iBAAAhT,KAAA2V,OAAA3V,KAAAkX,QAAA,yBAAAlX,KAAAqZ,YAAA3G,EAAAvE,KAAAnO,KAAAkX,QAAA,qCAAAlX,KAAAqZ,YAAA3G,EAAAvE,EAAAnO,KAAA+S,cAAAC,oBAAAhT,KAAA2Q,KAAA,8BAAAxC,GAAA,kDAA4xBsE,EAAAlR,UAAAyY,kBAAA,SAAAtH,EAAAvE,EAAA1N,EAAAC,GAAqE,GAAAV,KAAAgZ,SAAAtG,GAAA,MAAA1S,MAAA2Q,KAAA,4BAAAjQ,GAAA,mDAAwH,KAAAV,KAAA2V,MAAA,MAAA3V,MAAA2Q,KAAA,8BAAAjQ,GAAA,+CAAiH,IAAAV,KAAA6V,wBAAA,MAAA7V,MAAA2Q,KAAA,wDAAAjQ,GAAA,2GAAwN,IAAAqK,GAAA/K,KAAA6W,QAAA,IAAAnE,CAAyB1S,MAAA0L,OAAAoL,MAAA/L,EAAA/K,KAAA8V,aAAAzF,KAAAtF,GAAA/K,KAAAkW,aAAAlW,KAAA2S,aAAAE,YAAA7S,KAAAkX,QAAA,+BAAAnM,EAA6I,IAAA/F,GAAAhF,KAAAuZ,+BAAAvZ,KAAAmX,gBAAA,QAAAzE,GAAA,SAAoF,IAAA1N,GAAA,yBAAAmJ,IAAAnJ,GAAAmJ,GAAA1N,IAAA,IAAAuE,EAAA4F,QAAA,WAAA5F,GAAA,WAAAoS,mBAAA3W,OAA0G,IAAAA,IAAA,IAAAuE,EAAA4F,QAAA,oBAAA7B,OAAA,oDAA0G/D,GAAAhF,KAAAwZ,mBAAAxU,GAAAhF,KAAA6V,yBAAA,EAAA7V,KAAA4W,KAAA,uDAAAlE,GAAA1S,KAAAqX,iBAAAtM,EAAA2H,EAAAhS,GAAAV,KAAAsX,YAAAtS,EAAA0N,EAAAhS,IAAsL+R,EAAAlR,UAAA0Y,qBAAA,SAAAvH,EAAAvE,EAAA1N,GAAsE,GAAAT,KAAAgZ,SAAAtG,GAAA,MAAA1S,MAAA2Q,KAAA,4BAAAjQ,GAAA,mDAAwH,IAAAA,GAAAV,KAAAwV,QAAoB,KAAAxV,KAAA2V,MAAA,MAAA3V,MAAA2Q,KAAA,8BAAAjQ,GAAA,+CAAiH,IAAAV,KAAA6V,wBAAA,MAAA7V,MAAA2Q,KAAA,wDAAAjQ,GAAA,2GAAwN,IAAAqK,GAAA/K,KAAA6W,QAAA,IAAAnE,CAAyB1S,MAAA0L,OAAAoL,MAAA/L,EAAA/K,KAAAkX,QAAA,+BAAAnM,EAAmE,IAAA/F,GAAAhF,KAAAuZ,+BAAAvZ,KAAAmX,gBAAA,QAAAzE,GAAA,SAAoF,IAAA1N,GAAA,yBAAAmJ,IAAAnJ,GAAAmJ,GAAA1N,IAAA,IAAAuE,EAAA4F,QAAA,WAAA5F,GAAA,WAAAoS,mBAAA3W,OAA0G,IAAAA,IAAA,IAAAuE,EAAA4F,QAAA,oBAAA7B,OAAA,oDAA0G/D,GAAAhF,KAAAwZ,mBAAAxU,GAAAhF,KAAA6V,yBAAA,EAAA7V,KAAA4W,KAAA,uDAAAlE,GAAA1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAS,cAAAxM,OAAAmB,SAAAsC,MAAAnL,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAK,YAAA/I,GAAA,GAAA/K,KAAAuX,WAAAvS,IAAsRyN,EAAAlR,UAAAgW,WAAA,SAAA7E,GAAwDA,GAAA1S,KAAAka,QAAA,eAAAxH,GAAAhL,OAAAmB,SAAAlF,QAAA+O,IAAA1S,KAAA4W,KAAA,0BAAiGnE,EAAAlR,UAAA4Y,WAAA,WAAuDna,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAS,cAAA,IAAAlU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAY,sBAAA,IAAArU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAF,cAAA,IAAAvT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAI,YAAA,IAAA7T,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAK,YAAA,IAAA9T,KAAA8V,gBAAA9V,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAM,cAAA,IAAA/T,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAQ,QAAA,IAAAjU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,IAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,IAAAtT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAA,IAAAnU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAA,GAAmnB,IAAAzB,GAAA1S,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAC,WAAuD,KAAA1T,KAAAgZ,SAAAtG,GAAA,CAAsBA,IAAA4D,MAAAtW,KAAAkT,UAAAoB,mBAA6C,QAAAnG,GAAA,EAAYA,EAAAuE,EAAAvQ,QAAA,KAAAuQ,EAAAvE,GAAsBA,IAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAE,iBAAAjB,EAAAvE,GAAA,IAAAnO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAG,eAAAlB,EAAAvE,GAAA,GAAiInO,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAC,WAAA,KAAqDjB,EAAAlR,UAAA6Y,sBAAA,SAAA1H,GAAmE1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAK,YAAA,IAAA9T,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,IAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,IAAAtT,KAAA+Y,aAAArG,KAAA1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAE,iBAAAjB,EAAA,IAAA1S,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAG,eAAAlB,EAAA,KAAiTD,EAAAlR,UAAA8Y,OAAA,WAAmDra,KAAAma,aAAAna,KAAA2V,MAAA,IAAkC,IAAAjD,EAAM,IAAA1S,KAAA0L,OAAA4O,UAAA5H,EAAA1S,KAAA0L,OAAA4O,cAAiD,CAAK,GAAAnM,GAAA,SAAA1N,EAAA,EAAoBT,MAAA0L,OAAArD,SAAA8F,EAAAnO,KAAA0L,OAAArD,QAAArI,KAAA0L,OAAA6K,wBAAA9V,EAAA,4BAAA2W,mBAAApX,KAAA0L,OAAA6K,wBAAA7D,EAAA1S,KAAAoP,SAAAjB,EAAA,kBAAA1N,EAA0MT,KAAAka,QAAA,uBAAAxH,GAAA1S,KAAAuX,WAAA7E,IAA0DD,EAAAlR,UAAAyX,SAAA,SAAAtG,GAAsD,gBAAAA,OAAA,IAAAA,EAAAvQ,QAAoCsQ,EAAAlR,UAAAgZ,QAAA,SAAA7H,GAAqD,qBAAAA,GAAA,SAAA3J,OAAA,6BAAsE,IAAA/I,KAAA2V,MAAA,WAAAjD,GAAA,KAAA1S,KAAA2V,MAA6C,IAAAxH,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAQ,QAAoDjU,MAAAgZ,SAAA7K,IAAAnO,KAAA2Q,KAAA,qCAAA+B,EAAA,4CAAA1S,KAAA4W,KAAA,0BAAA5W,KAAA2V,MAAA3V,KAAAoZ,YAAAjL,GAAAuE,EAAA,KAAA1S,KAAA2V,SAAsMlD,EAAAlR,UAAAiY,mBAAA,SAAA9G,GAAgE,GAAA1S,KAAA2V,OAAA3V,KAAA2V,MAAA6E,QAAA,GAAAxa,KAAA2V,MAAA6E,QAAAC,MAAA,IAAA/H,EAAA9H,QAAA,gBAAA5K,KAAA6Z,iCAAA,MAAAnH,QAAA,QAAA0E,mBAAApX,KAAA2V,MAAA6E,QAAAC,UAAoM,IAAAza,KAAA2V,MAAA6E,QAAAE,MAAA1a,KAAA6Z,iCAAA,aAAAnH,QAAA,eAAA0E,mBAAApX,KAAA2V,MAAA6E,QAAAE,OAAA1a,KAAA6Z,iCAAA,cAAAnH,IAAA1S,KAAA2V,MAAA6E,QAAAE,IAAA9P,QAAA,UAAyP,GAAAuD,GAAAnO,KAAA2V,MAAA6E,QAAAE,IAAApE,MAAA,IAAwC5D,IAAA,gBAAA0E,mBAAAjJ,IAAAhM,OAAA,IAAqD,MAAAuQ,IAASD,EAAAlR,UAAA6X,YAAA,SAAA1G,GAAyD,GAAAvE,GAAA,KAAA1N,EAAAT,KAAA2a,gBAAAjI,EAAqC,OAAAjS,MAAAe,eAAA,SAAAf,EAAAma,IAAAjY,gBAAA3C,KAAA0L,OAAAtD,SAAAzF,eAAAwL,GAAiG0M,SAAA,GAAAL,QAAA/Z,GAAsBA,EAAAe,eAAA,OAAA2M,EAAA0M,SAAApa,EAAAia,IAAAja,EAAAe,eAAA,WAAA2M,EAAA0M,SAAApa,EAAAqa,QAAA9a,KAAA2Q,KAAA,kCAAAxC,GAAyIsE,EAAAlR,UAAAwZ,SAAA,SAAArI,GAAsD,MAAAA,GAAA9H,QAAA,SAAA8H,IAAAV,UAAAU,EAAA9H,QAAA,SAAA8H,EAAA9H,QAAA,UAAA8H,IAAAV,UAAA,IAAAU,GAAmGD,EAAAlR,UAAAyZ,WAAA,SAAAtI,GAAwDA,EAAA1S,KAAA+a,SAAArI,EAAmB,IAAAvE,GAAAnO,KAAAib,aAAAvI,EAA2B,OAAAvE,GAAA3M,eAAAxB,KAAAkT,UAAAI,oBAAAnF,EAAA3M,eAAAxB,KAAAkT,UAAAC,eAAAhF,EAAA3M,eAAAxB,KAAAkT,UAAAG,WAAoJZ,EAAAlR,UAAA2Z,cAAA,WAA0D,MAAAlb,MAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAU,cAAyD1B,EAAAlR,UAAA4Z,eAAA,SAAAzI,GAA4DA,EAAA1S,KAAA+a,SAAArI,EAAmB,IAAAvE,GAAAnO,KAAAib,aAAAvI,GAAAjS,GAA8B2a,OAAA,EAAAC,cAAsBC,YAAA,EAAAC,cAAA,GAAAC,YAAAxb,KAAA2S,aAAAG,QAAuE,IAAA3E,IAAA1N,EAAA4a,WAAAlN,IAAA3M,eAAAxB,KAAAkT,UAAAI,oBAAAnF,EAAA3M,eAAAxB,KAAAkT,UAAAC,eAAAhF,EAAA3M,eAAAxB,KAAAkT,UAAAG,WAAA,CAAqK5S,EAAA2a,OAAA,CAAW,IAAA1a,GAAA,EAAS,KAAAyN,EAAA3M,eAAA,eAAAxB,MAAA2Q,KAAA,qBAAAlQ,CAAsE,IAAAT,KAAAkX,QAAA,UAAA/I,EAAA2I,OAAApW,EAAAyN,EAAA2I,MAAArW,EAAA8a,cAAA7a,EAAAV,KAAAyb,YAAAhb,GAAA,MAAAA,EAA4F,KAAAA,EAAA6a,YAAA5T,OAAAgU,OAAA,CAAiCjb,EAAA+a,YAAAxb,KAAAkW,YAAgC,QAAAnL,GAAA/K,KAAA8V,aAAA9Q,EAAA,EAAgCA,EAAA+F,EAAA5I,OAAW6C,IAAA,GAAA+F,EAAA/F,KAAAvE,EAAA8a,cAAA,CAA+B9a,EAAA6a,YAAA,CAAgB,SAAQ,MAAA7a,IAASgS,EAAAlR,UAAAoa,YAAA,SAAAjJ,GAAyD,GAAAvE,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAM,cAA0D,IAAA5F,EAAA,CAAMA,IAAAmI,MAAAtW,KAAAkT,UAAAqB,gBAA0C,QAAA9T,GAAA,EAAYA,EAAA0N,EAAAhM,OAAW1B,IAAA,GAAA0N,EAAA1N,KAAAiS,EAAA8H,QAAAoB,MAAA,SAAuC,UAASnJ,EAAAlR,UAAAka,YAAA,SAAA/I,GAAyD,GAAAvE,GAAAnO,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAI,YAAwD,IAAA1F,EAAA,CAAMA,IAAAmI,MAAAtW,KAAAkT,UAAAqB,gBAA0C,QAAA9T,GAAA,EAAYA,EAAA0N,EAAAhM,OAAW1B,IAAA,GAAA0N,EAAA1N,KAAAiS,EAAA6I,cAAA,MAAA7I,GAAA8I,YAAAxb,KAAA2S,aAAAC,MAAAF,EAAA4I,YAAA,KAA8F,GAAA5a,GAAAV,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAK,YAAwD,IAAApT,EAAA,CAAMA,IAAA4V,MAAAtW,KAAAkT,UAAAqB,gBAA0C,QAAA9T,GAAA,EAAYA,EAAAC,EAAAyB,OAAW1B,IAAA,GAAAC,EAAAD,KAAAiS,EAAA6I,cAAA,MAAA7I,GAAA8I,YAAAxb,KAAA2S,aAAAE,YAAAH,EAAA4I,YAAA,KAAoG,UAAS7I,EAAAlR,UAAAsa,sBAAA,SAAAnJ,GAAmE,GAAAA,EAAA,CAAM,GAAAvE,GAAAuE,EAAA9H,QAAA,IAAqB,IAAAuD,GAAA,GAAAA,EAAA,EAAAuE,EAAAvQ,OAAA,MAAAuQ,GAAAV,UAAA7D,EAAA,GAA8C,UAASsE,EAAAlR,UAAAua,kBAAA,SAAApJ,GAA+D1S,KAAA4W,KAAA,gBAAAlE,EAAA4I,WAAA,kBAAyC5I,EAAA8I,aAAAxb,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,IAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,GAA2I,IAAAnF,GAAAnO,KAAA6b,sBAAAnJ,EAAA6I,cAAkD,IAAA7I,EAAA2I,WAAA7Z,eAAAxB,KAAAkT,UAAAI,mBAAAtT,KAAAka,QAAA,UAAAxH,EAAA2I,WAAAhO,MAAA,uBAA6GqF,EAAA2I,WAAArb,KAAAkT,UAAAI,oBAAAtT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAAd,EAAA2I,WAAAhO,OAAArN,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAAZ,EAAA2I,WAAArb,KAAAkT,UAAAI,oBAAAZ,EAAA8I,cAAAxb,KAAA2S,aAAAC,QAAA5S,KAAAgL,kBAAA,EAAAhL,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAAzB,EAAA2I,WAAAU,wBAAmY,IAAArJ,EAAA4I,WAAA,CAAsBtb,KAAA4W,KAAA,kBAAAlE,EAAA2I,WAAA7Z,eAAAxB,KAAAkT,UAAAK,gBAAAvT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAF,cAAAb,EAAA2I,WAAArb,KAAAkT,UAAAK,eAAuL,IAAA9S,EAAMiS,GAAA2I,WAAA7Z,eAAAxB,KAAAkT,UAAAC,gBAAAnT,KAAA4W,KAAA,6BAAA5W,KAAA+Y,aAAA5K,KAAA1N,EAAAT,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAC,aAAA,GAAA1T,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAC,WAAAjT,EAAA0N,EAAAnO,KAAAkT,UAAAoB,qBAAAtU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAE,iBAAAxF,EAAAuE,EAAA2I,WAAArb,KAAAkT,UAAAC,eAAAnT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAG,eAAAzF,EAAAnO,KAAAgc,WAAAtJ,EAAA2I,WAAArb,KAAAkT,UAAAE,eAAAV,EAAA2I,WAAA7Z,eAAAxB,KAAAkT,UAAAG,YAAArT,KAAA4W,KAAA,yBAAA5W,KAAAgL,kBAAA,EAAAhL,KAAA2V,MAAA3V,KAAAoZ,YAAA1G,EAAA2I,WAAArb,KAAAkT,UAAAG,WAAArT,KAAA2V,OAAA3V,KAAA2V,MAAA6E,QAAAxa,KAAA2b,YAAA3b,KAAA2V,QAAA3V,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAQ,QAAAvB,EAAA2I,WAAArb,KAAAkT,UAAAG,WAAAlF,EAAAnO,KAAA0L,OAAA2K,cAAArW,KAAA0L,OAAA2K,cAAArW,KAAA0L,OAAAtD,SAAApI,KAAA+Y,aAAA5K,KAAA1N,EAAAT,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAC,aAAA,GAAA1T,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAC,WAAAjT,EAAA0N,EAAAnO,KAAAkT,UAAAoB,qBAAAtU,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAE,iBAAAxF,EAAAuE,EAAA2I,WAAArb,KAAAkT,UAAAG,WAAArT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAG,eAAAzF,EAAAnO,KAAA2V,MAAA6E,QAAAyB,OAAAjc,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAU,YAAA,mBAAAnU,KAAA2V,MAAA6E,QAAAoB,MAAA,8BAAA5b,KAAAgX,SAAAhX,KAAAkT,UAAAO,QAAAM,gBAAA/T,KAAA2V,MAAA,OAAAjD,EAAA2I,WAAAhO,MAAA,mBAAAqF,EAAA2I,WAAAU,kBAAA,+BAAArJ,EAAA2I,WAAArb,KAAAkT,UAAAG,UAAArT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,oBAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,+BAAAZ,EAAA2I,WAAArb,KAAAkT,UAAAG,iBAAutDX,GAAA2I,WAAAhO,MAAA,gBAAAqF,EAAA2I,WAAAU,kBAAA,yBAAArJ,EAAA6I,cAAAvb,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAD,MAAA,iBAAAxT,KAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAH,kBAAA,yBAAAZ,EAAA6I,cAA+Qvb,MAAAiX,UAAAjX,KAAAkT,UAAAO,QAAAW,aAAAjG,EAAAnO,KAAAkT,UAAAwB,+BAAkGjC,EAAAlR,UAAA2a,uBAAA,SAAAxJ,GAAoE,GAAA1S,KAAA0L,QAAA1L,KAAA0L,OAAA8K,mBAAA,OAAArI,GAAA,EAA2DA,EAAAnO,KAAA0L,OAAA8K,mBAAArU,OAAwCgM,IAAA,GAAAuE,EAAA9H,QAAA5K,KAAA0L,OAAA8K,mBAAArI,KAAA,aAAmE,IAAAnO,KAAA0L,QAAA1L,KAAA0L,OAAAyQ,UAAA,OAAA1b,KAAAT,MAAA0L,OAAAyQ,UAAA,GAAAzJ,EAAA9H,QAAAnK,IAAA,QAAAT,MAAA0L,OAAAyQ,UAAA1b,EAA4H,OAAAiS,GAAA9H,QAAA,eAAA8H,EAAA9H,QAAA,eAAA5K,KAAAoc,gBAAA1J,KAAA1S,KAAAoc,gBAAApc,KAAA0L,OAAApD,aAAAtI,KAAA0L,OAAA2K,cAAA,KAAArW,KAAA0L,OAAA2K,eAA0L5D,EAAAlR,UAAA6a,gBAAA,SAAA1J,GAA6D,GAAAvE,GAAAkO,OAAA3J,GAAA/O,QAAA,oBAA6C,OAAAwK,KAAAmI,MAAA,SAAyB7D,EAAAlR,UAAAsJ,qBAAA,SAAA6H,GAAkE,SAAAA,MAAAhL,OAAAmB,SAAAzC,MAAApG,KAAAgb,WAAAtI,GAAA,CAAyD,GAAAvE,GAAA,KAAA1N,GAAA,CAAgBT,MAAAiW,eAAA9T,OAAA,GAAAnC,KAAAiW,eAAAjW,KAAAiW,eAAA9T,OAAA,GAAAma,QAAAtc,KAAAiW,eAAAjW,KAAAiW,eAAA9T,OAAA,GAAAma,OAAAnG,eAAAhI,EAAAnO,KAAAiW,eAAAjW,KAAAiW,eAAA9T,OAAA,GAAAma,OAAAnG,cAAA1V,GAAA,GAAAiH,OAAAgU,QAAAhU,OAAAgU,OAAAvF,gBAAAhI,EAAAzG,OAAAgU,OAAAvF,cAA2T,IAAAzV,GAAAqK,EAAA/F,EAAAmJ,EAAAgN,eAAAzI,GAAA3D,EAAA,IAAqChE,GAAAtK,GAAAiH,OAAAgU,SAAAhU,OAAAyG,EAAA4H,6BAAA/Q,EAAAuW,eAAApN,EAAAqH,SAAArH,EAAAyI,KAAA,8BAAAzI,EAAA2N,kBAAA9W,KAAAwW,cAAAxb,KAAA2S,aAAAE,aAAAnL,OAAAgU,QAAAhU,OAAAgU,SAAAhU,OAAAyG,EAAA+I,QAAA,iDAAA/I,EAAA+I,QAAA,2CAAAxW,EAAAsE,EAAAqW,WAAAlN,EAAA+E,UAAAC,eAAAnO,EAAAqW,WAAAlN,EAAA+E,UAAAG,UAAAtE,EAAAZ,EAAA+E,UAAAC,cAAAnO,EAAAwW,cAAAxb,KAAA2S,aAAAC,QAAAlS,EAAAsE,EAAAqW,WAAAlN,EAAA+E,UAAAG,UAAAtE,EAAAZ,EAAA+E,UAAAG,SAAwiB,IAAAhC,GAAArM,EAAAqW,WAAAlN,EAAA+E,UAAAI,mBAAAjT,EAAA2E,EAAAqW,WAAAlN,EAAA+E,UAAAM,MAAoF,KAAIzI,KAAAsG,EAAA3Q,EAAAL,EAAA0O,GAAc,MAAA2D,GAASvE,EAAAd,MAAA,qDAAAqF,GAAgEhL,OAAAgU,SAAAhU,QAAAjH,IAAA0N,EAAAzC,OAAA1B,0BAAAtC,OAAAmB,SAAAsC,KAAAgD,EAAA6I,SAAA7I,EAAA+E,UAAAO,QAAAS,eAAAxM,OAAAmB,SAAAzC,KAAA,MAA4JqM,EAAAlR,UAAA4V,gBAAA,SAAAzE,EAAAvE,GAA+D,GAAA1N,GAAA,QAAeT,MAAA0L,OAAArD,SAAA5H,EAAAT,KAAA0L,OAAArD,OAA2C,IAAA3H,GAAAV,KAAAoP,SAAA3O,EAAA,oBAAAT,KAAAuc,WAAA7J,EAAA1S,KAAA0L,OAAAyC,GAAAnO,KAAAwc,iBAAkG,OAAAxc,MAAA4W,KAAA,gBAAAlW,MAAsC+R,EAAAlR,UAAAoZ,gBAAA,SAAAjI,GAA6D,GAAAvE,GAAAnO,KAAAyc,WAAA/J,EAAyB,KAAAvE,EAAA,WAAkB,KAAI,GAAA1N,GAAA0N,EAAAuO,WAAAhc,EAAAV,KAAA2c,2BAAAlc,EAAwD,OAAAC,GAAAsF,KAAAqG,MAAA3L,IAAAV,KAAA4W,KAAA,qEAAuG,MAAAlE,GAAS1S,KAAAqN,MAAA,6CAAAqF,GAA2D,aAAYD,EAAAlR,UAAAob,2BAAA,SAAAjK,GAAwE,MAAAA,KAAA/O,QAAA,UAAAA,QAAA,UAAA+D,OAAAkV,KAAAC,mBAAAC,OAAApV,OAAAkV,KAAAlK,KAAAmK,mBAAAC,OAAA9c,KAAA+c,QAAArK,MAAkJD,EAAAlR,UAAAwb,QAAA,SAAArK,GAAqD,GAAAvE,GAAA,mEAA0EuE,GAAA2J,OAAA3J,GAAA/O,QAAA,SAA8B,IAAAlD,GAAAiS,EAAAvQ,MAAe,IAAA1B,EAAA,cAAAsI,OAAA,oDAA+E,QAAArI,GAAAqK,EAAA/F,EAAA+J,EAAAsC,EAAAhR,EAAA6X,EAAAhR,EAAA5G,EAAA,GAAAE,EAAA,EAAiCA,EAAAC,EAAID,GAAA,GAAM,GAAAE,EAAAyN,EAAAvD,QAAA8H,EAAAsK,OAAAxc,IAAAuK,EAAAoD,EAAAvD,QAAA8H,EAAAsK,OAAAxc,EAAA,IAAAwE,EAAAmJ,EAAAvD,QAAA8H,EAAAsK,OAAAxc,EAAA,IAAAuO,EAAAZ,EAAAvD,QAAA8H,EAAAsK,OAAAxc,EAAA,IAAAA,EAAA,IAAAC,EAAA,GAAwH4Q,EAAA3Q,GAAA,GAAAqK,GAAA,GAAA/F,GAAA,EAAA3E,EAAAgR,GAAA,OAAA6G,EAAA7G,GAAA,MAAA/Q,GAAA+b,OAAAY,aAAA5c,EAAA6X,EAAsE,OAAM,GAAA1X,EAAA,IAAAC,EAAA,GAAc4Q,EAAA3Q,GAAA,GAAAqK,GAAA,GAAA1K,EAAAgR,GAAA,OAAA/Q,GAAA+b,OAAAY,aAAA5c,EAAoD,OAAMgR,EAAA3Q,GAAA,GAAAqK,GAAA,GAAA/F,GAAA,EAAA+J,EAAA1O,EAAAgR,GAAA,OAAA6G,EAAA7G,GAAA,MAAAnK,EAAA,IAAAmK,EAAA/Q,GAAA+b,OAAAY,aAAA5c,EAAA6X,EAAAhR,GAAkF,MAAA5G,IAASmS,EAAAlR,UAAAkb,WAAA,SAAA/J,GAAwD,GAAA1S,KAAAgZ,SAAAtG,GAAA,WAAgC,IAAAvE,GAAA,uCAAA1N,EAAA0N,EAAArI,KAAA4M,EAAyD,QAAAjS,KAAA0B,OAAA,GAAAnC,KAAA2Q,KAAA,kDAAkFuM,OAAAzc,EAAA,GAAAic,WAAAjc,EAAA,GAAA0c,OAAA1c,EAAA,KAAyCgS,EAAAlR,UAAA6b,4CAAA,SAAA1K,GAAyF,MAAAA,GAAA/O,QAAA,SAAAA,QAAA,UAA2C8O,EAAAlR,UAAAgb,WAAA,SAAA7J,EAAAvE,EAAA1N,GAA4D,GAAAC,KAAS,WAAAyN,EAAA,CAAazN,EAAA2P,KAAA,kBAAAqC,GAAAhS,EAAA2P,KAAA,aAAA+G,mBAAAjJ,EAAA/F,WAAA3H,GAAAC,EAAA2P,KAAA,YAAA+G,mBAAA3W,IAAAC,EAAA2P,KAAA,gBAAA+G,mBAAAjJ,EAAA7F,cAAA5H,EAAA2P,KAAA,SAAA+G,mBAAAjJ,EAAA2I,QAAA3I,EAAA3M,eAAA,UAAAd,EAAA2P,KAAA,SAAA+G,mBAAAjJ,EAAAmC,QAAAnC,EAAA3M,eAAA,wBAAAd,EAAA2P,KAAAlC,EAAA4L,oBAAmX,IAAAhP,GAAAoD,EAAAkP,cAAAlP,EAAAkP,cAAArd,KAAA6W,OAAmDnW,GAAA2P,KAAA,qBAAA+G,mBAAArM,IAAmD,MAAArK,GAAAkD,KAAA,MAAmB6O,EAAAlR,UAAA0Z,aAAA,SAAAvI,GAA0D,GAAAvE,GAAA1N,EAAA,MAAAC,EAAA,oBAAAqK,EAAA,SAAA2H,GAAkD,MAAAmK,oBAAAnK,EAAA/O,QAAAlD,EAAA,OAA4CuE,IAAM,KAAAmJ,EAAAzN,EAAAoF,KAAA4M,GAAgBvE,GAAEnJ,EAAA+F,EAAAoD,EAAA,KAAApD,EAAAoD,EAAA,IAAAA,EAAAzN,EAAAoF,KAAA4M,EAAgC,OAAA1N,IAASyN,EAAAlR,UAAA+b,cAAA,SAAA5K,GAA2D,OAAAvE,GAAAuE,EAAAxO,SAAA,IAAyBiK,EAAAhM,OAAA,GAAWgM,EAAA,IAAAA,CAAS,OAAAA,IAASsE,EAAAlR,UAAAsV,MAAA,WAAkD,GAAAnE,GAAAhL,OAAA6V,QAAA7V,OAAA8V,QAAqC,IAAA9K,KAAA+K,gBAAA,CAAyB,GAAAtP,GAAA,GAAAuP,YAAA,GAAyB,OAAAhL,GAAA+K,gBAAAtP,KAAA,OAAAA,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,QAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,QAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,QAAAnO,KAAAsd,cAAAnP,EAAA,IAAAnO,KAAAsd,cAAAnP,EAAA,QAAAnO,KAAAsd,cAAAnP,EAAA,KAAAnO,KAAAsd,cAAAnP,EAAA,KAAAnO,KAAAsd,cAAAnP,EAAA,KAAAnO,KAAAsd,cAAAnP,EAAA,KAAAnO,KAAAsd,cAAAnP,EAAA,KAAAnO,KAAAsd,cAAAnP,EAAA,KAAwe,OAAA1N,GAAA,uCAAAC,EAAA,mBAAAqK,EAAA,EAAA/F,EAAA,GAAA+J,EAAA,EAAmFA,EAAA,GAAKA,IAAA,MAAAtO,EAAAsO,IAAA,MAAAtO,EAAAsO,KAAAhE,EAAA,GAAAhH,KAAAC,SAAA,SAAAvD,EAAAsO,GAAA/J,GAAAtE,EAAAqK,GAAA,MAAAtK,EAAAsO,IAAAhE,GAAA,EAAAA,GAAA,EAAA/F,GAAAtE,EAAAqK,IAAA/F,GAAAvE,EAAAsO,EAA6G,OAAA/J,IAASyN,EAAAlR,UAAAya,WAAA,SAAAtJ,GAAwD,MAAAA,OAAA,MAAA1S,KAAAmZ,OAAAwE,SAAAjL,EAAA,KAA8CD,EAAAlR,UAAA4X,KAAA,WAAiD,MAAApV,MAAA6Z,OAAA,GAAAlb,OAAAS,UAAA,MAA4CsP,EAAAlR,UAAA+X,cAAA,SAAA5G,GAA2D,YAAAA,EAAA,CAAe1S,KAAA4W,KAAA,8BAAAlE,EAA2C,IAAAvE,GAAAzD,SAAAmT,eAAAnL,EAAiC,KAAAvE,EAAA,CAAO,GAAAzD,SAAAQ,eAAAR,SAAAoN,kBAAApQ,OAAAoW,QAAA,IAAApW,OAAAqW,UAAAC,UAAApT,QAAA,cAA0H,GAAAnK,GAAAiK,SAAAQ,cAAA,SAAuCzK,GAAAwd,aAAA,KAAAvL,GAAAjS,EAAAwd,aAAA,sBAAAxd,EAAAyd,MAAAC,WAAA,SAAA1d,EAAAyd,MAAAE,SAAA,WAAA3d,EAAAyd,MAAAG,MAAA5d,EAAAyd,MAAAI,OAAA7d,EAAA8d,YAAA,MAAApQ,EAAAzD,SAAA8T,qBAAA,WAAAC,YAAAhe,OAA+NiK,UAAA4G,MAAA5G,SAAA4G,KAAAoN,oBAAAhU,SAAA4G,KAAAoN,mBAAA,6BAAAhM,EAAA,SAAAA,EAAA,mCAAqKhL,QAAAiX,QAAAjX,OAAAiX,OAAAjM,KAAAvE,EAAAzG,OAAAiX,OAAAjM,IAAsD,MAAAvE,KAAUsE,EAAAlR,UAAA0V,UAAA,SAAAvE,EAAAvE,EAAA1N,GAA2D,GAAAT,KAAA0L,QAAA1L,KAAA0L,OAAAkT,eAAA,iBAAA5e,KAAA0L,OAAAkT,cAAA,CAAuF,IAAA5e,KAAA6e,wBAAA,MAAA7e,MAAA4W,KAAA,oCAAuF,IAAAnW,EAAA,CAAM,GAAAC,GAAAV,KAAAgX,SAAAtE,IAAA,EAA2B1E,cAAAtB,QAAAgG,EAAAhS,EAAAyN,EAAAnO,KAAAkT,UAAAqB,qBAA2DvG,cAAAtB,QAAAgG,EAAAvE,EAA+B,UAAS,MAAAnO,MAAA8e,2BAAA7Q,eAAAvB,QAAAgG,EAAAvE,IAAA,IAAAnO,KAAA4W,KAAA,yCAA0HnE,EAAAlR,UAAAyV,SAAA,SAAAtE,GAAsD,MAAA1S,MAAA0L,QAAA1L,KAAA0L,OAAAkT,eAAA,iBAAA5e,KAAA0L,OAAAkT,cAAA5e,KAAA6e,wBAAA7Q,aAAA7B,QAAAuG,IAAA1S,KAAA4W,KAAA,wCAAA5W,KAAA8e,0BAAA7Q,eAAA9B,QAAAuG,IAAA1S,KAAA4W,KAAA,2CAAgTnE,EAAAlR,UAAAsd,sBAAA,WAAkE,IAAI,QAAAnX,OAAAsG,eAAAtG,OAAAsG,aAAAtB,QAAA,wBAAAhF,OAAAsG,aAAA7B,QAAA,iBAAAzE,OAAAsG,aAAApB,WAAA,gBAAAlF,OAAAsG,aAAA7B,QAAA,iBAA2N,MAAAuG,GAAS,WAAUD,EAAAlR,UAAAud,wBAAA,WAAoE,IAAI,QAAApX,OAAAuG,iBAAAvG,OAAAuG,eAAAvB,QAAA,wBAAAhF,OAAAuG,eAAA9B,QAAA,iBAAAzE,OAAAuG,eAAArB,WAAA,gBAAAlF,OAAAuG,eAAA9B,QAAA,iBAAqO,MAAAuG,GAAS,WAAUD,EAAAlR,UAAA6U,aAAA,SAAA1D,GAA0D,UAAAA,GAAA,gBAAAA,GAAA,MAAAA,EAAyC,IAAAvE,KAAS,QAAA1N,KAAAiS,KAAAlR,eAAAf,KAAA0N,EAAA1N,GAAAiS,EAAAjS,GAAgD,OAAA0N,IAASsE,EAAAlR,UAAAib,gBAAA,WAA4D,uCAAAxc,KAAA+e,eAA0DtM,EAAAlR,UAAAwO,IAAA,SAAA2C,EAAAvE,EAAA1N,EAAAC,GAAuD,GAAAgS,GAAAgE,QAAA5G,MAAA,CAAqB,IAAA4G,QAAAC,mBAAAjW,EAAA,MAAwC,IAAAqK,IAAA,GAAArI,OAAAsc,cAAAha,EAAA,EAAoCA,GAAAhF,KAAA0L,OAAA2R,cAAAtS,EAAA,IAAA/K,KAAA0L,OAAA2R,cAAA,IAAArd,KAAA+e,cAAA,IAAA/e,KAAAkT,UAAA8B,iBAAAtC,GAAA,IAAAvE,EAAApD,EAAA,IAAA/K,KAAA+e,cAAA,IAAA/e,KAAAkT,UAAA8B,iBAAAtC,GAAA,IAAAvE,EAAA1N,IAAAuE,GAAA,aAAAvE,EAAAwe,OAAAvI,QAAA3G,IAAA/K,KAAmPyN,EAAAlR,UAAA8L,MAAA,SAAAqF,EAAAvE,GAAqDnO,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAApB,MAAAd,EAAAvE,IAAiDsE,EAAAlR,UAAAoP,KAAA,SAAA+B,GAAkD1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAC,KAAAnC,EAAA,OAAmDD,EAAAlR,UAAAqV,KAAA,SAAAlE,GAC5q+B1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAE,KAAApC,EAAA,OAAmDD,EAAAlR,UAAA2V,QAAA,SAAAxE,GAAqD1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAG,QAAArC,EAAA,OAAsDD,EAAAlR,UAAA2d,SAAA,SAAAxM,EAAAvE,GAAwDnO,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAApB,MAAAd,EAAAvE,GAAA,IAAoDsE,EAAAlR,UAAA4d,QAAA,SAAAzM,GAAqD1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAC,KAAAnC,EAAA,UAAsDD,EAAAlR,UAAA2Y,QAAA,SAAAxH,GAAqD1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAE,KAAApC,EAAA,UAAsDD,EAAAlR,UAAAkY,WAAA,SAAA/G,GAAwD1S,KAAA+P,IAAA/P,KAAAkT,UAAA0B,cAAAG,QAAArC,EAAA,UAAyDD,EAAAlR,UAAAwd,YAAA,WAAwD,oBAAe,KAAAnf,KAAAD,UAAAC,EAAAD,QAAA8S,EAAA7S,EAAAD,QAAAyf,OAAA,SAAA1M,GAAqH,UAAAD,GAAAC,KAAoCD,MTg/C3yB,SAAU7S,EAAQ+B,EAAqBzB,GAE7C,YUp/CAA,GAAAQ,EAAAiB,EAAA,qBAAA0d,KAAAnf,EAAAQ,EAAAiB,EAAA,qBAAA2d,IAAA,IAAA/X,GAAArH,EAAA,GAAAqf,EAAArf,EAAA,GAAAsf,EAAAtf,EAAA,GAGAmf,EAAA,SAAAvX,GAEA,QAAAuX,KACA,cAAAvX,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAwCA,MA1CIuH,GAAA,EAAiB8X,EAAAvX,GAUrBuX,EAAA9d,UAAAke,gBAAA,SAAAC,EAAAC,GACA,MAAA3f,MAAA4f,QAA4BL,EAAA,EAAIG,EAAAC,EAAA,SAQhCN,EAAA9d,UAAAse,eAAA,SAAAH,EAAAC,GACA,MAAA3f,MAAA4f,QAA4BL,EAAA,EAAGG,EAAAC,EAAA,QAU/BN,EAAA9d,UAAAqe,QAAA,SAAAlgB,EAAAggB,EAAAC,EAAAG,GACA,IAAahf,OAAA0e,EAAA,GAAaE,GAC1B,KAAA3W,OAAA,qDAEA,KAAajI,OAAA0e,EAAA,GAAaG,GAC1B,KAAA5W,OAAA,oDAEA,IAAAzD,GAAkBxE,OAAA0e,EAAA,GAAOE,EAAA,mCACzBtQ,EAAA,GAAA1P,GAAA4F,EAAAwa,EAEA,OADA1Q,GAAA2Q,MAAA5Y,IAAA,cAAAiQ,mBAAAuI,GAAA,KACAvQ,EAAA4Q,UAAAhgB,KAAAigB,WAEAZ,GACEE,EAAA,GAEKD,EAAA,GAAAD,IV+/CD,SAAUzf,EAAQ+B,EAAqBzB,GAE7C,cWljDA,SAAA0B;;;;;;;;;AAcA,QAAAse,GAAAC,GACA,GAAQrf,OAAAmQ,EAAA,GAAmBkP,GAC3B,QAEA,IAAAzS,GAAAyS,EAAAvV,QAAA,QAIA,OAHA8C,GAAA,IACAA,EAAAyS,EAAAvV,QAAA,cAEA8C,GAAA,EACAyS,EAAAC,OAAA,EAAA1S,GAGAyS,EAGA,QAAAE,GAAAC,GACA,GAAAC,MACA7e,GAAA,4DAwBA,OAvBQZ,QAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,gBAAA4e,EAAA5e,EAAA,IAECZ,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,IACf6e,EAAAlQ,KAAAiQ,EAAA5e,EAAA,KAEiBZ,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,KAEpB6e,EAAAlQ,KAAAiQ,EAAAE,WAAAC,KAIY3f,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,KAAqBZ,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,IAEvC6e,EAAAlQ,KAAA6P,EAAAI,EAAA5e,EAAA,YAAA4e,EAAA5e,EAAA,KAEiBZ,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,IACpB6e,EAAAlQ,KAAA,OAAAiQ,EAAA5e,EAAA,KAEiBZ,OAAAmQ,EAAA,GAAGqP,EAAA5e,EAAA,KAEpB6e,EAAAlQ,KAAAiQ,EAAAE,WAAAC,KAGAF,EAAApe,OAAA,GACQue,EAAA,EAAM7Q,MAAA,0FACd,IAEWoB,EAAA,EAAO7O,UAAA,GAAAme,GA8ClB,QAAAI,GAAAjhB,GACA,UAAAkhB,GAAAlhB,GAMA,QAAAmhB,GAAAnV,GACIuF,EAAA,EAAatM,OAAA+G,GA4OjB,QAAAoV,GAAAX,GACA,UAAA/W,SAAA,SAAAC,GACA,GAAYvI,OAAAmQ,EAAA,GAAakP,GAEzB,MAAA9W,GAAA8W,EAEA,WAAAY,EAAAC,QAEA,MAAA3X,GAA2BvI,OAAAmQ,EAAA,GAAO8P,EAAAC,QAAAb,GAElC,QAAA/c,KAAAqE,EAAAwZ,mBAAA,CAEA,GAAgBngB,OAAAmQ,EAAA,GAAGxJ,EAAAwZ,mBAAA,kBACnB,MAAA5X,GAA+BvI,OAAAmQ,EAAA,GAAOxJ,EAAAwZ,mBAAAC,eAAAf,GAEtC,IAAqBrf,OAAAmQ,EAAA,GAAGxJ,EAAAwZ,mBAAA,wBACxB,MAAA5X,GAA+BvI,OAAAmQ,EAAA,GAAOxJ,EAAAwZ,mBAAAE,qBAAAhB,IAItC,OAAA/c,KAAAqE,EAAAoB,SAAA,CACA,GAAAuY,GAAA3Z,EAAAoB,SAAA3E,WAAAvB,eACA,6BAAA8D,QAAA,SAAA/E,GACA,GAAAgM,GAAA0T,EAAAxW,QAAAlJ,EACA,IAAAgM,EAAA,EACA,MAAArE,GAAmCvI,OAAAmQ,EAAA,GAAOmQ,EAAAhB,OAAA,EAAA1S,GAAAyS,MAI1C,MAAA9W,GAAA8W,KAIA,QAAAkB,GAAAC,GACA,OACAd,YAAuBc,SA2RvB,QAAAC,GAAA/d,GACA,gBAAAoB,GACA,gBAAAkD,GAEA,QAAA0Z,KAEA,OADAC,MACAxf,EAAA,EAAgCA,EAAAC,UAAAC,OAAuBF,IACvDwf,EAAAxf,GAAAC,UAAAD,EAEA,OAAA6F,GAAAvH,KAAAP,KAAAyhB,EAAA,GAAAA,EAAAtf,OAAA,OAAAiB,KAAAqe,EAAA,GAAAA,EAAA,GAAAje,IAAAxD,KAEA,MARYc,QAAA4gB,EAAA,GAASF,EAAA1Z,GAQrB0Z,GACS5c,IA4uJT,QAAA+c,GAAAC,GACA,MAAAA,GAAAzf,OAAA,EACA,EAEA4B,KAAA8d,IAAAzf,MAAA,KAAAwf,EAAAle,IAAA,SAAArD,GAA6D,MAAAA,GAAAyhB,SAAkB,EAS/E,QAAAC,GAAAC,EAAAC,OACA,KAAAA,IAA8BA,EAAA,EAC9B,IAAArX,GAAA5K,KAAAgS,UAAAiQ,GAAAC,OAAAF,EACA,OAAApX,IAAA,EAAAA,EAAA,EAAAA,EASA,QAAAuX,GAAA1c,EAAA2c,EAAAC,GACA,GAAAC,KACA,QAAAlf,KAAAqC,GAAA,OAAAA,EACA,MAAA6c,EAGA,IAAAC,GAAA9c,EAAA9B,QAAA,gBAEA6e,EAAAT,EAAAxhB,KAAAgiB,EAAAH,EACA,IAAAI,EAAA,EAEA,MAAAF,EAGA,MAAAE,GAAA,IAOA,IALA,GAAAC,GAAA,EACAC,EAAAF,EAAA,EACAG,GAAA,EACAC,GAAA,IAEA,CAoBA,GAlBAD,EAAAZ,EAAAxhB,KAAAgiB,EAAA,cAAAG,GACAE,EAAAb,EAAAxhB,KAAAgiB,EAAA,WAAAG,GACAC,EAAA,IAEAA,EAAAJ,EAAApgB,OAAA,GAIAwgB,EAAAC,GACAH,IACAC,EAAAC,EAAA,GAEAC,EAAAD,IACAF,IACAC,EAAAE,EAAA,GAIA,IAAAH,EAAA,CAEA,GAAAI,GAAAN,EAAAvQ,UAAAwQ,EAAAI,EAAA,GAAAE,MAEAR,GAAAjS,KAAAgS,EAAAQ,GAEA,OAEA,GAAAJ,EAAA,KAAAA,EAAA,EAIA,KAAA1Z,OAAA,kDAIAyZ,EAAAT,EAAAxhB,KAAAgiB,EAAAH,EAAAQ,GAEA,MAAAN,GAOA,QAAAS,GAAAnB,GACA,OAAAvhB,GAAA,EAAmBA,EAAAuhB,EAAAzf,OAAuB9B,IAC1CuhB,EAAAvhB,GAAAyhB,MAAAzhB,EAAA,EACYS,OAAAmQ,EAAA,GAAG2Q,EAAAvhB,GAAA,WACf0iB,EAAAnB,EAAAvhB,GAAA2iB,SAEiBliB,OAAAmQ,EAAA,GAAG2Q,EAAAvhB,GAAA,aACpB0iB,EAAAnB,EAAAvhB,GAAA4iB,UAr/KA/iB,EAAAQ,EAAAiB,EAAA,qBAAAuhB,MAAAhjB,EAAAQ,EAAAiB,EAAA,qBAAAwhB,MAAAjjB,EAAAQ,EAAAiB,EAAA,qBAAAyhB,KAAA,IAuyBAC,GAvyBApS,EAAA/Q,EAAA,GAAAwhB,EAAAxhB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAAAojB,EAAApjB,EAAA,IA6DA0gB,EAAA,SAAA9Y,GAEA,QAAA8Y,GAAAlhB,GACA,GAAAsI,GAAAF,EAAAvH,KAAAP,WAMA,OALAgI,GAAAtI,UACAsI,EAAAub,QAAA,SAAA7iB,GACA,GAAAG,GAAA,GAAAmH,GAAAtI,QAAA2gB,EAAA3f,GAAA,KACA,OAAmBI,QAAAmQ,EAAA,GAAMpQ,EAAAH,IAEzBsH,EASA,MAjBIlH,QAAA4gB,EAAA,GAASd,EAAA9Y,GAUb8Y,EAAArf,UAAA8K,MAAA,SAAAvI,GACA,GAAAkE,GAAAhI,IACA,OAAA8H,GAAAvG,UAAA8K,MAAA9L,KAAAP,KAAA8D,GAAAoF,KAAA,SAAAxI,GACA,GAAAG,GAAA,GAAAmH,GAAAtI,QAAA2gB,EAAA3f,GAAA,KACA,OAAmBI,QAAAmQ,EAAA,GAAMpQ,EAAAH,MAGzBkgB,GACE0C,EAAA,GAmCFE,GAlCA,SAAA1b,GAEA,QAAA2b,GAAA/jB,GACA,GAAAsI,GAAAF,EAAAvH,KAAAP,WAQA,OAPAgI,GAAAtI,UACAsI,EAAAub,QAAA,SAAA7iB,GACA,MAAAA,GAAAgD,IAAA,SAAAuB,GACA,GAAApE,GAAA,GAAAmH,GAAAtI,QAAA2gB,EAAApb,GAAA,KACA,OAAuBnE,QAAAmQ,EAAA,GAAMpQ,EAAAoE,MAG7B+C,EAVIlH,OAAA4gB,EAAA,GAAS+B,EAAA3b,GAYb2b,EAAAliB,UAAA8K,MAAA,SAAAvI,GACA,GAAAkE,GAAAhI,IACA,OAAA8H,GAAAvG,UAAA8K,MAAA9L,KAAAP,KAAA8D,GAAAoF,KAAA,SAAAxI,GACA,MAAAA,GAAAgD,IAAA,SAAAuB,GACA,GAAApE,GAAA,GAAAmH,GAAAtI,QAAA2gB,EAAApb,GAAA,KACA,OAAuBnE,QAAAmQ,EAAA,GAAMpQ,EAAAoE,SAK3Bqe,EAAA,GAWF,WACA,QAAAE,MAyCA,MAvCA1iB,QAAAC,eAAAyiB,EAAAjiB,UAAA,WACAL,IAAA,WACA,GAAAwiB,GAAyBzS,EAAA,EAAa/P,IAAA,KACtC,YAAAkC,KAAAsgB,OAAAtgB,KAAAsgB,EAAAld,QACAkd,EAAAld,YAIAvF,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyiB,EAAAjiB,UAAA,WACAL,IAAA,WACA,GAAAwiB,GAAyBzS,EAAA,EAAa/P,IAAA,KACtC,YAAAkC,KAAAsgB,OAAAtgB,KAAAsgB,EAAA1C,QACA0C,EAAA1C,YAE6B5d,KAAb6N,EAAA,EAAazI,aAA2C,OAAbyI,EAAA,EAAazI,YACjDyI,EAAA,EAAazI,YAAAE,YAAAib,IAAAC,YAEpC,MAEA3iB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAyiB,EAAAjiB,UAAA,sBACAL,IAAA,WACA,GAAAwiB,GAAyBzS,EAAA,EAAa/P,IAAA,KAEtC,YAAAkC,KAAAsgB,OAAAtgB,KAAAsgB,EAAAG,mBACAH,EAAAG,mBAGA,WAAoC,UAAY5S,GAAA,IAGhDhQ,YAAA,EACAD,cAAA,IAEAwiB,MAEAzC,EAAA,GAAAyC,GAEAM,EAAA,WACA,QAAAA,MAEA,MAAAA,MAGAC,EAAA,GAAAjd,KACAkd,EAAA,WACA,QAAAA,GAAAC,EAAAC,OACA,KAAAA,IAAkCA,EAAAH,GAClC/jB,KAAAikB,cACAjkB,KAAAkkB,WAsCA,MApCAF,GAAAziB,UAAA4iB,UAAA,SAAAC,GACA,GAAApc,GAAAhI,KACAqkB,EAAArkB,KAAAkkB,SAAAhjB,IAAAkjB,EACA,QAAAhhB,KAAAihB,EAAA,CAEA,GADA,GAAA3hB,MACA2hB,EAAA/X,WACA,MAAAlD,SAAAC,QAAAgb,EAAA3d,OAGA,GAAApB,GAAkBxE,OAAAmQ,EAAA,GAAOmT,EAAA,qBACzB5d,GACA8d,OAAA,iCACAC,eAAA,+CAEA,OAAAvkB,MAAAikB,YAAAO,SAAAlf,GACAmf,MAAA,WACAC,YAAA,cACAle,QAAqB1F,OAAAmQ,EAAA,GAAMzK,EAAAua,EAAAva,SAAA,GAC3BzE,OAAA,SACSmH,KAAA,SAAAoJ,GAET,OADA,GAA6BgR,GAAA,GAC7BjX,MAAAiG,GAAApJ,KAAA,SAAAxI,GAA6D,MAAAA,GAAAikB,6BACpDzb,KAAA,SAAA0E,GACT,GAAAgX,GAAA,GAAAd,EACAc,GAAAle,MAAAkH,EAAAiX,eACA,IAAAC,GAAAlX,EAAAmX,yBACAzY,EAAA,GAAA5J,KAIA,OAHA4J,GAAApJ,QAAAoJ,EAAAnJ,UAAA,IAAA2hB,GACAF,EAAAtY,aACAtE,EAAAkc,SAAA/c,IAAAid,EAAAQ,GACAA,EAAAle,SAGAsd,EAAAziB,UAAAkM,MAAA,WACAzN,KAAAkkB,SAAAzW,SAEAuW,KAGAgB,EAAA,WACA,QAAAA,GAAAC,OACA,KAAAA,IAA+BA,EAAAlE,EAAA8C,sBAC/B7jB,KAAAilB,QACAjlB,KAAAklB,aAAA,GAAAlB,GAAAhkB,MAuHA,MArHAglB,GAAAzjB,UAAAoG,MAAA,SAAArC,EAAAsC,GACA,GAAAI,GAAAhI,SACA,KAAA4H,IAAiCA,KACjC,IAAAud,GAAmBrkB,OAAAmQ,EAAA,GAAMrJ,GAAW6c,MAAA,WAAAC,YAAA,gBAAgD,GACpFle,EAAA,GAAA0B,QAoBA,OAlBQpH,QAAAmQ,EAAA,GAAYzK,EAAAua,EAAAva,SAEZ1F,OAAAmQ,EAAA,GAAYzK,EAAAoB,EAAApB,SAEpBA,EAAA4e,IAAA,WACA5e,EAAAG,OAAA,6BAEAH,EAAA4e,IAAA,iBACA5e,EAAAG,OAAA,+DAEAH,EAAA4e,IAAA,8BACA5e,EAAAG,OAAA,sDAEAH,EAAA4e,IAAA,eAEA5e,EAAAG,OAAA,uDAEAwe,EAAerkB,OAAAmQ,EAAA,GAAMkU,GAAQ3e,aAC7B2e,EAAApjB,QAAA,QAAAojB,EAAApjB,OAAAsjB,eAEA7e,EAAA4e,IAAA,oBAAA5e,EAAA4e,IAAA,iBAQAplB,KAAAwkB,SAAAlf,EAAA6f,GAPAnlB,KAAAklB,aAAAf,UAAAjE,EAAA5a,IACA4D,KAAA,SAAAoc,GAEA,MADA9e,GAAAG,OAAA,kBAAA2e,GACAtd,EAAAwc,SAAAlf,EAAA6f,MAMAH,EAAAzjB,UAAAijB,SAAA,SAAAlf,EAAAsC,GACA,GAAAI,GAAAhI,SACA,KAAA4H,IAAiCA,KAEjC,IAAA2d,GAAA,GAAArd,QACQpH,QAAAmQ,EAAA,GAAYsU,EAAA3d,EAAApB,SACpBoB,EAAkB9G,OAAAmQ,EAAA,GAAMrJ,GAAWpB,QAAA+e,GACnC,IAAAC,GAAA,SAAAC,GAEA,GAAAC,GAAA,SAAApT,GACA,GAAAqT,EACArT,GAAA9L,QAAA4e,IAAA,eAEAO,EAAAhI,SAAArL,EAAA9L,QAAAtF,IAAA,oBAIAykB,EAAAF,EAAAE,MAEAF,EAAAE,OAAA,GAEAF,EAAAG,WAEAH,EAAAI,YAAAJ,EAAAG,SACAH,EAAAnc,OAAAP,MAAA,yBAAA0c,EAAAI,WAAA,oCAAAvT,EAAAb,OAAA,KAAAa,EAAAZ,aAIAxE,WAA+BpM,OAAAmQ,EAAA,GAAcjJ,EAAAwd,EAAAC,GAAAE,GAI7C3d,GAAAid,MAAAtd,MAAArC,EAAAsC,GAAAsB,KAAA,SAAAoJ,GACA,MAAAA,EAAAb,OAEAiU,EAAApT,GAGAmT,EAAApc,QAAAiJ,KAEazI,MAAA,SAAAyI,GACb,MAAAA,EAAAb,OAEAiU,EAAApT,GAGAmT,EAAAnc,OAAAgJ,KAIA,WAAAlJ,SAAA,SAAAC,EAAAC,GACA,GAAAwc,IACAF,SAAA,EACAD,MAAA,IACArc,SACAD,UACAwc,WAAA,EAEAL,GAAAjlB,KAAAyH,EAAA8d,MAGAd,EAAAzjB,UAAAL,IAAA,SAAAoE,EAAAsC,OACA,KAAAA,IAAiCA,KACjC,IAAAud,GAAmBrkB,OAAAmQ,EAAA,GAAMrJ,GAAW7F,OAAA,OACpC,OAAA/B,MAAA2H,MAAArC,EAAA6f,IAEAH,EAAAzjB,UAAAwkB,KAAA,SAAAzgB,EAAAsC,OACA,KAAAA,IAAiCA,KACjC,IAAAud,GAAmBrkB,OAAAmQ,EAAA,GAAMrJ,GAAW7F,OAAA,QACpC,OAAA/B,MAAA2H,MAAArC,EAAA6f,IAEAH,EAAAzjB,UAAAykB,MAAA,SAAA1gB,EAAAsC,OACA,KAAAA,IAAiCA,KACjC,IAAAud,GAAmBrkB,OAAAmQ,EAAA,GAAMrJ,GAAW7F,OAAA,SACpC,OAAA/B,MAAA2H,MAAArC,EAAA6f,IAEAH,EAAAzjB,UAAAgL,OAAA,SAAAjH,EAAAsC,OACA,KAAAA,IAAiCA,KACjC,IAAAud,GAAmBrkB,OAAAmQ,EAAA,GAAMrJ,GAAW7F,OAAA,UACpC,OAAA/B,MAAA2H,MAAArC,EAAA6f,IAEAH,KAGAvd,MAAA,KAAA7F,IACA,mBAAA7B,WACA,mBAAA2H,kBAmDAue,EAAA,SAAAne,GASA,QAAAme,GAAAjF,EAAAxd,GACA,GAAAwE,GAAAF,EAAAvH,KAAAP,WAEA,IADAgI,EAAAke,eAAA,EACA,gBAAAlF,GAGA,GAAgBlgB,OAAAmQ,EAAA,GAAa+P,MAAAmF,YAAA,OAC7Bne,EAAAoe,WAAApF,EACAhZ,EAAAqe,KAA6BvlB,OAAAmQ,EAAA,GAAO+P,EAAAxd,OAEpC,IAAAwd,EAAAmF,YAAA,KAAAnF,EAAAmF,YAAA,MAEA,GAAAzY,GAAAsT,EAAAmF,YAAA,IACAne,GAAAoe,WAAApF,EAAA1Q,MAAA,EAAA5C,GACAlK,EAAuB1C,OAAAmQ,EAAA,GAAO+P,EAAA1Q,MAAA5C,GAAAlK,GAC9BwE,EAAAqe,KAA6BvlB,OAAAmQ,EAAA,GAAOjJ,EAAAoe,WAAA5iB,OAEpC,CAEA,GAAAkK,GAAAsT,EAAAmF,YAAA,IACAne,GAAAoe,WAAApF,EAAA1Q,MAAA,EAAA5C,GACA1F,EAAAqe,KAA6BvlB,OAAAmQ,EAAA,GAAO+P,EAAAxd,OAGpC,CACAwE,EAAArD,OAAAqc,EAAAxd,EACA,IAAAoB,GAAAoc,EAAAjB,MAAA7e,IAAA,eACAkC,KAAAwB,GACAoD,EAAA+X,MAAA5Y,IAAA,UAAAvC,GAGA,MAAAoD,GA6HA,MApKIlH,QAAA4gB,EAAA,GAASuE,EAAAne,GA8Cbme,EAAA1kB,UAAA+kB,GAAA,SAAA5mB,GACA,GAAAmB,GAAA,GAAAnB,GAAAM,KAAAqmB,KAAA,KACA,OAAevlB,QAAAmQ,EAAA,GAAMpQ,EAAAb,MAAA,IAMrBimB,EAAA1kB,UAAAglB,cAAA,WACA,GAAAC,GAAA,GAAA1f,KAAA9G,KAAA+f,OACAza,EAAAtF,KAAAymB,QAAA9iB,QAAA,8BAAAkC,EAAA6gB,EAAAhgB,GAGA,MAFYga,GAAA,EAAM7Q,MAAA,0CAAAhK,EAAA,cAAA6gB,EAAA,WAAAhgB,EAAA,GAClB8f,EAAArf,IAAAuf,EAAA,IAAAhgB,EAAA,KACAggB,GAEA,IAAAF,EAAAhZ,KAAA,GAEAlI,GAAA,IADAA,EAAAsF,QAAA,iBACAnG,MAAAkJ,KAAA6Y,GAAA9iB,IAAA,SAAAuB,GAA2E,MAAAA,GAAA,OAAAA,EAAA,KAA4BrB,KAAA,KAEvG,MAAA0B,IAOA2gB,EAAA1kB,UAAAolB,OAAA,WAEA,OADAC,MACA3kB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C2kB,EAAA3kB,GAAAC,UAAAD,EAKA,OAHA2kB,GAAAzkB,OAAA,GACAnC,KAAA+f,MAAA5Y,IAAA,UAAAyf,EAAAhjB,KAAA,MAEA5D,MAOAimB,EAAA1kB,UAAAslB,OAAA,WAEA,OADAC,MACA7kB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C6kB,EAAA7kB,GAAAC,UAAAD,EAKA,OAHA6kB,GAAA3kB,OAAA,GACAnC,KAAA+f,MAAA5Y,IAAA,UAAA2f,EAAAljB,KAAA,MAEA5D,MAOAimB,EAAA1kB,UAAAwlB,UAAA,SAAArnB,EAAAshB,EAAAxd,EAAAwjB,OACA,KAAAhG,IAAiCA,EAAAhhB,KAAAinB,UACjC,IAAAvL,GAAA,GAAAhc,GAAAshB,EAAAxd,GAAA0jB,cAAAlnB,MACAoF,EAAA,SAOA,OANApF,MAAA+f,MAAAqF,IAAAhgB,IACAsW,EAAAqE,MAAA5Y,IAAA/B,EAAApF,KAAA+f,MAAA7e,IAAAkE,QAEAhC,KAAA4jB,IACAtL,IAAAyL,QAAAH,IAEAtL,GAQAuK,EAAA1kB,UAAA6lB,MAAA,SAAA1nB,EAAA2nB,EAAAC,OACA,KAAAA,IAAsCA,GAAA,EACtC,IAAAF,GAAA,GAAA1nB,GAAAM,KAAAqnB,GAAAH,cAAAlnB,MACAoF,EAAA,SAOA,OANApF,MAAA+f,MAAAqF,IAAAhgB,IACAgiB,EAAArH,MAAA5Y,IAAA/B,EAAApF,KAAA+f,MAAA7e,IAAAkE,IAEAkiB,GAAAtnB,KAAAunB,WACAH,IAAAD,QAAAnnB,KAAAgnB,QAEAI,GAUAnB,EAAA1kB,UAAAimB,iBAAA,SAAAC,EAAA7f,EAAAqD,EAAAyc,GACA,GAAA1f,GAAAhI,SACA,KAAA4H,IAAiCA,KACjC,IAAA+f,GAAA3nB,KAAAunB,SAAAvnB,KAAA4nB,qBAAA,YACA,OAAA9G,GAAA9gB,KAAAumB,iBAAArd,KAAA,SAAA5D,GAiBA,MAhBYxE,QAAAmQ,EAAA,GAAYrJ,EAAAI,EAAAiY,WAGxB+G,MAAAhf,EAAAgf,MACAa,gBAAAF,EACAG,eAAA9f,EAAA+f,gBACAC,cAAA,WAA4C,UAAAhD,IAC5CiD,UAAAjgB,EAAAuf,SACAW,SAAAlgB,EAAAke,eAAAle,EAAAmgB,aAAA,SAAA5iB,KAAAkiB,GACA7f,UACAqD,SACAyc,WACAU,mBAAA9iB,EACA+iB,UAA2BvnB,OAAAmQ,EAAA,KAC3BwW,WAKAxB,GACE3C,EAAA,GAKFgF,EAAA,SAAAxgB,GAEA,QAAAwgB,KACA,cAAAxgB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA2CA,MA7CIc,QAAA4gB,EAAA,GAAS4G,EAAAxgB,GASbwgB,EAAA/mB,UAAAgC,OAAA,SAAAA,GAEA,MADAvD,MAAA+f,MAAA5Y,IAAA,UAAA5D,GACAvD,MAQAsoB,EAAA/mB,UAAAgnB,QAAA,SAAAA,EAAAC,OACA,KAAAA,IAAmCA,GAAA,EACnC,IAAA3nB,GAAA,WACAkf,EAAA/f,KAAA+f,MAAAqF,IAAAvkB,GAAAb,KAAA+f,MAAA7e,IAAAL,GAAAyV,MAAA,OAGA,OAFAyJ,GAAA1P,KAAAkY,EAAA,KAAAC,EAAA,eACAxoB,KAAA+f,MAAA5Y,IAAAtG,EAAAkf,EAAAnc,KAAA,MACA5D,MAOAsoB,EAAA/mB,UAAAknB,KAAA,SAAAA,GAEA,MADAzoB,MAAA+f,MAAA5Y,IAAA,QAAAshB,EAAAvkB,YACAlE,MAOAsoB,EAAA/mB,UAAAmnB,IAAA,SAAAA,GAEA,MADA1oB,MAAA+f,MAAA5Y,IAAA,OAAAuhB,EAAAxkB,YACAlE,MAEAsoB,GACCrC,GAKD0C,EAAA,SAAA7gB,GAEA,QAAA6gB,KACA,cAAA7gB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA0CA,MA5CIc,QAAA4gB,EAAA,GAASiH,EAAA7gB,GAUb6gB,EAAApnB,UAAAqnB,QAAA,SAAAtH,EAAAuH,GACA,GAAA7gB,GAAAhI,IACA,iBAAA8oB,GAAiC,MAAA9gB,GAAA+gB,UACjCzX,KAAkBxQ,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAAC,GAAAwH,IAC5BtiB,SACAwiB,gBAAA,WAES9f,KAAA,SAAAxI,GAAqB,MAAAmoB,GAAAnoB,EAAAooB,OAM9BH,EAAApnB,UAAA0nB,QAAA,WACA,MAAAjpB,MAAA+oB,UACAviB,SACAwiB,gBAAA,aASAL,EAAApnB,UAAA2nB,gBAAA,SAAAC,GAEA,WADA,KAAAA,IAA8BA,EAAA,KAC9BnpB,KAAA+oB,UACAviB,SACA4iB,WAAAD,EACAH,gBAAA,aAIAL,GACC1C,GA0BDoD,EAAA,SAAAvhB,GAEA,QAAAuhB,KACA,cAAAvhB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS2H,EAAAvhB,GAIbwhB,EAAAD,EAMAA,EAAA9nB,UAAAgoB,QAAA,SAAAC,GACA,UAAAC,GAAAzpB,KAAA,WAAAwpB,EAAA,MAOAH,EAAA9nB,UAAAmoB,WAAA,SAAA5O,GACA,UAAA2O,GAAAzpB,KAAA,eAAA8a,EAAA,OAOAuO,EAAA9nB,UAAAooB,eAAA,SAAAC,GACA,GAAAC,GAAA,GAAAJ,GAAAzpB,KAEA,OADA6pB,GAAAC,OAAA,UAAA1S,mBAAAwS,GAAA,MACAC,GAOAR,EAAA9nB,UAAAwoB,WAAA,SAAAP,GACA,MAAAxpB,MAAAonB,MAAAkC,EAAA,cAAAE,EAAA,KAAAT,YAOAM,EAAA9nB,UAAAyoB,kBAAA,SAAAJ,GACA,GAAA/oB,GAAAb,KAAAonB,MAAAkC,EAAA,wBAEA,OADAzoB,GAAAkf,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACA/oB,EAAAkoB,YAQAM,EAAA9nB,UAAA0oB,IAAA,SAAAL,GACA,GAAA5hB,GAAAhI,IACA,OAAAA,MAAAonB,MAAAkC,EAAA,MAAAP,UACAzX,KAAkBxQ,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,YAAuB6I,UAAAN,OAC1C1gB,KAAA,WAAoB,MAAAlB,GAAA2hB,eAAAC,KAE7B,IAAAN,EAIA,OAHAD,GAAAC,EAA8BxoB,OAAA4gB,EAAA,IAC9BH,EAAA,cACA8H,IAECf,GAKDmB,EAAA,SAAA3hB,GAEA,QAAA2hB,KACA,GAAAzhB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAYA,OANAgI,GAAAmiB,OAAAniB,EAAA4gB,QAAA,mBAAAhb,GAAiE,OAAUA,OAAAwc,KAAApiB,KAK3EA,EAAAuE,OAAAvE,EAAAihB,QACAjhB,EAaA,MA3BIlH,QAAA4gB,EAAA,GAAS+H,EAAA3hB,GAgBbhH,OAAAC,eAAA0oB,EAAAloB,UAAA,UAKAL,IAAA,WACA,UAAAmpB,GAAArqB,KAAA,WAEAiB,YAAA,EACAD,cAAA,IAEAyoB,GACCd,GAID2B,EAAA,SAAAxiB,GAEA,QAAAwiB,KACA,cAAAxiB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAAS4I,EAAAxiB,GAIbwiB,EAAkBxpB,OAAA4gB,EAAA,IAClBH,EAAA,gBACA+I,IAEC3B,IAOD,SAAAtF,GACAA,IAAA,eACAA,IAAA,eACAA,IAAA,uCACAA,IAAA,iCACAA,IAAA,qCACAA,IAAA,eACCA,UAKD,IAyTAkH,GAzTAF,EAAA,SAAAviB,GAEA,QAAAuiB,KACA,cAAAviB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS2I,EAAAviB,GAIb0iB,EAAAH,EAMAA,EAAA9oB,UAAAgoB,QAAA,SAAAC,GACA,GAAAiB,GAAA,GAAAC,GAAA1qB,KAEA,OADAyqB,GAAAX,OAAA,IAAAN,EAAA,KACAiB,GAOAJ,EAAA9oB,UAAA0oB,IAAA,SAAAU,GACA,GAAA3iB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,YAAAsJ,GACjC,OAAA3qB,MAAA+oB,UAA8BzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC/C,OACAA,OACAid,MAAA7iB,EAAAuhB,QAAA3b,EAAAkd,QASAT,EAAA9oB,UAAAwpB,UAAA,SAAAC,GACA,UAAAN,GAAA1qB,KAAA,cAAAgrB,EAAA,OAOAX,EAAA9oB,UAAAwoB,WAAA,SAAAP,GACA,MAAAxpB,MAAAonB,MAAAoD,EAAA,eAAAhB,EAAA,MAAAT,YAOAsB,EAAA9oB,UAAAyoB,kBAAA,SAAAJ,GACA,MAAA5pB,MAAAonB,MAAAoD,EAAA,sBAAAZ,EAAA,MAAAb,WAEA,IAAAyB,EAIA,OAHAH,GAAAG,EAAgC1pB,OAAA4gB,EAAA,IAChCH,EAAA,eACA8I,IAEC/B,GAKDoC,EAAA,SAAA5iB,GAEA,QAAA4iB,KACA,GAAA1iB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAYA,OAXAgI,GAAAmiB,OAAAniB,EAAA4gB,QAAA,oBAAAloB,EAAAe,GACA,GAAAwpB,GAAAjjB,CAKA,OAJgBlH,QAAAmQ,EAAA,GAAGxP,EAAA,WAEnBwpB,EAAAjjB,EAAA+e,UAAA2D,EAAA1iB,EAAAif,UAAA,cAAAxlB,EAAA,cAGAmM,KAAAlN,EACAmqB,MAAAI,KAGAjjB,EAaA,MA3BIlH,QAAA4gB,EAAA,GAASgJ,EAAA5iB,GAgBbhH,OAAAC,eAAA2pB,EAAAnpB,UAAA,SAKAL,IAAA,WACA,UAAAmoB,GAAArpB,KAAA,UAEAiB,YAAA,EACAD,cAAA,IAEA0pB,GACC/B,GAMDuC,EAAA,SAAApjB,GAEA,QAAAojB,KACA,cAAApjB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASwJ,EAAApjB,GAIbqjB,EAAAD,EAMAA,EAAA3pB,UAAAgoB,QAAA,SAAAC,GACA,GAAA4B,GAAA,GAAAC,GAAArrB,KAEA,OADAorB,GAAAtB,OAAA,IAAAN,EAAA,KACA4B,GASAF,EAAA3pB,UAAA0oB,IAAA,SAAAqB,EAAAC,GACA,MAAAvrB,MAAAonB,MAAA+D,EAAA,iCAAAG,EAAA,eAAAC,EAAA,KAAAxC,YASAmC,EAAA3pB,UAAAiqB,OAAA,SAAAF,EAAAC,GACA,MAAAvrB,MAAAonB,MAAA+D,EAAA,oCAAAG,EAAA,eAAAC,EAAA,KAAAxC,WAEA,IAAAoC,EAIA,OAHAD,GAAAC,EAA0CrqB,OAAA4gB,EAAA,IAC1CH,EAAA,oBACA2J,IAEC5C,GAKD+C,EAAA,SAAAvjB,GAEA,QAAAujB,KACA,GAAArjB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAMA,OADAgI,GAAAuE,OAAAvE,EAAAihB,QACAjhB,EAwBA,MAhCIlH,QAAA4gB,EAAA,GAAS2J,EAAAvjB,GAUbhH,OAAAC,eAAAsqB,EAAA9pB,UAAA,UAKAL,IAAA,WACA,UAAAmpB,GAAArqB,KAAA,WAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAsqB,EAAA9pB,UAAA,YAKAL,IAAA,WACA,UAAAuqB,GAAAzrB,OAEAiB,YAAA,EACAD,cAAA,IAEAqqB,GACC1C,GAKD+C,EAAA,SAAA5jB,GAEA,QAAA4jB,KACA,cAAA5jB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAyDA,MA3DIc,QAAA4gB,EAAA,GAASgK,EAAA5jB,GAUb4jB,EAAAnqB,UAAAgoB,QAAA,SAAAC,GACA,UAAAmC,GAAA3rB,KAAA,WAAAwpB,EAAA,MAQAkC,EAAAnqB,UAAAwpB,UAAA,SAAApqB,GACA,UAAAgrB,GAAA3rB,KAAA,cAAAW,EAAA,OAQA+qB,EAAAnqB,UAAAqqB,UAAA,SAAAC,GACA,UAAAF,GAAA3rB,KAAA,aAAA6rB,EAAA,MAWAH,EAAAnqB,UAAA0oB,IAAA,SAAAtpB,EAAAmrB,EAAAhK,EAAAiK,GACA,GAAA/jB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,IACvB+a,gBAA6BlrB,OAAAmQ,EAAA,IAAQuP,YAAcc,KAAA,uBAA+ByK,GAClFE,YAAAH,EACAI,KAAAvrB,EACAwrB,MAAArK,EACAtB,YAAyBc,KAAA,sBAEzB,OAAAthB,MAAA+oB,UAA8BzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC/C,OACAA,OACAwe,WAAApkB,EAAAuhB,QAAA3b,EAAAkd,QAIAY,EAAsB5qB,OAAA4gB,EAAA,IACtBH,EAAA,oBACAmK,IAECpD,GAKDqD,EAAA,SAAA7jB,GAEA,QAAA6jB,KACA,GAAA3jB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAMA,OADAgI,GAAAuE,OAAAvE,EAAAihB,QACAjhB,EAiCA,MAzCIlH,QAAA4gB,EAAA,GAASiK,EAAA7jB,GAiBb6jB,EAAApqB,UAAA4oB,OAAA,SAAAQ,GACA,GAAA3iB,GAAAhI,KACA0B,GAAA,uBACe0B,KAAHtC,OAAAmQ,EAAA,GAAG0Z,EAAAjpB,EAAA,MACfipB,EAAAjpB,EAAA,IAA+BZ,OAAAmQ,EAAA,IAAQuP,YAAcc,KAAA,MAAA5f,EAAA,KAAuBipB,EAAAjpB,EAAA,KAE5E,IAAAkpB,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,qBAAAsJ,GACjC,OAAA3qB,MAAA+oB,UACAzX,KAAAsZ,EACApkB,SACAwiB,gBAAA,WAES9f,KAAA,SAAA0E,GACT,GAAAye,GAAArkB,CACA,IAAgBlH,OAAAmQ,EAAA,GAAG0Z,EAAA,SAEnB0B,EADArkB,EAAA+e,UAAA2E,EAAA1jB,EAAAif,UAAA,IACA8D,UAAAJ,EAAA,MAEA,OACA/c,OACAwe,WAAAC,MAIAV,GACChD,GAKD8C,EAAA,SAAA3jB,GAEA,QAAA2jB,KACA,cAAA3jB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAAS+J,EAAA3jB,GAIb2jB,EAA6B3qB,OAAA4gB,EAAA,IAC7BH,EAAA,2BACAkK,IAECnD,IAMD,SAAAiC,GACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,cACCA,UAID,IAAA+B,IACA,SAAAA,GACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,eACAA,IAAA,uBACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,wBACAA,IAAA,cACAA,IAAA,wBACAA,IAAA,0BACAA,IAAA,gBACAA,IAAA,8BACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,gBACAA,IAAA,8BACAA,IAAA,gBACAA,IAAA,4BACAA,IAAA,wCACAA,IAAA,sBACAA,IAAA,kBACAA,IAAA,kCACAA,IAAA,kCACAA,IAAA,8BACAA,IAAA,oCACAA,IAAA,8BACAA,IAAA,2CACCA,UACD,IAAAC,IACA,SAAAA,GACAA,IAAA,uBACAA,IAAA,wBACCA,UAID,IAAAC,IACA,SAAAA,GAIAA,IAAA,+BAIAA,IAAA,qDAIAA,IAAA,2CAIAA,IAAA,+CAIAA,IAAA,uDAIAA,IAAA,kDAIAA,IAAA,yDACCA,UACD,IAAAC,IACA,SAAAA,GACAA,IAAA,yBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,eACAA,IAAA,mBACAA,IAAA,yCACAA,IAAA,sCACAA,IAAA,gDACAA,IAAA,8CACAA,IAAA,sCACAA,IAAA,gCACAA,IAAA,sBACAA,IAAA,yBACCA,UACD,IAAAC,IACA,SAAAA,GACAA,IAAA,yBACAA,IAAA,kBACCA,UACD,IAAAC,IACA,SAAAA,GAIAA,IAAA,yBAIAA,IAAA,iCAIAA,IAAA,+BAKAA,IAAA,iCAKAA,IAAA,qCAIAA,IAAA,+BAIAA,IAAA,yBAIAA,IAAA,+BAIAA,IAAA,mCAIAA,IAAA,mCAIAA,IAAA,8CAIAA,IAAA,8BAIAA,IAAA,kCAKAA,IAAA,0DAIAA,IAAA,gBAIAA,IAAA,0BAKAA,IAAA,gDAIAA,IAAA,8CAIAA,IAAA,wCAIAA,IAAA,kCAIAA,IAAA,kCAIAA,IAAA,kCAIAA,IAAA,gCAKAA,IAAA,0CAKAA,IAAA,0CAIAA,IAAA,oCAIAA,IAAA,kDAIAA,IAAA,oDAUAA,IAAA,0BAKAA,IAAA,kEAKAA,IAAA,gDAIAA,IAAA,kCAIAA,IAAA,gCAIAA,IAAA,gCAIAA,IAAA,oCAIAA,IAAA,gDAIAA,IAAA,yBACCA,UAKD,IAAAC,IACA,SAAAvJ,GAIAA,IAAA,eAIAA,IAAA,eAIAA,IAAA,uCAIAA,IAAA,iCAIAA,IAAA,qCAIAA,IAAA,eACCuJ,UAMD,IAAAC,IACA,SAAAA,GAIAA,IAAA,eAIAA,IAAA,+BAIAA,IAAA,qBAIAA,IAAA,2CAIAA,IAAA,+BAIAA,IAAA,eACCA,UAED,IAAAC,IACA,SAAAA,GACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,6BACAA,IAAA,6BACAA,IAAA,kCACCA,UACD,IAAAC,IACA,SAAAA,GACAA,IAAA,sBACAA,IAAA,6BACAA,IAAA,2BACAA,IAAA,2BACAA,IAAA,eACAA,IAAA,6BACAA,IAAA,yCACAA,IAAA,uBACAA,IAAA,mCACAA,IAAA,qBACAA,IAAA,iCACAA,IAAA,gCACAA,IAAA,mCACCA,UACD,IAAAC,IACA,SAAAA,GAIAA,IAAA,iCAIAA,IAAA,mBAIAA,IAAA,uCAIAA,IAAA,uCAIAA,IAAA,iCAIAA,IAAA,iCAIAA,IAAA,wBACCA,UAID,IAAAC,IACA,SAAAA,GACAA,IAAA,eACAA,IAAA,eACAA,IAAA,eACAA,IAAA,kBACCA,UACD,IAAAC,IACA,SAAAA,GAIAA,IAAA,iDAIAA,IAAA,+CAIAA,IAAA,sCAIAA,IAAA,gCAIAA,IAAA,gEAIAA,IAAA,8BAIAA,IAAA,wCAIAA,IAAA,wDAIAA,IAAA,4CAIAA,IAAA,4CAIAA,IAAA,yDACCA,UACD,IAAAC,KACA,SAAAA,GACAA,IAAA,qBACAA,IAAA,eACAA,IAAA,mBACAA,IAAA,eACAA,IAAA,eACAA,IAAA,aACAA,IAAA,cACCA,YACD,IAAAC,KACA,SAAAA,GACAA,IAAA,eACAA,IAAA,yBACAA,IAAA,0BACCA,YACD,IAAAC,KACA,SAAAA,GACAA,IAAA,eACAA,IAAA,6BACAA,IAAA,uBACAA,IAAA,2BACAA,IAAA,uBACAA,IAAA,sCACAA,IAAA,wCACAA,IAAA,wCACAA,IAAA,+BACAA,IAAA,2BACAA,IAAA,mCACAA,IAAA,kCACAA,IAAA,kDACAA,IAAA,4CACAA,IAAA,8BACAA,IAAA,yCACAA,IAAA,kEACCA,YACD,IAAAC,KACA,SAAAA,GACAA,IAAA,qCACAA,IAAA,4BACCA,YACD,IAAAC,KACA,SAAAA,GACAA,IAAA,uBACAA,IAAA,gCACCA,YAID,IAAAC,KACA,SAAAA,GAIAA,IAAA,6BAIAA,IAAA,uBAIAA,IAAA,uBAIAA,IAAA,mBAIAA,IAAA,wBACCA,YAED,IA69GAC,IA79GAC,GAAA,SAAA5lB,GAEA,QAAA4lB,KACA,cAAA5lB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAmHA,MArHIc,QAAA4gB,EAAA,GAASgM,EAAA5lB,GAIbhH,OAAAC,eAAA2sB,EAAAnsB,UAAA,mBAKAL,IAAA,WACA,UAAAgqB,GAAAlrB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA2sB,EAAAnsB,UAAA,sCAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,uCAEAiB,YAAA,EACAD,cAAA,IAOA0sB,EAAAnsB,UAAAosB,4BAAA,SAAA/D,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAnB,EAAA,qCAEA,OADA2H,GAAA7N,MAAA5Y,IAAA,YAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,MAAAgI,KAAA,SAAApF,GAEA,MAAmBhD,QAAAmQ,EAAA,GAAGnN,EAAA,+BAAAA,EAAA+pB,4BAAA/pB,KAMtB4pB,EAAAnsB,UAAAusB,mCAAA,WACA,GAAA9lB,GAAAhI,IAGA,OADA,IAAA2oB,GAAA,0BACAhC,OAAA,aAAAzlB,MAAAgI,KAAA,SAAAkhB,GACA,MAAApiB,GAAA2lB,4BAAAvD,EAAAF,cASAwD,EAAAnsB,UAAAwsB,qBAAA,SAAAC,EAAAC,GAGA,WAFA,KAAAD,IAA6CA,GAAA,OAC7C,KAAAC,IAAwCA,GAAA,GACxCjuB,KAAAonB,MAAAsG,EAAA,4CAAAM,EAAA,oBAAAC,EAAA,KAAAlF,YAMA2E,EAAAnsB,UAAA2sB,qBAAA,WACA,MAAAluB,MAAAonB,MAAAsG,EAAA,wBAAA3E,YAQA2E,EAAAnsB,UAAA4sB,mBAAA,SAAAvE,EAAAwE,GACA,GAAApmB,GAAAhI,IACA,OAAAA,MAAA2tB,4BAAA/D,GAAA1gB,KAAA,SAAAmlB,GACA,MAAArmB,GAAAsmB,eAAAD,EAAAD,MAQAV,EAAAnsB,UAAAgtB,0BAAA,SAAAH,GACA,GAAApmB,GAAAhI,IACA,OAAAA,MAAA8tB,qCAAA5kB,KAAA,SAAAmlB,GACA,MAAArmB,GAAAsmB,eAAAD,EAAAD,MAUAV,EAAAnsB,UAAA+sB,eAAA,SAAA5nB,EAAA8nB,GACA,IAAAA,EACA,QAEA,IAAAA,IAAA7B,EAAA8B,SACA,qBAAA/nB,EAAAgoB,OAAA,QAAAhoB,EAAAioB,GAEAH,IAAA,CACA,IAAAI,GAAA,CACA,OAAAJ,IAAA,GAAAA,EAAA,IACAI,IAAAJ,EACA,IAAA9nB,EAAAioB,IAAAC,IAEAJ,GAAA,IAAAA,EAAA,KACAI,IAAAJ,EAAA,GACA,IAAA9nB,EAAAgoB,KAAAE,KAIAlB,GACC/E,GAKDkG,GAAA,SAAA/mB,GAEA,QAAA+mB,KACA,cAAA/mB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA2OA,MA7OIc,QAAA4gB,EAAA,GAASmN,EAAA/mB,GAUb+mB,EAAAttB,UAAAutB,aAAA,SAAAC,EAAAziB,OACA,KAAAA,IAAoCA,EAAA,KAEpC,IAAA0iB,GAAA,OAAA1iB,IAAA2iB,cAAA,IAEA,OAAAjvB,MAAAonB,MAAAyH,EAAA,aAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBie,SACAC,YAAA,EACAC,UAAA,KACAC,UACA/iB,WAAA0iB,EACAM,SAAAP,SAeAF,EAAAttB,UAAAguB,UAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAP,GACA,GAAApnB,GAAAhI,SACA,KAAA0vB,IAAuCA,GAAA,OACvC,KAAAC,IAAsCA,GAAA,GAEtClrB,MAAAF,QAAAirB,KACAA,MAEA,IAAAI,GAAsB9uB,OAAAmQ,EAAA,GAAGue,EAAA9rB,IAAA,SAAA+F,GAAkC,OAASomB,IAAApmB,MACpEqmB,EAAAL,IAAAxC,EAAA8C,KAAAjD,EAAAkD,YAAAlD,EAAAmD,MAIA,OADA,IAAA3H,GAAA,8BACA3B,OAAA,MAAApjB,OAAA,mBAAAusB,GAAA5uB,MAAAgI,KAAA,SAAAgnB,GACA,IAAAzrB,MAAAF,QAAA2rB,MAAA/tB,OAAA,EACA,KAAA4G,OAAA,uDAAA+mB,EAEA,IAAAlF,IACAuF,4BAAAT,EACAU,kBAAAR,EACAD,eACAU,UAAA,QAAAH,EAAA,GAAApF,GACAwF,oBAAA,EASA,YAPAltB,KAAAgsB,IACAxE,EAA2B9pB,OAAAmQ,EAAA,GAAM2Z,GACjC2F,UAAAnB,EAAA9d,KACAkf,iBAAAptB,KAAAgsB,EAAAqB,QAAArB,EAAAqB,QAAA,GACAC,WAAA,KAGA1oB,EAAAof,MAAAyH,EAAA,eAAA9F,UACAzX,KAAsBxQ,OAAAmQ,EAAA,GAAG2Z,QAUzBiE,EAAAttB,UAAAovB,YAAA,SAAA/oB,EAAAgpB,GACA,GAAA5oB,GAAAhI,IAEA,YADA,KAAA4wB,IAAgCA,GAAA,GAChCA,EAEA5wB,KAAA6wB,uBAAAjpB,IAGAA,EAAkB9G,OAAAmQ,EAAA,GAAMrJ,GACxBijB,MAAA,KACAsF,6BAAA,EACAR,cAAA,EACAW,oBAAA,IACS,GACTtwB,KAAA8wB,aAAAlpB,EAAA6nB,KAAA7nB,EAAAijB,OAAA3hB,KAAA,SAAAmnB,GAEA5rB,MAAAF,QAAAqD,EAAA4nB,cACA5nB,EAAA4nB,YAAA5nB,EAAA4nB,YAEA,IAAAI,GAA0B9uB,OAAAmQ,EAAA,GAAGrJ,EAAA4nB,WAAA9rB,IAAA,SAAA+F,GAA0C,OAASomB,IAAApmB,MAChFmhB,GACAwF,kBAAAR,EACAS,YACA/qB,IAAAsC,EAAAtC,IASA,YAPAlC,KAAAwE,EAAAwnB,WAAA,OAAAxnB,EAAAwnB,YACAxE,EAA2B9pB,OAAAmQ,EAAA,GAAM2Z,GACjC2F,UAAA3oB,EAAAwnB,UAAA9d,KACAkf,iBAAAptB,KAAAwE,EAAAwnB,UAAAqB,QAAA7oB,EAAAwnB,UAAAqB,QAAA,mBACAC,WAAA,KAGA1oB,EAAA6oB,uBAAAjG,OAQAiE,EAAAttB,UAAAwvB,iBAAA,SAAAzrB,GACA,MAAAtF,MAAAonB,MAAAyH,EAAA,iBAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB3L,WASAupB,EAAAttB,UAAAyvB,iBAAA,SAAAC,GACA,MAAAjxB,MAAAonB,MAAAyH,EAAA,oBAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBggB,kBASApC,EAAAttB,UAAA2vB,sBAAA,SAAAhC,GAEA,WADA,KAAAA,IAAiCA,EAAA,MACjClvB,KAAAonB,MAAAyH,EAAA,yBAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBie,eASAL,EAAAttB,UAAA4vB,yBAAA,SAAAb,GAEA,WADA,KAAAA,IAA4CA,GAAA,GAC5CtwB,KAAAonB,MAAAyH,EAAA,4BAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBqf,0BAOAzB,EAAAttB,UAAA6vB,cAAA,WACA,MAAApxB,MAAAonB,MAAAyH,EAAA,iBAAA9F,YAOA8F,EAAAttB,UAAA8vB,iBAAA,SAAAtC,GACA,MAAA/uB,MAAAonB,MAAAyH,EAAA,oBAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAKqe,SAAAP,OASvBF,EAAAttB,UAAA+vB,YAAA,SAAAvC,EAAAwC,GAEA,WADA,KAAAA,IAAiCA,EAAA,wCACjCvxB,KAAAonB,MAAAyH,EAAA,eAAA9F,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAKqe,SAAAP,EAAAwC,eASvB1C,EAAAttB,UAAAuvB,aAAA,SAAArB,EAAA5E,GAEA,OAAAznB,KAAAynB,GAAA,OAAAA,EAeA,CACA,GAAAiF,GAAAL,IAAAxC,EAAA8C,KAAAjD,EAAAkD,YAAAlD,EAAAmD,MAGA,OADA,IAAA3H,GAAA,8BACA3B,OAAA,MAAA+B,IAAA,GAAAnlB,OAAA,mBAAAusB,GAAA5uB,MAAAgI,KAAA,SAAAgnB,GACA,GAAAA,EAAA/tB,OAAA,EACA,KAAA4G,OAAA,6FAEA,gBAAAmnB,EAAA,GAAApF,KAtBA,OAAAD,GACA,IAAAiC,GAAAkD,YAGA,MADA,IAAArH,GAAA,oCACAhC,OAAA,MAAAzlB,MAAAgI,KAAA,SAAA6F,GAA6E,gBAAAA,EAAA+b,IAC7E,KAAAgC,GAAAmD,OACA,IAAAnD,GAAA0E,MAGA,MADA,IAAA7I,GAAA,qCACAhC,OAAA,MAAAzlB,MAAAgI,KAAA,SAAA6F,GAA8E,gBAAAA,EAAA+b,IAC9E,SACA,KAAA/hB,OAAA,qGAeA8lB,EAAAttB,UAAAkwB,kBAAA,SAAAnR,GACA,MAAAlX,SAAAC,QAAA,GAAAsf,GAAAzI,EAAAI,GAAA,8BAEAuO,EAAAttB,UAAAsvB,uBAAA,SAAAjpB,GACA,MAAA5H,MAAAyxB,kBAAAzxB,KAAAymB,SAAAvd,KAAA,SAAAya,GACA,MAAAA,GAAAkD,OAAA,8CAAAP,GAAAuI,GAAA9F,UACAzX,KAAsBxQ,OAAAmQ,EAAA,GAAGrJ,QAIzBinB,GACC5I,GACDyL,GAAA,SAAA5pB,GAEA,QAAA4pB,KACA,cAAA5pB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA8DA,MAhEIc,QAAA4gB,EAAA,GAASgQ,EAAA5pB,GAUb4pB,EAAAnwB,UAAAguB,UAAA,SAAAC,EAAAC,EAAAL,GACA,GAAApnB,GAAAhI,SACA,KAAAyvB,IAA8BA,EAAAxC,EAAA0E,KAC9B,IAAAC,GAAA5xB,KAAA4nB,oBAGA,OADA,IAAAe,GAAAzI,EAAAlgB,KAAAymB,SAAA,iBACAvlB,MAAAgI,KAAA,SAAA5D,GAEA,MADAssB,KACA5pB,EAAA2oB,YAAqC7vB,OAAAmQ,EAAA,GAAO3L,EAAA,mDAAAkqB,EAAAC,EAAAL,MAe5CsC,EAAAnwB,UAAAovB,YAAA,SAAArrB,EAAAkqB,EAAAC,EAAAL,EAAAvE,EAAA8E,EAAAQ,EAAAG,GAIA,WAHA,KAAAX,IAAsCA,GAAA,OACtC,KAAAQ,IAAqDA,GAAA,OACrD,KAAAG,IAA4CA,GAAA,GAC5CtwB,KAAAonB,MAAAyH,GAAA,MAAA8B,aACAvB,YACAvE,QACAsF,8BACAX,aACAG,eACAF,OACAnqB,MACAgrB,wBAQAoB,EAAAnwB,UAAAswB,eAAA,SAAAjqB,GACA,MAAA5H,MAAAonB,MAAAyH,GAAA,MAAA8B,YAAA/oB,GAAA,IAOA8pB,EAAAnwB,UAAA6vB,cAAA,SAAA9rB,GACA,MAAAtF,MAAAonB,MAAAyH,GAAA,MAAAkC,iBAAAzrB,IAEAosB,GACChE,IACDoE,GAAA,SAAAhqB,GAEA,QAAAgqB,KACA,cAAAhqB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA0EA,MA5EIc,QAAA4gB,EAAA,GAASoQ,EAAAhqB,GAUbgqB,EAAAvwB,UAAAutB,aAAA,SAAAC,EAAAziB,GAGA,WAFA,KAAAyiB,IAA8BA,EAAA/B,EAAA+E,sBAC9B,KAAAzlB,IAAoCA,EAAA,MACpCtM,KAAAonB,MAAAyH,GAAA,MAAAC,aAAAC,EAAAziB,IASAwlB,EAAAvwB,UAAAguB,UAAA,SAAAC,EAAAC,EAAAC,EAAAN,GAGA,WAFA,KAAAK,IAA8BA,EAAAxC,EAAA0E,UAC9B,KAAAjC,IAAuCA,GAAA,GACvC1vB,KAAAonB,MAAAyH,GAAA,MAAAU,UAAAC,EAAAC,EAAAC,GAAA,EAAAN,IAOA0C,EAAAvwB,UAAAywB,wBAAA,SAAAf,GACA,MAAAjxB,MAAAonB,MAAAyH,GAAA,MAAAmC,iBAAAC,IAOAa,EAAAvwB,UAAA2vB,sBAAA,SAAAhC,GAEA,WADA,KAAAA,IAAiCA,EAAA,MACjClvB,KAAAonB,MAAAyH,GAAA,MAAAqC,sBAAAhC,IAOA4C,EAAAvwB,UAAA4vB,yBAAA,SAAAb,GAEA,WADA,KAAAA,IAA4CA,GAAA,GAC5CtwB,KAAAonB,MAAAyH,GAAA,MAAAsC,yBAAAb,IAKAwB,EAAAvwB,UAAA0wB,QAAA,WACA,MAAAjyB,MAAAonB,MAAAyH,GAAA,MAAAuC,iBAOAU,EAAAvwB,UAAA2wB,wBAAA,SAAAnD,GACA,MAAA/uB,MAAAonB,MAAAyH,GAAA,MAAAwC,iBAAAtC,IAQA+C,EAAAvwB,UAAA+vB,YAAA,SAAAvC,EAAAwC,GACA,MAAAvxB,MAAAonB,MAAAyH,GAAA,MAAAyC,YAAAvC,EAAAwC,IAEAO,GACCpE,IACDyE,GAAA,SAAArqB,GAEA,QAAAqqB,KACA,cAAArqB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAyGA,MA3GIc,QAAA4gB,EAAA,GAASyQ,EAAArqB,GAUbqqB,EAAA5wB,UAAAutB,aAAA,SAAAC,EAAAziB,OACA,KAAAyiB,IAA8BA,EAAA/B,EAAA+E,sBAC9B,KAAAzlB,IAAoCA,EAAA,KACpC,IAAAslB,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAvD,aAAAC,EAAAziB,MAQA6lB,EAAA5wB,UAAAywB,wBAAA,SAAAf,GACA,GAAAW,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAArB,iBAAAC,MAQAkB,EAAA5wB,UAAA2vB,sBAAA,SAAAhC,OACA,KAAAA,IAAiCA,EAAA,KACjC,IAAA0C,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAnB,sBAAAhC,MAQAiD,EAAA5wB,UAAA4vB,yBAAA,SAAAb,OACA,KAAAA,IAA4CA,GAAA,EAC5C,IAAAsB,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAlB,yBAAAb,MAMA6B,EAAA5wB,UAAA0wB,QAAA,WACA,GAAAL,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAjB,mBAQAe,EAAA5wB,UAAA2wB,wBAAA,SAAAnD,GACA,GAAA6C,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAhB,iBAAAtC,MASAoD,EAAA5wB,UAAA+vB,YAAA,SAAAvC,EAAAwC,GACA,GAAAK,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAAf,YAAAvC,EAAAwC,MAMAY,EAAA5wB,UAAA6wB,aAAA,WACA,GAAApqB,GAAAhI,IAEA,OAAAA,MAAAonB,MAAAkL,GAAA,wBAAA3L,OAAA,YAAAzlB,MAAAgI,KAAA,SAAAxI,GACA,GAAA2xB,GAAA,GAAAxD,IAAAxO,EAAA3f,GAKA,OAHAsH,GAAAuf,WACA8K,IAAAlL,QAAAnf,EAAAgf,QAEAqL,KAGAF,GACCxJ,GACD2J,GAAA,SAAAxqB,GAEA,QAAAwqB,KACA,cAAAxqB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAoBA,MAtBIc,QAAA4gB,EAAA,GAAS4Q,EAAAxqB,GAabwqB,EAAA/wB,UAAAguB,UAAA,SAAAC,EAAAC,EAAAC,EAAAN,OACA,KAAAK,IAA8BA,EAAAxC,EAAA0E,UAC9B,KAAAjC,IAAuCA,GAAA,EACvC,IAAAkC,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAA9C,UAAAC,EAAAC,EAAAC,GAAA,EAAAN,MAGAkD,GACCH,IACDI,GAAA,SAAAzqB,GAEA,QAAAyqB,KACA,cAAAzqB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAqBA,MAvBIc,QAAA4gB,EAAA,GAAS6Q,EAAAzqB,GAabyqB,EAAAhxB,UAAAguB,UAAA,SAAAC,EAAAC,EAAAC,EAAA8C,EAAApD,OACA,KAAAK,IAA8BA,EAAAxC,EAAA0E,UAC9B,KAAAjC,IAAuCA,GAAA,OACvC,KAAA8C,IAAyCA,GAAA,EACzC,IAAAZ,GAAA5xB,KAAA4nB,oBACA,OAAA5nB,MAAAoyB,eAAAlpB,KAAA,SAAAmpB,GAEA,MADAT,KACAS,EAAA9C,UAAAC,EAAAC,EAAAC,EAAA8C,EAAApD,MAGAmD,GACCJ,IAEDM,GAAA,SAAA3qB,GAEA,QAAA2qB,KACA,cAAA3qB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAiCA,MAnCIc,QAAA4gB,EAAA,GAAS+Q,EAAA3qB,GAIbhH,OAAAC,eAAA0xB,EAAAlxB,UAAA,YAKAL,IAAA,WACA,UAAAwxB,IAAA1yB,KAAA,aAEAiB,YAAA,EACAD,cAAA,IAOAyxB,EAAAlxB,UAAAoxB,OAAA,SAAAnJ,GACA,MAAAxpB,MAAAonB,MAAAqL,EAAA,iBAAA1J,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK2hB,UAAApJ,OAQvBiJ,EAAAlxB,UAAAsxB,OAAA,SAAAC,GACA,MAAA9yB,MAAAonB,MAAAqL,EAAA,iBAAA1J,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK8hB,WAAAD,OAGvBL,GACCxM,GACDyM,GAAA,SAAA5qB,GAEA,QAAA4qB,KACA,cAAA5qB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAkBA,MApBIc,QAAA4gB,EAAA,GAASgR,EAAA5qB,GASb4qB,EAAAnxB,UAAAgoB,QAAA,SAAAC,GACA,UAAAwJ,IAAAhzB,KAAA,YAAAwpB,EAAA,OAOAkJ,EAAAnxB,UAAA0xB,eAAA,SAAAzJ,GACA,UAAAwJ,IAAAhzB,KAAA,mBAAAwpB,EAAA,OAEAkJ,GACCpK,GACD0K,GAAA,SAAAlrB,GAEA,QAAAkrB,KACA,cAAAlrB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA6CA,MA/CIc,QAAA4gB,EAAA,GAASsR,EAAAlrB,GAIbhH,OAAAC,eAAAiyB,EAAAzxB,UAAA,WAIAL,IAAA,WACA,UAAAgyB,IAAAlzB,OAEAiB,YAAA,EACAD,cAAA,IAKAgyB,EAAAzxB,UAAA4xB,YAAA,WACA,MAAAnzB,MAAAonB,MAAA4L,EAAA,sBAAAjK,YAQAiK,EAAAzxB,UAAA6xB,OAAA,SAAAC,EAAAC,GACA,MAAAtzB,MAAAonB,MAAA4L,EAAA,yBAAAK,EAAA,gBAAAC,EAAA,KAAAvK,YAKAiK,EAAAzxB,UAAAuJ,MAAA,WACA,MAAA9K,MAAAonB,MAAA4L,EAAA,gBAAAjK,YAKAiK,EAAAzxB,UAAA6I,KAAA,WACA,MAAApK,MAAAonB,MAAA4L,EAAA,eAAAjK,YAKAiK,EAAAzxB,UAAAgL,OAAA,WACA,MAAAvM,MAAAonB,MAAA4L,EAAA,iBAAAjK,YAEAiK,GACCrK,GACDuK,GAAA,SAAAprB,GAEA,QAAAorB,KACA,cAAAprB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAASwR,EAAAprB,GAIborB,EAAcpyB,OAAA4gB,EAAA,IACdH,EAAA,YACA2R,IAECvK,GAMD4K,GAAA,SAAAzrB,GAEA,QAAAyrB,KACA,cAAAzrB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS6R,EAAAzrB,GAIb0rB,EAAAD,EAKAA,EAAAhyB,UAAAwpB,UAAA,SAAApqB,GACA,GAAAqE,GAAA,GAAAyuB,IAAAzzB,KAEA,OADAgF,GAAA8kB,OAAA,KAAAnpB,EAAA,MACAqE,GAQAuuB,EAAAhyB,UAAA0oB,IAAA,SAAA3kB,GACA,GAAA0C,GAAAhI,IACA,OAAAA,MAAAonB,MAAAoM,EAAA,QAAAluB,EAAA,MAAAyjB,WAAA7f,KAAA,SAAAoJ,GACA,OACA1E,KAAA0E,EACAohB,OAAA1rB,EAAA+iB,UAAAzlB,MAIA,IAAAkuB,EAIA,OAHAD,GAAAC,EAA0B1yB,OAAA4gB,EAAA,IAC1BH,EAAA,YACAgS,IAECjL,GAKDmL,GAAA,SAAA3rB,GAEA,QAAA2rB,KACA,GAAAzrB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAEA,OADAgI,GAAAmiB,OAAAniB,EAAA4gB,QAAA,qBAAAhb,GAAmE,OAAUA,OAAA8lB,OAAA1rB,KAC7EA,EAgJA,MApJIlH,QAAA4gB,EAAA,GAAS+R,EAAA3rB,GAMbhH,OAAAC,eAAA0yB,EAAAlyB,UAAA,oBAKAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,qBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,SAKAL,IAAA,WACA,UAAAyyB,IAAA3zB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,WAKAL,IAAA,WACA,UAAAqyB,IAAAvzB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,qBAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,sBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,gBAKAL,IAAA,WACA,UAAAuyB,GAAAzzB,KAAA,iBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,cAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,eAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,qBAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,sBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA0yB,EAAAlyB,UAAA,0BAKAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,2BAEAiB,YAAA,EACAD,cAAA,IAOAyyB,EAAAlyB,UAAAgL,OAAA,SAAA4c,GAEA,WADA,KAAAA,IAA8BA,EAAA,KAC9BnpB,KAAAonB,MAAAqM,EAAA,MAAA1K,UACAviB,SACA4iB,WAAAD,EACAH,gBAAA,aAOAyK,EAAAlyB,UAAAqyB,QAAA,WACA,MAAA5zB,MAAAonB,MAAAqM,EAAA,WAAA1K,YAKA0K,EAAAlyB,UAAA4K,QAAA,WAEA,OADAya,MACA3kB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C2kB,EAAA3kB,GAAAC,UAAAD,EAEA,IAAA2rB,GAAA5tB,KAAA6zB,iBACA,OAAAjG,GAAAjH,OAAAvkB,MAAAwrB,EAAAhH,GAAA1lB,MAAAgI,KAAA,SAAAxI,GACA,MAAmBI,QAAAmQ,EAAA,GAAM,GAAA6iB,IAAAzT,EAAA3f,UAQzB+yB,EAAAlyB,UAAA6xB,OAAA,SAAAW,GACA,GAAA/rB,GAAAhI,IACA,OAAAA,MAAA2mB,OAAA,qBAAAzlB,MAAAgI,KAAA,SAAA8qB,GACA,GAAAC,GAAAD,EAAAE,kBACAC,EAAA,GAAAnP,GACAoP,EAAApsB,EAAAye,QAAAnQ,MAAA,YACA+d,EAAAD,EAAAzwB,QAAA,aAAA2S,MAAA,QAAA3S,QAAA,aACA2wB,EAAAF,EAAA,oCACA,OAAAD,GAAApO,KAAAuO,GACAhjB,KAAsBxQ,OAAAmQ,EAAA,IACtB8iB,QAAA,IAAAA,EAAAnpB,QAAA,QAAAmpB,EAAA,GAAAM,EAAAN,EACAE,OAAA,GAAAI,EAAAJ,MAEa/qB,KAAA,SAAApF,GAAqB,MAAAA,GAAAmM,YAGlCwjB,GACClB,IAMDgC,GAAA,SAAAzsB,GAEA,QAAAysB,KACA,cAAAzsB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS6S,EAAAzsB,GAIb0sB,EAAAD,EAMAA,EAAAhzB,UAAAkzB,wBAAA,SAAAC,GACA,GAAA1sB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,IACvByjB,iBAEA,OAAA10B,MAAAonB,MAAAoN,EAAA,2BAAAzL,UAA+EzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAChG,OACA+mB,YAAA3sB,EAAAuhB,QAAA3b,EAAA4b,IACA5b,WAOA2mB,EAAAhzB,UAAAgoB,QAAA,SAAAC,GACA,GAAAoL,GAAA,GAAAC,IAAA70B,KAEA,OADA40B,GAAA9K,OAAA,KAAAN,EAAA,MACAoL,GAYAL,EAAAhzB,UAAA0oB,IAAA,SAAAT,EAAA7oB,EAAAmrB,EAAAjB,EAAAiK,GACA,GAAA9sB,GAAAhI,SACA,KAAA8rB,IAAqCA,EAAA,QACrC,KAAAjB,IAA+BA,EAAA,4BAC/B,KAAAiK,IAA4CA,KAC5C,IAAAlK,GAAuB9pB,OAAAmQ,EAAA,GAAGnQ,OAAAi0B,OAAA1T,EAAA,mBAC1B4K,YAAAH,EACAkJ,MAAAnK,EACAC,IAAmBmK,YAAAzL,GACnB0C,KAAAvrB,GACSm0B,GACT,OAAA90B,MAAA+oB,UAA8BzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC/C,OAAoB+mB,YAAA3sB,EAAAuhB,QAAA3b,EAAA4b,IAAA5b,UAGpB,IAAA4mB,EAIA,OAHAD,GAAAC,EAAoC1zB,OAAA4gB,EAAA,IACpCH,EAAA,iBACAgT,IAECjM,GAKDuM,GAAA,SAAA/sB,GAEA,QAAA+sB,KACA,GAAA7sB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAKA,OADAgI,GAAAuE,OAAAvE,EAAAihB,QACAjhB,EA0CA,MAjDIlH,QAAA4gB,EAAA,GAASmT,EAAA/sB,GASbhH,OAAAC,eAAA8zB,EAAAtzB,UAAA,cAIAL,IAAA,WACA,UAAAg0B,IAAAl1B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA8zB,EAAAtzB,UAAA,UAIAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,WAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA8zB,EAAAtzB,UAAA,UAIAL,IAAA,WACA,UAAA2zB,GAAA70B,KAAA,WAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA8zB,EAAAtzB,UAAA,wBAIAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,yBAEAiB,YAAA,EACAD,cAAA,IAEA6zB,GACClM,GAIDuM,GAAA,SAAAptB,GAEA,QAAAotB,KACA,cAAAptB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAeA,MAjBIc,QAAA4gB,EAAA,GAASwT,EAAAptB,GASbotB,EAAA3zB,UAAAgoB,QAAA,SAAAC,GACA,GAAA2L,GAAA,GAAAC,IAAAp1B,KAEA,OADAm1B,GAAArL,OAAA,SAAAN,EAAA,MACA2L,GAEAD,EAAiBp0B,OAAA4gB,EAAA,IACjBH,EAAA,eACA2T,IAEC5M,GAID8M,GAAA,SAAAttB,GAEA,QAAAstB,KACA,cAAAttB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAEA,MAJIc,QAAA4gB,EAAA,GAAS0T,EAAAttB,GAIbstB,GACCzM,GAMD0M,GAAA,SAAAvtB,GAEA,QAAAutB,KACA,cAAAvtB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS2T,EAAAvtB,GAIbwtB,EAAAD,EAMAA,EAAA9zB,UAAAwpB,UAAA,SAAApqB,GACA,GAAAqE,GAAA,GAAAuwB,IAAAv1B,KAEA,OADAgF,GAAA8kB,OAAA,KAAAnpB,EAAA,MACAqE,GAQAqwB,EAAA9zB,UAAA0oB,IAAA,SAAAtpB,EAAA60B,GACA,GAAAxtB,GAAAhI,IACA,OAAAA,MAAAonB,MAAAkO,EAAA,iBAAA30B,EAAA,SAAAooB,UACAzX,KAAAkkB,IACStsB,KAAA,SAAAoJ,GACT,OACA1E,KAAA0E,EACAmjB,KAAAztB,EAAA+iB,UAAApqB,OASA00B,EAAA9zB,UAAAm0B,YAAA,SAAAC,GACA,GAAA3tB,GAAAhI,IAEA,OAAA21B,GAAAxwB,OAAA,SAAAywB,EAAAH,GAAoD,MAAAG,GAAA1sB,KAAA,WAAgC,MAAAlB,GAAAof,MAAAkO,EAAA,iBAAAG,EAAA90B,KAAA,SAAAooB,UACpFzX,KAAAmkB,EAAAD,aACiBpsB,QAAAC,YAOjBgsB,EAAA9zB,UAAAs0B,eAAA,WAGA,OAFA7tB,GAAAhI,KACA21B,KACA1zB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C0zB,EAAA1zB,GAAAC,UAAAD,EAEA,OAAA0zB,GAAAxwB,OAAA,SAAAywB,EAAAH,GAAoD,MAAAG,GAAA1sB,KAAA,WAAgC,MAAAlB,GAAA+iB,UAAA0K,GAAAlpB,YAA6CnD,QAAAC,WAEjI,IAAAisB,EAIA,OAHAD,GAAAC,EAA0Cx0B,OAAA4gB,EAAA,IAC1CH,EAAA,oBACA8T,IAEC/M,GAKDiN,GAAA,SAAAztB,GAEA,QAAAytB,KACA,GAAAvtB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAEA,OADAgI,GAAAuE,OAAAvE,EAAAkhB,gBACAlhB,EA0DA,MA9DIlH,QAAA4gB,EAAA,GAAS6T,EAAAztB,GAUbytB,EAAAh0B,UAAAu0B,QAAA,WACA,MAAA91B,MAAA+1B,UAAA,GAAkCzS,GAAA,IAMlCiS,EAAAh0B,UAAAy0B,QAAA,WACA,MAAAh2B,MAAA+1B,UAAA,GAAkCzS,GAAA,IAKlCiS,EAAAh0B,UAAA00B,UAAA,WACA,MAAAj2B,MAAA+1B,UAAA,GAAkCzS,GAAA,IAKlCiS,EAAAh0B,UAAA20B,QAAA,WACA,MAAAl2B,MAAA+1B,UAAA,GAAkCzS,GAAA,IAOlCiS,EAAAh0B,UAAA40B,WAAA,SAAAX,GACA,GAAAxtB,GAAAhI,IACA,OAAAA,MAAAonB,MAAAmO,EAAA,aAAAxM,UACAzX,KAAAkkB,EACAhvB,SACAwiB,gBAAA,SAES9f,KAAA,SAAAM,GAAqB,UAAA+rB,GAAAvtB,MAe9ButB,EAAAh0B,UAAAw0B,UAAA,SAAA9qB,GACA,MAAAjL,MAAAonB,MAAAmO,EAAA,aAAAr0B,IAAA+J,IAEAsqB,GACC5M,GAMDyN,GAAA,SAAAtuB,GAEA,QAAAsuB,KACA,cAAAtuB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS0U,EAAAtuB,GAIbuuB,EAAAD,EAMAA,EAAA70B,UAAAgoB,QAAA,SAAAC,GACA,GAAAvkB,GAAA,GAAA0sB,IAAA3xB,KAEA,OADAiF,GAAA6kB,OAAA,KAAAN,EAAA,MACAvkB,GAOAmxB,EAAA70B,UAAA+0B,WAAA,SAAAC,GACA,UAAA5E,IAAA3xB,KAAA,eAAAu2B,EAAA,OASAH,EAAA70B,UAAA0oB,IAAA,SAAAsM,EAAAC,EAAA1B,GACA,GAAA9sB,GAAAhI,SACA,KAAAw2B,IAAsCA,GAAA,OACtC,KAAA1B,IAA4CA,KAC5C,IAAAlK,GAAuB9pB,OAAAmQ,EAAA,GAAGnQ,OAAAi0B,OAAA1T,EAAA,YAC1BoV,aAAAD,EACAE,MAAAH,GACSzB,GACT,OAAA90B,MAAAonB,MAAAiP,EAAA,MAAAtN,UAAmDzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GACpE,OACAA,OACA+oB,KAAA3uB,EAAAuhB,QAAA3b,EAAAkd,OAIA,IAAAuL,EAIA,OAHAD,GAAAC,EAAsBv1B,OAAA4gB,EAAA,IACtBH,EAAA,UACA6U,IAEC9N,GAKDqJ,GAAA,SAAA7pB,GAEA,QAAA6pB,KACA,GAAA3pB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAYA,OANAgI,GAAAmiB,OAAAniB,EAAA4gB,QAAA,mBAAAhb,GAAiE,OAAUA,OAAA+oB,KAAA3uB,KAK3EA,EAAAuE,OAAAvE,EAAAihB,QACAjhB,EAgBA,MA9BIlH,QAAA4gB,EAAA,GAASiQ,EAAA7pB,GAgBbhH,OAAAC,eAAA4wB,EAAApwB,UAAA,UACAL,IAAA,WACA,UAAA01B,IAAA52B,OAEAiB,YAAA,EACAD,cAAA,IAMA2wB,EAAApwB,UAAAs1B,aAAA,WACA,MAAA72B,MAAAonB,MAAAnB,EAAA,gBAAA/kB,OAEAywB,GACChJ,GACDiO,GAAA,SAAA9uB,GAEA,QAAA8uB,KACA,cAAA9uB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASkV,EAAA9uB,GAIbgvB,EAAAF,EAIAA,EAAAr1B,UAAAw1B,aAAA,WACA,MAAA/2B,MAAAonB,MAAAnB,EAAA,aAAA/kB,OAOA01B,EAAAr1B,UAAA0oB,IAAA,SAAA+M,GACA,MAAAh3B,MAAAonB,MAAA0P,EAAA,iBAAAE,EAAA,MAAAjO,YAQA6N,EAAAr1B,UAAA01B,KAAA,SAAAC,EAAAxpB,GACA,MAAA1N,MAAAonB,MAAA0P,EAAA,mBAAA/N,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAKkmB,MAAAD,EAAAxpB,aAMvBkpB,EAAAr1B,UAAA61B,UAAA,WACA,MAAAp3B,MAAAonB,MAAA0P,EAAA,uBAAA/N,YAOA6N,EAAAr1B,UAAAiqB,OAAA,SAAA0L,GACA,MAAAl3B,MAAAonB,MAAA0P,EAAA,oBAAAI,EAAA,MAAAnO,WAEA,IAAA+N,EAIA,OAHAF,GAAAE,EAAgCh2B,OAAA4gB,EAAA,IAChCH,EAAA,eACAqV,IAECtO,GAMD+O,GAAA,SAAAvvB,GAEA,QAAAuvB,KACA,cAAAvvB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS2V,EAAAvvB,GAIbwvB,EAAAD,EAMAA,EAAA91B,UAAAgoB,QAAA,SAAAC,GACA,GAAAxkB,GAAA,GAAAuyB,IAAAv3B,KAEA,OADAgF,GAAA8kB,OAAA,KAAAN,EAAA,MACAxkB,GAOAqyB,EAAA91B,UAAA+0B,WAAA,SAAAC,GACA,UAAAgB,IAAAv3B,KAAA,eAAAu2B,EAAA,OAOAc,EAAA91B,UAAAi2B,yBAAA,SAAA72B,GACA,UAAA42B,IAAAv3B,KAAA,6BAAAW,EAAA,OAKA02B,EAAA91B,UAAAk2B,iBAAA,SAAA3E,GACA,GACAlc,GADA5O,EAAAhI,IAGA4W,GADA,gBAAAkc,IACoB4E,UAAA5E,GAGpBA,CAEA,IAAAlI,GAAuB9pB,OAAAmQ,EAAA,IACvBoK,WAA0Bva,OAAAmQ,EAAA,GAAMoQ,EAAA,wCAAAzK,IAEhC,OAAA5W,MAAAonB,MAAAkQ,EAAA,oBAAAvO,UAAkEzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GACnF,OACAA,OACAupB,MAAAnvB,EAAAuhB,QAAA3b,EAAAkd,QAWAuM,EAAA91B,UAAA0oB,IAAA,SAAAsM,EAAAoB,EAAAhN,GACA,GAAA3iB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,GAAGnQ,OAAAi0B,OAAA1T,EAAAsW,IAC1BjB,MAAAH,GACS5L,GACT,OAAA3qB,MAAAonB,MAAAkQ,EAAA,MAAAvO,UAAoDzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GACrE,OACAA,OACAupB,MAAAnvB,EAAAuhB,QAAA3b,EAAAkd,QAWAuM,EAAA91B,UAAAq2B,QAAA,SAAArB,EAAAsB,EAAAlN,OACA,KAAAkN,IAAmCA,EAAA,IACnC,IAAA/O,IACAgP,cAAA,EACAC,UAAAF,EAEA,OAAA73B,MAAAiqB,IAAAsM,EAAA,eAA+Cz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAWrD0M,EAAA91B,UAAAy2B,cAAA,SAAAzB,EAAA0B,EAAAC,EAAAC,EAAAxN,OACA,KAAAwN,IAAoCA,EAAA7L,EAAA8L,KACpC,IAAAtP,IACAuP,WAAAH,EACAJ,cAAA,GACAQ,QAAAL,EACAM,WAAAJ,EAEA,OAAAn4B,MAAAiqB,IAAAsM,EAAA,qBAAqDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAU3D0M,EAAA91B,UAAAi3B,YAAA,SAAAjC,EAAAkC,EAAAC,EAAAC,EAAAhO,OACA,KAAA8N,IAAuCA,EAAAlM,EAAAqM,cACvC,KAAAF,IAAsCA,EAAAjM,EAAAoM,eACtC,KAAAF,IAA+CA,EAAA,EAC/C,IAAA7P,IACAgQ,qBAAAJ,EACAK,cAAAN,EACAX,cAAA,EACAkB,sBAAAL,EAEA,OAAA34B,MAAAiqB,IAAAsM,EAAA,mBAAmDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAUzD0M,EAAA91B,UAAA03B,UAAA,SAAA1C,EAAA2C,EAAAC,EAAAxO,GACA,GAAA7B,IAAqBgP,cAAA,EAOrB,YANA10B,KAAA81B,IACApQ,EAAoBhoB,OAAAmQ,EAAA,IAAQmoB,aAAAF,GAAyBpQ,QAErD1lB,KAAA+1B,IACArQ,EAAoBhoB,OAAAmQ,EAAA,IAAQooB,aAAAF,GAAyBrQ,IAErD9oB,KAAAiqB,IAAAsM,EAAA,iBAAiDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAWvD0M,EAAA91B,UAAA+3B,YAAA,SAAA/C,EAAA2C,EAAAC,EAAAI,EAAA5O,OACA,KAAA4O,IAAyCA,EAAA,KACzC,IAAAzQ,IACA0Q,iBAAAD,EACAzB,cAAA,GAQA,YANA10B,KAAA81B,IACApQ,EAAoBhoB,OAAAmQ,EAAA,IAAQmoB,aAAAF,GAAyBpQ,QAErD1lB,KAAA+1B,IACArQ,EAAoBhoB,OAAAmQ,EAAA,IAAQooB,aAAAF,GAAyBrQ,IAErD9oB,KAAAiqB,IAAAsM,EAAA,mBAAmDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAczD0M,EAAA91B,UAAAk4B,iBAAA,SAAAlD,EAAAmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnP,OACA,KAAA+O,IAAuCA,EAAA,OACvC,KAAAC,IAAkCA,GAAA,OAClC,KAAAC,IAAwCA,GAAA,OACxC,KAAAC,IAAoCA,GAAA,OACpC,KAAAC,IAAwCA,GAAA,EACxC,IAAAhR,IACAiR,eAAAD,EACAE,WAAAH,EACA/B,cAAA,EACAmC,cAAAP,EACAQ,eAAAN,EACAO,SAAAR,EAEA,OAAA35B,MAAAiqB,IAAAsM,EAAA,wBAAwDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAO9D0M,EAAA91B,UAAA64B,OAAA,SAAA7D,EAAAkC,EAAA9N,OACA,KAAA8N,IAAuCA,EAAA/L,EAAA2N,UACvC,IAAAvR,IACAiQ,cAAAN,EACAX,cAAA,GAEA,OAAA93B,MAAAiqB,IAAAsM,EAAA,cAA8Cz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KASpD0M,EAAA91B,UAAA+4B,QAAA,SAAA/D,EAAAgE,EAAA5P,GACA,GAAA7B,IACAgP,cAAA,GACA0C,cAAAD,EAEA,OAAAv6B,MAAAiqB,IAAAsM,EAAA,eAA+Cz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAUrD0M,EAAA91B,UAAAk5B,UAAA,SAAAlE,EAAAmE,EAAAC,EAAAhQ,GACA,GAAA3iB,GAAAhI,KACA8oB,EAAoBhoB,OAAAmQ,EAAA,IACpB6mB,cAAA,EACA8C,gBAAAD,EACAE,aAAAH,EACAhE,MAAAH,GACS5L,GACTC,EAAuB9pB,OAAAmQ,EAAA,IACvBoK,WAA0Bva,OAAAmQ,EAAA,GAAMoQ,EAAA,+BAAAyH,IAEhC,OAAA9oB,MAAAonB,MAAAkQ,EAAA,YAAAvO,UAA0DzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC3E,OACAA,OACAupB,MAAAnvB,EAAAuhB,QAAA3b,EAAAkd,QAaAuM,EAAA91B,UAAAu5B,UAAA,SAAAvE,EAAAwE,EAAArqB,EAAAsqB,EAAArQ,OACA,KAAAja,IAAgCA,EAAA6c,GAAA0N,SAChC,IAAAnS,IACAoS,SACAC,QAAAJ,GAEAK,WAAA1qB,EACAonB,cAAA,EACAuD,aAAAL,EAEA,OAAAh7B,MAAAiqB,IAAAsM,EAAA,iBAAiDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAUvD0M,EAAA91B,UAAA+5B,eAAA,SAAA/E,EAAAwE,EAAAC,EAAArQ,GACA,GAAA7B,IACAoS,SACAC,QAAAJ,GAEAjD,cAAA,GACAuD,aAAAL,EAEA,OAAAh7B,MAAAiqB,IAAAsM,EAAA,sBAAsDz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,KAQ5D0M,EAAA91B,UAAAg6B,WAAA,SAAAhF,EAAA5L,GACA,GAAA7B,IACAgP,cAAA,EAEA,OAAA93B,MAAAiqB,IAAAsM,EAAA,WAA2Cz1B,OAAAmQ,EAAA,GAAM6X,EAAA6B,IAEjD,IAAA2M,EAIA,OAHAD,GAAAC,EAAwBx2B,OAAA4gB,EAAA,IACxBH,EAAA,WACA8V,IAEC/O,GAKDiP,GAAA,SAAAzvB,GAEA,QAAAyvB,KACA,GAAAvvB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAMA,OADAgI,GAAAuE,OAAAvE,EAAAihB,QACAjhB,EA0CA,MAlDIlH,QAAA4gB,EAAA,GAAS6V,EAAAzvB,GAgBbyvB,EAAAh2B,UAAA4oB,OAAA,SAAAQ,EAAAgN,GACA,GAAA3vB,GAAAhI,SACA,KAAA23B,IAAmCA,EAAA,WACnC,IAAA/M,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAAsW,GAAAhN,GACjC,OAAA3qB,MAAA+oB,UACAzX,KAAAsZ,EACApkB,SACAwiB,gBAAA,WAES9f,KAAA,SAAA0E,GACT,OACAA,OACAupB,MAAAnvB,MAOAuvB,EAAAh2B,UAAAi6B,qBAAA,SAAAC,GACA,MAAAz7B,MAAAonB,MAAAmQ,EAAA,wBAAAkE,EAAA,KAAA1S,YAKAwO,EAAAh2B,UAAAm6B,kBAAA,SAAAD,GACA,MAAAz7B,MAAAonB,MAAAmQ,EAAA,qBAAAkE,EAAA,KAAA1S,YAKAwO,EAAAh2B,UAAAo6B,iBAAA,SAAAF,GACA,MAAAz7B,MAAAonB,MAAAmQ,EAAA,oBAAAkE,EAAA,KAAA1S,YAEAwO,GACC5O,GAMDiT,GAAA,SAAA9zB,GAEA,QAAA8zB,KACA,cAAA9zB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAeA,MAjBIc,QAAA4gB,EAAA,GAASka,EAAA9zB,GASb8zB,EAAAr6B,UAAAgoB,QAAA,SAAAC,GACA,GAAAnpB,GAAA,GAAAw7B,IAAA77B,KAEA,OADAK,GAAAypB,OAAA,KAAAN,EAAA,MACAnpB,GAEAu7B,EAAY96B,OAAA4gB,EAAA,IACZH,EAAA,UACAqa,IAECtT,GAKDuT,GAAA,SAAA/zB,GAEA,QAAA+zB,KACA,cAAA/zB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAEA,MAJIc,QAAA4gB,EAAA,GAASma,EAAA/zB,GAIb+zB,GACClT,GAMDmT,GAAA,SAAAh0B,GAEA,QAAAg0B,KACA,cAAAh0B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAkCA,MApCIc,QAAA4gB,EAAA,GAASoa,EAAAh0B,GASbg0B,EAAAv6B,UAAAgoB,QAAA,SAAAwS,GACA,GAAAr6B,GAAA,GAAAs6B,IAAAh8B,KAEA,OADA0B,GAAAooB,OAAA,KAAAiS,EAAA,MACAr6B,GASAo6B,EAAAv6B,UAAA0oB,IAAA,SAAAgS,EAAAC,EAAAC,GACA,GAAAn0B,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,IACvBkrB,eAAA,2BACAC,mBAAAF,EACAD,kBACA9yB,SAAAnJ,KAAAymB,SAEA,OAAAzmB,MAAA+oB,UAA8BzX,KAAAsZ,EAAApkB,SAA2B+d,eAAA,sBAAuCrb,KAAA,SAAAmzB,GAChG,OAAoBzuB,KAAAyuB,EAAAC,aAAAt0B,EAAAuhB,QAAA8S,EAAA7S,QAGpBsS,EAAoBh7B,OAAA4gB,EAAA,IACpBH,EAAA,kBACAua,IAECxT,GAKD0T,GAAA,SAAAl0B,GAEA,QAAAk0B,KACA,cAAAl0B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAuBA,MAzBIc,QAAA4gB,EAAA,GAASsa,EAAAl0B,GASbk0B,EAAAz6B,UAAA4oB,OAAA,SAAA+R,GACA,GAAAl0B,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,IACvBmrB,mBAAAF,GAEA,OAAAl8B,MAAAu8B,WAA+BjrB,KAAAsZ,EAAApkB,SAA2B+d,eAAA,sBAAuCrb,KAAA,SAAA0E,GACjG,OAAoBA,OAAA0uB,aAAAt0B,MAOpBg0B,EAAAz6B,UAAAgL,OAAA,WACA,MAAAzE,GAAAvG,UAAAi7B,WAAAj8B,KAAAP,OAEAg8B,GACCrT,GAMD8T,GAAA,SAAA30B,GAEA,QAAA20B,KACA,cAAA30B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS+a,EAAA30B,GAIb40B,EAAAD,EAMAA,EAAAl7B,UAAAgoB,QAAA,SAAAC,GACA,GAAAmT,GAAA,GAAAC,IAAA58B,KAEA,OADA28B,GAAA7S,OAAA,KAAAN,EAAA,MACAmT,GAQAF,EAAAl7B,UAAA0oB,IAAA,SAAAU,GACA,GAAA3iB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,IAAQuP,YAAcc,KAAA,wBAAkCqJ,GACnF,OAAA3qB,MAAA+oB,UAA8BzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC/C,OACAivB,OAAA70B,EAAAuhB,QAAA3b,EAAAkd,IACAld,WAQA6uB,EAAAl7B,UAAAkM,MAAA,WACA,MAAAzN,MAAAonB,MAAAsV,EAAA,SAAA3T,WAEA,IAAA2T,EAIA,OAHAD,GAAAC,EAA8C57B,OAAA4gB,EAAA,IAC9CH,EAAA,sBACAkb,IAECnU,GAKDsU,GAAA,SAAA90B,GAEA,QAAA80B,KACA,GAAA50B,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAOA,OADAgI,GAAAmiB,OAAAniB,EAAA4gB,QAAA,+BAAAhb,GAA6E,OAAUA,OAAAivB,OAAA70B,KACvFA,EASA,MAlBIlH,QAAA4gB,EAAA,GAASkb,EAAA90B,GAeb80B,EAAAr7B,UAAAgL,OAAA,WACA,MAAAzE,GAAAvG,UAAAi7B,WAAAj8B,KAAAP,OAEA48B,GACCjU,GAMDmU,GAAA,SAAAh1B,GAEA,QAAAg1B,KACA,cAAAh1B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASob,EAAAh1B,GAIbi1B,EAAAD,EAMAA,EAAAv7B,UAAAgoB,QAAA,SAAAC,GACA,GAAAwT,GAAA,GAAAC,IAAAj9B,KAEA,OADAg9B,GAAAlT,OAAA,KAAAN,EAAA,MACAwT,GAOAF,EAAAv7B,UAAA+0B,WAAA,SAAAC,GACA,UAAA0G,IAAAj9B,KAAA,eAAAu2B,EAAA,OAWAuG,EAAAv7B,UAAA0oB,IAAA,SAAAsM,EAAAzK,EAAAoR,EAAAC,EAAArI,GACA,GAAA9sB,GAAAhI,SACA,KAAA8rB,IAAqCA,EAAA,QACrC,KAAAoR,IAAkCA,EAAA,SAClC,KAAAC,IAA4CA,GAAA,OAC5C,KAAArI,IAA4CA,KAC5C,IAAAsI,GAA0Bt8B,OAAAmQ,EAAA,IAC1BosB,kBAAAF,EACAG,aAAAJ,EACAK,oBAAAJ,EACAlR,YAAAH,EACA4K,MAAAH,EACA/V,YAA2Bc,KAAA,YAClBwT,EACT,OAAA90B,MAAA+oB,UAA8BzX,KAAOxQ,OAAAmQ,EAAA,GAAGmsB,KAAel0B,KAAA,SAAA0E,GACvD,OAAoBA,OAAAovB,KAAAh1B,EAAAsuB,WAAA8G,EAAA1G,WAYpBoG,EAAAv7B,UAAAi8B,OAAA,SAAAjH,EAAAzK,EAAAoR,EAAAC,EAAArI,GACA,GAAA9sB,GAAAhI,IAKA,QAJA,KAAA8rB,IAAqCA,EAAA,QACrC,KAAAoR,IAAkCA,EAAA,SAClC,KAAAC,IAA4CA,GAAA,OAC5C,KAAArI,IAA4CA,MAC5C90B,KAAAunB,SACA,KAAAxe,OAAA,8DAEA,WAAAK,SAAA,SAAAC,EAAAC,GACA,GAAAm0B,GAAsC38B,OAAAmQ,EAAA,GAAM6jB,GAAsB4B,MAAAH,EAAAtK,YAAAH,EAAAyR,oBAAAJ,IAAkF,GACpJH,EAAAh1B,EAAAsuB,WAAAmH,EAAA/G,MACAsG,GAAA97B,MAAAgI,KAAA,SAAAM,GACAwzB,EAAA7S,OAAAsT,GAAAv0B,KAAA,SAAAxI,GACA2I,GAA6Bq0B,SAAA,EAAA9vB,KAAAlN,EAAAs8B,KAAAh1B,EAAAsuB,WAAAmH,EAAA/G,WACZ7sB,MAAA,SAAAkB,GAAsB,MAAAzB,GAAAyB,OAC1BlB,MAAA,SAAAL,GACbxB,EAAAiiB,IAAAsM,EAAAzK,EAAAoR,EAAAC,EAAAM,GAAAv0B,KAAA,SAAApF,GACAuF,GAA6Bq0B,SAAA,EAAA9vB,KAAA9J,EAAA8J,KAAAovB,KAAAh1B,EAAAsuB,WAAAmH,EAAA/G,WACZ7sB,MAAA,SAAAkB,GAAsB,MAAAzB,GAAAyB,UAOvC+xB,EAAAv7B,UAAAo8B,wBAAA,WACA,MAAA39B,MAAAonB,MAAA2V,EAAA,2BAAAhU,WAAA7f,KAAA,SAAA+G,GACA,UAAAgtB,IAAA5c,EAAApQ,OAMA6sB,EAAAv7B,UAAAq8B,uBAAA,WACA,MAAA59B,MAAAonB,MAAA2V,EAAA,0BAAAhU,WAAA7f,KAAA,SAAA+G,GACA,UAAAgtB,IAAA5c,EAAApQ,MAGA,IAAA8sB,EAIA,OAHAD,GAAAC,EAAsBj8B,OAAA4gB,EAAA,IACtBH,EAAA,UACAub,IAECxU,GAKD2U,GAAA,SAAAn1B,GAEA,QAAAm1B,KACA,cAAAn1B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAoVA,MAtVIc,QAAA4gB,EAAA,GAASub,EAAAn1B,GAIbhH,OAAAC,eAAAk8B,EAAA17B,UAAA,gBAKAL,IAAA,WACA,UAAAqzB,IAAAv0B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,SAKAL,IAAA,WACA,UAAA28B,IAAA79B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,SAKAL,IAAA,WACA,UAAAk1B,IAAAp2B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,UAKAL,IAAA,WACA,UAAAm2B,IAAAr3B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,SAKAL,IAAA,WACA,UAAA06B,IAAA57B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,eAKAL,IAAA,WACA,UAAAywB,IAAA3xB,KAAA,gBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,qBAKAL,IAAA,WACA,UAAAu7B,IAAAz8B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,4BAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,6BAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,kBAKAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,mBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,iBAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,qBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,uCAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,wCAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,iBAKAL,IAAA,WACA,UAAA46B,IAAA97B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAk8B,EAAA17B,UAAA,cAIAL,IAAA,WACA,UAAAuyB,IAAAzzB,KAAA,eAEAiB,YAAA,EACAD,cAAA,IAMAi8B,EAAA17B,UAAAu8B,QAAA,SAAAC,GACA,UAAApM,IAAA3xB,KAAA,YAAA+9B,EAAA,OASAd,EAAA17B,UAAA4oB,OAAA,SAAAQ,EAAAxB,GACA,GAAAnhB,GAAAhI,SACA,KAAAmpB,IAA8BA,EAAA,IAC9B,IAAAyB,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,IAC3BuP,YAA2Bc,KAAA,YAClBqJ,GACT,OAAA3qB,MAAA+oB,UACAzX,KAAAsZ,EACApkB,SACA4iB,WAAAD,EACAH,gBAAA,WAES9f,KAAA,SAAA0E,GACT,GAAAowB,GAAAh2B,CAIA,OAHgBlH,QAAAmQ,EAAA,GAAG0Z,EAAA,WACnBqT,EAAAh2B,EAAA+e,UAAAkW,EAAAj1B,EAAAif,UAAA,eAAA0D,EAAA,cAGA/c,OACAovB,KAAAgB,MAUAf,EAAA17B,UAAAgL,OAAA,SAAA4c,GAEA,WADA,KAAAA,IAA8BA,EAAA,KAC9BnpB,KAAA+oB,UACAviB,SACA4iB,WAAAD,EACAH,gBAAA,aAOAiU,EAAA17B,UAAA08B,WAAA,SAAAle,GACA,MAAA/f,MAAAonB,MAAA6V,EAAA,cAAAlU,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK8O,MAAUjf,OAAAmQ,EAAA,IAAQuP,YAAgBc,KAAA,mBAA6BvB,QAsBtFkd,EAAA17B,UAAA28B,oBAAA,SAAAne,GAEA,OADA+G,MACA7kB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C6kB,EAAA7kB,EAAA,GAAAC,UAAAD,EAEA,IAAA2rB,GAAA5tB,KAAAonB,MAAA6V,EAAA,WACA,OAAArP,GAAA/G,OAAAzkB,MAAAwrB,EAAA9G,GAAAiC,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK8O,MAAUjf,OAAAmQ,EAAA,IAAQuP,YAAgBc,KAAA,iBAA2BvB,QAMpFkd,EAAA17B,UAAA48B,6BAAA,SAAApe,GACA,MAAA/f,MAAAonB,MAAA6V,EAAA,gCAAAlU,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK8O,MAAUjf,OAAAmQ,EAAA,IAAQuP,YAAgBc,KAAA,0BAAoCvB,OACjF1T,MAAA,SAAAvI,GAAsB,MAAAA,GAAAs6B,WAKlCnB,EAAA17B,UAAAqyB,QAAA,WACA,MAAA5zB,MAAAonB,MAAA6V,EAAA,WAAAlU,WAAA7f,KAAA,SAAA0E,GACA,MAAgB9M,QAAAmQ,EAAA,GAAGrD,EAAA,WACnBA,EAAAywB,QAGAzwB,KAOAqvB,EAAA17B,UAAA+8B,eAAA,SAAAC,GACA,GAAA3Q,GAAA5tB,KAAAonB,MAAA6V,EAAA,2BAEA,OADArP,GAAA7N,MAAA5Y,IAAA,eAAAo3B,EAAA,KACA3Q,EAAA7E,WAAA7f,KAAA,SAAA0E,GAEA,MAAA5H,MAAAqG,MAA8BvL,OAAAmQ,EAAA,GAAGrD,EAAA,kBAAAA,EAAA4wB,eAAA5wB,MASjCqvB,EAAA17B,UAAAk9B,uBAAA,SAAApjB,EAAAqjB,OACA,KAAAA,IAA4CA,EAAA,KAC5C,IAAA9T,IACA8T,mBAAgC59B,OAAAmQ,EAAA,GAAMoQ,EAAA,uCAAAqd,GACtCrjB,WAAwBva,OAAAmQ,EAAA,GAAMoQ,EAAA,+BAAAhG,GAE9B,OAAArb,MAAAonB,MAAA6V,EAAA,6BAAAlU,UACAzX,KAAkBxQ,OAAAmQ,EAAA,GAAG2Z,MAMrBqS,EAAA17B,UAAAo9B,mBAAA,SAAAC,EAAAC,EAAAC,GACA,MAAA9+B,MAAAonB,MAAA6V,EAAA,6BAAA2B,EAAA,aAAAC,EAAA,YAAAC,EAAA,MAAA/V,WAAA7f,KAAA,SAAA0E,GAEA,MAAA5H,MAAAqG,MAA8BvL,OAAAmQ,EAAA,GAAGrD,EAAA,sBAAAA,EAAAmxB,mBAAAnxB,MAMjCqvB,EAAA17B,UAAAy9B,kBAAA,WACA,MAAAh/B,MAAAonB,MAAA6V,EAAA,qBAAAlU,WAAA7f,KAAA,SAAA0E,GACA,MAAgB9M,QAAAmQ,EAAA,GAAGrD,EAAA,qBACnBA,EAAAqxB,kBAGArxB,KAQAqvB,EAAA17B,UAAA29B,8BAAA,WACA,MAAAl/B,MAAAonB,MAAA6V,EAAA,SAAAtW,OAAA,8BAAAzlB,MAAAgI,KAAA,SAAArI,GAA2G,MAAAA,GAAAs+B,8BAU3GlC,EAAA17B,UAAA69B,+BAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,WADA,KAAAD,IAA4CA,GAAA,GAC5Cv/B,KAAAonB,MAAA6V,EAAA,oCAAAlU,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBsuB,qBACAC,iBACAH,aACAI,oBACAC,YACAC,WAAAL,EACA9e,YAAqCc,KAAA,oBAErCd,YAAiCc,KAAA,gDAGxBpY,KAAA,SAAA02B,GACT,gBAAAA,EAAAC,+BACAD,EAAAC,+BAAA1E,QAEAyE,KAGA3C,GACCvP,IAKDoS,GAAA,SAAAh4B,GAEA,QAAAg4B,KACA,cAAAh4B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASoe,EAAAh4B,GAIbi4B,EAAAD,EAMAA,EAAAv+B,UAAA0oB,IAAA,SAAArT,GACA,GAAA5O,GAAAhI,IACA,iBAAA4W,KACAA,GAAoBwnB,KAAAxnB,GAEpB,IAAAgU,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,yCAAAzK,GACjC,OAAA5W,MAAAonB,MAAA2Y,EAAA,MAAAhX,UAAsDzX,KAAAsZ,IAAiB1hB,KAAA,SAAAxI,GACvE,MAAmBI,QAAAmQ,EAAA,GAAMjJ,EAAAuhB,QAAA7oB,EAAA8oB,IAAA9oB,MAQzBo/B,EAAAv+B,UAAAgoB,QAAA,SAAAC,GACA,GAAA/oB,GAAA,GAAAu/B,IAAAhgC,KAEA,OADAS,GAAAqpB,OAAA,IAAAN,EAAA,KACA/oB,GAKAq/B,EAAAv+B,UAAAkM,MAAA,WACA,MAAAzN,MAAAonB,MAAA2Y,EAAA,aAAAhX,WAEA,IAAAgX,EAIA,OAHAD,GAAAC,EAA4Bj/B,OAAA4gB,EAAA,IAC5BH,EAAA,aACAue,IAECxX,GAID0X,GAAA,SAAAl4B,GAEA,QAAAk4B,KACA,cAAAl4B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA2BA,MA7BIc,QAAA4gB,EAAA,GAASse,EAAAl4B,GAIbhH,OAAAC,eAAAi/B,EAAAz+B,UAAA,WACAL,IAAA,WACA,UAAA++B,IAAAjgC,OAEAiB,YAAA,EACAD,cAAA,IAKAg/B,EAAAz+B,UAAA2+B,KAAA,WACA,MAAAlgC,MAAAonB,MAAA4Y,EAAA,QAAAjX,YAKAiX,EAAAz+B,UAAA4+B,OAAA,WACA,MAAAngC,MAAAonB,MAAA4Y,EAAA,UAAAjX,YAKAiX,EAAAz+B,UAAAgL,OAAA,WACA,MAAAvM,MAAAonB,MAAA4Y,EAAA,iBAAAjX,YAEAiX,GACCrX,GAIDsX,GAAA,SAAAn4B,GAEA,QAAAm4B,KACA,cAAAn4B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASue,EAAAn4B,GAIbs4B,EAAAH,EAMAA,EAAA1+B,UAAA0oB,IAAA,SAAArT,GACA,gBAAAA,KACAA,GAAoBwnB,KAAAxnB,GAEpB,IAAAgU,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,yCAAAzK,GACjC,OAAA5W,MAAAonB,MAAAgZ,EAAA,MAAArX,UAAqDzX,KAAAsZ,IAAiB1hB,KAAA,SAAAxI,GACtE,MAAmBI,QAAAmQ,EAAA,GAAM,GAAA+uB,IAAA3f,EAAA3f,SAGzB,IAAA0/B,EAIA,OAHAH,GAAAG,EAA0Bt/B,OAAA4gB,EAAA,IAC1BH,EAAA,YACA0e,IAEC3X,GAMDuV,GAAA,SAAA/1B,GAEA,QAAA+1B,KACA,cAAA/1B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASmc,EAAA/1B,GAIbu4B,EAAAxC,EAMAA,EAAAt8B,UAAAgoB,QAAA,SAAAC,GACA,GAAAnpB,GAAA,GAAAyzB,IAAA9zB,KAEA,OADAK,GAAAypB,OAAA,IAAAN,EAAA,KACAnpB,GAOAw9B,EAAAt8B,UAAA++B,kBAAA,SAAAC,GAEA,UAAAzM,IAAA9zB,KAAAinB,UAAA,sBAAAsZ,EAAA,OAQA1C,EAAAt8B,UAAAknB,KAAA,SAAAA,EAAA+X,GAQA,WAPA,KAAAA,IAAiCA,GAAA,GACjCA,EACAxgC,KAAA+f,MAAA5Y,IAAA,aAAAiQ,mBAAA,kCAAAqR,IAGAzoB,KAAA+f,MAAA5Y,IAAA,aAAAiQ,mBAAA,mBAAAqR,IAEAzoB,MAMA69B,EAAAt8B,UAAAk/B,SAAA,WACA,MAAAzgC,MAAAkB,IAAA,GAAAw/B,IAAA1gC,QAQA69B,EAAAt8B,UAAAo/B,OAAA,SAAAC,EAAAC,OACA,KAAAD,IAAqCA,EAAA,SACrC,KAAAC,IAAsCA,EAAA,qCAC9BngB,EAAA,EAAM7Q,MAAA,oHAGd,IAAAixB,GAAA,GAAAT,GAAArgC,KAAA,IAAA0oB,IAAAkY,GAAA5gB,WACAxZ,SACA8d,OAAAuc,IAaA,OANA7gC,MAAA+f,MAAAtZ,QAAA,SAAAxB,EAAAiC,GACA,gCAAA3B,KAAA2B,IACA45B,EAAA/gB,MAAA5Y,IAAAD,EAAAjC,KAIA,GAAAmE,SAAA,SAAAC,EAAAC,GAEA,GAAAy3B,MAEAC,EAAA,SAAAC,MAEA5wB,KAAAjO,MAAA2+B,EAAAE,EAAA9F,SAEA8F,EAAAC,QACAD,EAAAE,UAAAj4B,KAAA83B,GAAAn3B,MAAAP,GAGAD,EAAA03B,GAIAD,GAAAL,WAAAv3B,KAAA83B,GAAAn3B,MAAAP,MASAu0B,EAAAt8B,UAAA0oB,IAAA,SAAAU,EAAAyW,GACA,GAAAp5B,GAAAhI,SACA,KAAA2qB,IAAoCA,UACpC,KAAAyW,IAAoDA,EAAA,KACpD,IAAAC,GAAArhC,KAAA4nB,oBACA,OAAA5nB,MAAAshC,6BAAAF,GAAAl4B,KAAA,SAAAq4B,GACA,GAAA3W,GAA2B9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAAkgB,GAAA5W,IACrC6W,EAAAx5B,EAAAof,MAAAiZ,EAAA,IAAAtX,UAA6DzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC9E,OACAA,OACA6zB,KAAAz5B,EAAAuhB,QAAA3b,EAAAkd,MAIA,OADAuW,KACAG,KAQA3D,EAAAt8B,UAAA+/B,6BAAA,SAAAI,GACA,MAAAA,GACAt4B,QAAAC,QAAAq4B,GACA1hC,KAAA+mB,UAAAkW,IAAAiC,gCAEA,IAAAmB,EAIA,OAHAxC,GAAAwC,EAAsBv/B,OAAA4gB,EAAA,IACtBH,EAAA,UACAsc,IAECvV,GAKDwL,GAAA,SAAAhsB,GAEA,QAAAgsB,KACA,GAAA9rB,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAOA,OADAgI,GAAAuE,OAAAvE,EAAAkhB,gBACAlhB,EAwNA,MAjOIlH,QAAA4gB,EAAA,GAASoS,EAAAhsB,GAWbhH,OAAAC,eAAA+yB,EAAAvyB,UAAA,mBAKAL,IAAA,WACA,UAAAm0B,IAAAr1B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,eAKAL,IAAA,WACA,UAAA2zB,IAAA70B,KAAA,gBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,YAIAL,IAAA,WACA,UAAA4+B,IAAA9/B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,4BAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,6BAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,iCAKAL,IAAA,WACA,UAAA+kB,GAAAjmB,KAAA,kCAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,qBAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,sBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,qBAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,sBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,sBAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,uBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,UAKAL,IAAA,WACA,UAAAuyB,IAAAzzB,KAAA,WAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,QAKAL,IAAA,WACA,UAAAygC,IAAA3hC,KAAA,SAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+yB,EAAAvyB,UAAA,YAIAL,IAAA,WACA,UAAA0gC,IAAA5hC,OAEAiB,YAAA,EACAD,cAAA,IASA8yB,EAAAvyB,UAAA4oB,OAAA,SAAAQ,EAAAxB,EAAAiY,GACA,GAAAp5B,GAAAhI,IAGA,YAFA,KAAAmpB,IAA8BA,EAAA,SAC9B,KAAAiY,IAAoDA,EAAA,MACpD,GAAAh4B,SAAA,SAAAC,EAAAC,GACA,GAAA+3B,GAAAr5B,EAAA4f,oBACA,OAAA5f,GAAAs5B,6BAAAF,GAAAl4B,KAAA,SAAAq4B,GACA,GAAA3W,GAA+B9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAAkgB,GAAA5W,GAEzC,OADA0W,KACAr5B,EAAA+gB,UACAzX,KAAAsZ,EACApkB,SACA4iB,WAAAD,EACAH,gBAAA,UAEiB,GAAA6Y,KAAA34B,KAAA,SAAA0E,GACjBvE,GACAuE,OACA6zB,KAAAz5B,QAGa6B,MAAA,SAAAkB,GAAsB,MAAAzB,GAAAyB,QAMnC+oB,EAAAvyB,UAAAugC,WAAA,WACA,MAAA9hC,MAAAonB,MAAA0M,EAAA,WAAA/K,YAKA+K,EAAAvyB,UAAA2+B,KAAA,WACA,MAAAlgC,MAAAonB,MAAA0M,EAAA,QAAA/K,YAKA+K,EAAAvyB,UAAA4+B,OAAA,WACA,MAAAngC,MAAAonB,MAAA0M,EAAA,UAAA/K,YAKA+K,EAAAvyB,UAAAqyB,QAAA,WACA,MAAA5zB,MAAAonB,MAAA0M,EAAA,WAAA/K,YAQA+K,EAAAvyB,UAAAwgC,gBAAA,SAAAlF,OACA,KAAAA,IAAgCA,EAAA,EAChC,IAAAx8B,GAAAL,KAAAonB,MAAA0M,EAAA,2BAEA,OADAzzB,GAAA0f,MAAA5Y,IAAA,UAAA01B,GACAx8B,EAAA0oB,WAAA7f,KAAA,SAAA0E,GAEA,MAAgB9M,QAAAmQ,EAAA,GAAGrD,EAAA,mBACnBA,EAAAo0B,gBAEAp0B,KASAkmB,EAAAvyB,UAAA0gC,uBAAA,SAAA5C,EAAA6C,GAEA,WADA,KAAAA,IAA2CA,GAAA,GAC3CliC,KAAAonB,MAAA0M,EAAA,0BAAA/K,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAKouB,aAAAE,mBAAA2C,OAQvBpO,EAAAvyB,UAAA+/B,6BAAA,SAAAI,GACA,MAAAA,GACAt4B,QAAAC,QAAAq4B,GACA1hC,KAAA+mB,UAAAkW,GAAAj9B,KAAAinB,UAAA7G,OAAA,EAAApgB,KAAAinB,UAAAd,YAAA,OAAA+Y,iCAEApL,GACChC,IAKD8P,GAAA,SAAA95B,GAEA,QAAA85B,KACA,cAAA95B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAeA,MAjBIc,QAAA4gB,EAAA,GAASkgB,EAAA95B,GASb85B,EAAArgC,UAAAgoB,QAAA,SAAA4Y,GACA,GAAAl9B,GAAA,GAAAm9B,IAAApiC,KAEA,OADAiF,GAAA6kB,OAAA,IAAAqY,EAAA,KACAl9B,GAEA28B,EAAmB9gC,OAAA4gB,EAAA,IACnBH,EAAA,aACAqgB,IAECtZ,GAKD8Z,GAAA,SAAAt6B,GAEA,QAAAs6B,KACA,GAAAp6B,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAOA,OADAgI,GAAAuE,OAAAvE,EAAAkhB,gBACAlhB,EAEA,MAXIlH,QAAA4gB,EAAA,GAAS0gB,EAAAt6B,GAWbs6B,GACCzZ,GAID0Z,GAAA,WACA,QAAAA,GAAA3mB,EAAA4mB,EAAAnH,GACAn7B,KAAA0b,SACA1b,KAAAsiC,UACAtiC,KAAAm7B,UAsBA,MApBAr6B,QAAAC,eAAAshC,EAAA9gC,UAAA,WAIAL,IAAA,WACA,sBAAAlB,MAAAsiC,SAAAtiC,KAAAsiC,QAAAngC,OAAA,GAEAlB,YAAA,EACAD,cAAA,IAKAqhC,EAAA9gC,UAAA4/B,QAAA,WACA,GAAAnhC,KAAAkhC,QAAA,CAEA,MADA,IAAArD,IAAA79B,KAAAsiC,QAAA,MAAApb,cAAAlnB,KAAA0b,QACA+kB,WAEA,UAAAr3B,SAAA,SAAAtF,GAAyC,MAAAA,GAAA,SAEzCu+B,KAEA3B,GAAA,SAAA54B,GAEA,QAAA44B,GAAA6B,GACA,GAAAv6B,GAAAF,EAAAvH,KAAAP,WAEA,OADAgI,GAAAu6B,UACAv6B,EAaA,MAjBIlH,QAAA4gB,EAAA,GAASgf,EAAA54B,GAMb44B,EAAAn/B,UAAA8K,MAAA,SAAAvI,GACA,GAAAkE,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACAtB,EAAAw6B,YAAA1+B,EAAAwF,IACAxF,EAAAmM,OAAA/G,KAAA,SAAA+G,GACA,GAAAqyB,GAAkCxhC,OAAAmQ,EAAA,GAAGhB,EAAA,MAAenP,OAAAmQ,EAAA,GAAGhB,EAAAvP,EAAA,UAAAuP,EAAAvP,EAAA+hC,OAAAxyB,EAAA,iBACvD5G,GAAA,GAAAg5B,IAAAr6B,EAAAu6B,QAAAD,EAAAt6B,EAAA06B,eAAAzyB,UAKAywB,GACEpd,EAAA,GACFue,GAAA,SAAA/5B,GAEA,QAAA+5B,KACA,cAAA/5B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAYA,MAdIc,QAAA4gB,EAAA,GAASmgB,EAAA/5B,GAIb+5B,EAAAtgC,UAAA8K,MAAA,SAAAvI,GACA,GAAAkE,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACAtB,EAAAw6B,YAAA1+B,EAAAwF,IACAD,GACAs5B,aAAA7+B,EAAA0C,QAAAtF,IAAA,aAKA2gC,GACEve,EAAA,GAMFqQ,GAAA,SAAA7rB,GAEA,QAAA6rB,KACA,cAAA7rB,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASiS,EAAA7rB,GAIb86B,EAAAjP,EAMAA,EAAApyB,UAAAwpB,UAAA,SAAApqB,GACA,GAAAqE,GAAA,GAAA28B,IAAA3hC,KAEA,OADAgF,GAAA8kB,OAAA,KAAAnpB,EAAA,MACAqE,GAUA2uB,EAAApyB,UAAA0oB,IAAA,SAAA3kB,EAAAkwB,EAAAqN,GACA,GAAA76B,GAAAhI,IAEA,YADA,KAAA6iC,IAAyCA,GAAA,GACzC,GAAAD,GAAA5iC,KAAA,iBAAA6iC,EAAA,SAAAv9B,EAAA,MACAyjB,UACAzX,KAAAkkB,IACStsB,KAAA,SAAAoJ,GACT,OACA1E,KAAA0E,EACAmjB,KAAAztB,EAAA+iB,UAAAzlB,OAcAquB,EAAApyB,UAAAuhC,WAAA,SAAAx9B,EAAAkwB,EAAAuN,EAAAF,EAAAG,GACA,GAAAh7B,GAAAhI,IAIA,YAHA,KAAA6iC,IAAyCA,GAAA,OACzC,KAAAG,IAAmCA,EAAA,UACnChjC,KAAAonB,MAAAwb,EAAA,iBAAAC,EAAA,SAAAv9B,EAAA,SACAyjB,WACA7f,KAAA,WAA+B,MAAAlB,GAAA+iB,UAAAzlB,KAC/B4D,KAAA,SAAAusB,GAAmC,MAAAA,GAAAwN,kBAAAzN,EAAAuN,EAAAC,MASnCrP,EAAApyB,UAAA2hC,gBAAA,SAAAC,EAAAC,GACA,GAAAp7B,GAAAhI,IACA,OAAAA,MAAAonB,MAAAwb,EAAA,8BAAAO,EAAA,sBAAAC,EAAA,QACAra,WAAA7f,KAAA,SAAAoJ,GACA,OACA1E,KAAA0E,EACAmjB,KAAAztB,EAAA+iB,UAAAoY,MAIA,IAAAP,EAIA,OAHAjP,GAAAiP,EAAsB9hC,OAAA4gB,EAAA,IACtBH,EAAA,UACAoS,IAECrL,GAKDqZ,GAAA,SAAA75B,GAEA,QAAA65B,KACA,cAAA75B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA+TA,MAjUIc,QAAA4gB,EAAA,GAASigB,EAAA75B,GAIbhH,OAAAC,eAAA4gC,EAAApgC,UAAA,qBAKAL,IAAA,WACA,UAAAynB,GAAA3oB,KAAA,sBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA4gC,EAAApgC,UAAA,YAKAL,IAAA,WACA,UAAAmiC,IAAArjC,OAEAiB,YAAA,EACAD,cAAA,IAQA2gC,EAAApgC,UAAA+hC,QAAA,SAAAC,GAEA,WADA,KAAAA,IAAiCA,EAAA,IACjCvjC,KAAAonB,MAAAua,EAAA,oBAAA4B,EAAA,MAAAxa,YAWA4Y,EAAApgC,UAAAiiC,aAAA,SAAAC,GACA,MAAAzjC,MAAAonB,MAAAua,EAAA,8BAAA8B,EAAA,SAAA1a,YAQA4Y,EAAApgC,UAAAmiC,QAAA,SAAAH,EAAAI,GAGA,OAFA,KAAAJ,IAAiCA,EAAA,QACjC,KAAAI,IAAqCA,EAAAlW,GAAAmW,OACrCL,EAAAphC,OAAA,KACA,KAAA4G,OAAA,iDAEA,OAAA/I,MAAAonB,MAAAua,EAAA,oBAAA4B,EAAA,iBAAAI,EAAA,KAAA5a,YAKA4Y,EAAApgC,UAAAsiC,SAAA,WACA,MAAA7jC,MAAAonB,MAAAua,EAAA,YAAA5Y,YAQA4Y,EAAApgC,UAAAuiC,OAAA,SAAAx+B,EAAAu9B,GAEA,WADA,KAAAA,IAAyCA,GAAA,GACzC7iC,KAAAonB,MAAAua,EAAA,qBAAAr8B,EAAA,gBAAAu9B,EAAA,KAAA9Z,YAOA4Y,EAAApgC,UAAAgL,OAAA,SAAA4c,GAEA,WADA,KAAAA,IAA8BA,EAAA,KAC9BnpB,KAAAonB,MAAAua,EAAA,MAAA5Y,UACAviB,SACA4iB,WAAAD,EACAH,gBAAA,aAUA2Y,EAAApgC,UAAAwiC,KAAA,SAAAR,GAEA,OADA,KAAAA,IAAiCA,EAAA,IACjCA,EAAAphC,OAAA,KACA,KAAA4G,OAAA,iDAEA,OAAA/I,MAAAonB,MAAAua,EAAA,iBAAA4B,EAAA,MAAAxa,YAQA4Y,EAAApgC,UAAAyiC,yBAAA,SAAAC,GAEA,WADA,KAAAA,IAA+BA,EAAAC,GAAAC,QAC/B,GAAA1R,IAAAzyB,KAAA,kCAAAikC,EAAA,MAQAtC,EAAApgC,UAAA6xB,OAAA,SAAA9tB,EAAA8+B,GAEA,WADA,KAAAA,IAAwCA,EAAAC,GAAAC,WACxCtkC,KAAAonB,MAAAua,EAAA,kBAAAr8B,EAAA,WAAA8+B,EAAA,KAAArb,YAOA4Y,EAAApgC,UAAAgjC,QAAA,SAAAhB,GAEA,OADA,KAAAA,IAAiCA,EAAA,IACjCA,EAAAphC,OAAA,KACA,KAAA4G,OAAA,iDAEA,OAAA/I,MAAAonB,MAAAua,EAAA,oBAAA4B,EAAA,MAAAxa,YAOA4Y,EAAApgC,UAAAqyB,QAAA,WACA,MAAA5zB,MAAAonB,MAAAua,EAAA,WAAA5Y,YAMA4Y,EAAApgC,UAAAijC,aAAA,WACA,MAAAxkC,MAAAonB,MAAAua,EAAA,gBAAA5Y,YAOA4Y,EAAApgC,UAAAkjC,UAAA,SAAAlB,GAEA,OADA,KAAAA,IAAiCA,EAAA,IACjCA,EAAAphC,OAAA,KACA,KAAA4G,OAAA,iDAEA,OAAA/I,MAAAonB,MAAAua,EAAA,sBAAA4B,EAAA,MAAAxa,YAMA4Y,EAAApgC,UAAAu0B,QAAA,WACA,MAAA91B,MAAAonB,MAAAua,EAAA,aAAAzgC,IAAA,GAAyDoiB,GAAA,GAAe9c,SAAWk+B,yBAAA,WAMnF/C,EAAApgC,UAAAy0B,QAAA,WACA,MAAAh2B,MAAAonB,MAAAua,EAAA,aAAAzgC,IAAA,GAAyDoiB,GAAA,GAAe9c,SAAWk+B,yBAAA,WAKnF/C,EAAApgC,UAAA00B,UAAA,WACA,MAAAj2B,MAAAonB,MAAAua,EAAA,aAAAzgC,IAAA,GAAyDoiB,GAAA,GAAiB9c,SAAWk+B,yBAAA,WAKrF/C,EAAApgC,UAAA20B,QAAA,WACA,MAAAl2B,MAAAonB,MAAAua,EAAA,aAAAzgC,IAAA,GAAyDoiB,GAAA,GAAe9c,SAAWk+B,yBAAA,WAQnF/C,EAAApgC,UAAA40B,WAAA,SAAAX,GACA,GAAAxtB,GAAAhI,IACA,OAAAA,MAAAonB,MAAAua,EAAA,aAAA5Y,UACAzX,KAAAkkB,EACAhvB,SACAwiB,gBAAA,SAES9f,KAAA,SAAAM,GAAqB,UAAAm4B,GAAA35B,MAK9B25B,EAAApgC,UAAA4K,QAAA,WAEA,OADAya,MACA3kB,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/C2kB,EAAA3kB,GAAAC,UAAAD,EAEA,IAAA2rB,GAAA5tB,KAAA6zB,iBACA,OAAAjG,GAAAjH,OAAAvkB,MAAAwrB,EAAAhH,GAAA1lB,MAAAgI,KAAA,SAAAxI,GACA,MAAmBI,QAAAmQ,EAAA,GAAM,GAAA6iB,IAAAzT,EAAA3f,UAUzBihC,EAAApgC,UAAA0hC,kBAAA,SAAAxN,EAAAsN,EAAAC,GACA,GAAAh7B,GAAAhI,SACA,KAAAgjC,IAAmCA,EAAA,cACnC5/B,KAAA2/B,IACAA,EAAA,WAAoC,aAEpC,IAAA4B,GAAAlP,EAAAjoB,KACAo3B,EAAAjnB,UAAA8X,EAAAjoB,KAAAw1B,GAAA9+B,WAAA,KAAAuxB,EAAAjoB,KAAAw1B,GAAA,OACAS,EAAuB3iC,OAAAmQ,EAAA,IAEvB8xB,IAAkBU,WAAAoB,YAAA,EAAA7B,YAAA8B,eAAA,EAAAH,WAAAI,MAAA,WAAAC,YAAAJ,GASlB,QARAhP,GAAA51B,KAAAilC,YAAAxB,EAAAhO,EAAAnlB,MAAA,EAAA0yB,IAQA3iC,EAAA,EAAuBA,EAAAukC,EAAgBvkC,KAPvC,SAAAA,GACAu1B,IAAA1sB,KAAA,SAAAg8B,GAEA,MADAnC,IAA0BU,WAAAoB,YAAAxkC,EAAA2iC,YAAA8B,eAAAI,EAAAP,WAAAI,MAAA,WAAAC,YAAAJ,IAC1B58B,EAAAm9B,eAAA1B,EAAAyB,EAAAzP,EAAAnlB,MAAA40B,IAAAlC,OAKA3iC,EAEA,OAAAu1B,GAAA1sB,KAAA,SAAAg8B,GAEA,MADAnC,IAAsBU,WAAAoB,YAAAD,EAAA5B,YAAA8B,eAAAI,EAAAP,WAAAI,MAAA,YAAAC,YAAAJ,IACtB58B,EAAAo9B,aAAA3B,EAAAyB,EAAAzP,EAAAnlB,MAAA40B,OAiBAvD,EAAApgC,UAAA0jC,YAAA,SAAAxB,EAAA4B,GACA,MAAArlC,MAAAonB,MAAAua,EAAA,6BAAA8B,EAAA,SACA1a,UAAuBzX,KAAA+zB,IACvBn8B,KAAA,SAAA/H,GAMA,MAHA,gBAAAA,KACAA,IAAAmkC,aAEAC,WAAApkC,MAcAwgC,EAAApgC,UAAA4jC,eAAA,SAAA1B,EAAA+B,EAAAH,GACA,MAAArlC,MAAAonB,MAAAua,EAAA,gCAAA8B,EAAA,gBAAA+B,EAAA,QACAzc,UAAuBzX,KAAA+zB,IACvBn8B,KAAA,SAAA/H,GAMA,MAHA,gBAAAA,KACAA,IAAAskC,gBAEAF,WAAApkC,MAaAwgC,EAAApgC,UAAA6jC,aAAA,SAAA3B,EAAA+B,EAAAH,GACA,MAAArlC,MAAAonB,MAAAua,EAAA,8BAAA8B,EAAA,gBAAA+B,EAAA,QACAzc,UAAuBzX,KAAA+zB,IACvBn8B,KAAA,SAAAoJ,GACA,OACA1E,KAAA0E,EACAmjB,KAAA,GAAAkM,GAAAthB,EAAA/N,QAIAqvB,GACCrP,IAKD+Q,GAAA,SAAAv7B,GAEA,QAAAu7B,KACA,cAAAv7B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS2hB,EAAAv7B,GAIb49B,EAAArC,EAMAA,EAAA9hC,UAAAgoB,QAAA,SAAA4Y,GACA,GAAAl9B,GAAA,GAAA0gC,IAAA3lC,KAEA,OADAiF,GAAA6kB,OAAA,IAAAqY,EAAA,KACAl9B,GAMAo+B,EAAA9hC,UAAAqkC,UAAA,WACA,UAAAF,GAAA1lC,KAAA,aAAA+oB,YAOAsa,EAAA9hC,UAAAskC,WAAA,SAAA1D,GACA,MAAAniC,MAAAonB,MAAAse,EAAA,kBAAAvD,EAAA,KAAApZ,YAOAsa,EAAA9hC,UAAAukC,YAAA,SAAA3D,GACA,MAAAniC,MAAAonB,MAAAse,EAAA,mBAAAvD,EAAA,KAAApZ,YAOAsa,EAAA9hC,UAAAwkC,cAAA,SAAAC,GACA,MAAAhmC,MAAAonB,MAAAse,EAAA,+BAAAM,EAAA,MAAAjd,YAOAsa,EAAA9hC,UAAA0kC,eAAA,SAAAD,GACA,MAAAhmC,MAAAonB,MAAAse,EAAA,gCAAAM,EAAA,MAAAjd,YAOAsa,EAAA9hC,UAAA2kC,eAAA,SAAAF,GACA,MAAAhmC,MAAAonB,MAAAse,EAAA,gCAAAM,EAAA,MAAAjd,WAEA,IAAA2c,EAIA,OAHArC,GAAAqC,EAA4B5kC,OAAA4gB,EAAA,IAC5BH,EAAA,aACA8hB,IAEC/a,GAKDqd,GAAA,SAAA79B,GAEA,QAAA69B,KACA,GAAA39B,GAAA,OAAAF,KAAA1F,MAAApC,KAAAkC,YAAAlC,IAOA,OADAgI,GAAAuE,OAAAvE,EAAAkhB,gBACAlhB,EAeA,MAxBIlH,QAAA4gB,EAAA,GAASikB,EAAA79B,GAwBb69B,GACChd,IAED,SAAA8E,GACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,0BACCA,YACD,IAAAyW,KACA,SAAAA,GACAA,IAAA,eACAA,IAAA,oBACCA,YACD,IAAAG,KACA,SAAAA,GACAA,IAAA,yBACAA,IAAA,8CACCA,YACD,IAAA8B,KACA,SAAAA,GACAA,IAAA,+BACAA,IAAA,uBACAA,IAAA,uBACAA,IAAA,oCACCA,YAKD,IAkRAC,IAlRAC,GAAA,SAAAv+B,GAEA,QAAAu+B,GAAArlB,EAAAxd,GAEA,WADA,KAAAA,IAA8BA,EAAA,2CAC9BsE,EAAAvH,KAAAP,KAAAkgB,EAAA,gBAAAc,OAAAyF,SAAAjjB,IAAAxD,KA8BA,MAjCIc,QAAA4gB,EAAA,GAAS2kB,EAAAv+B,GASbu+B,EAAA9kC,UAAA+kC,WAAA,SAAA9c,GACA,UAAA+c,IAAAvmC,KAAA,YAAAwpB,EAAA,OAUA6c,EAAA9kC,UAAA0oB,IAAA,SAAAuc,EAAAhR,EAAAqN,GAIA,WAHA,KAAAA,IAAyCA,GAAA,GAEzC,GAAAwD,GAAAnmB,EAAAlgB,KAAAymB,SAAA,2CAAAoc,EAAA,SAAA2D,EAAA,MACAzd,UACAzX,KAAAkkB,IACStsB,KAAA,SAAApF,GACT,OACA8J,KAAA9J,EACA2xB,KAAA,GAAAkM,IAAAthB,EAAAvc,QAIAuiC,GACC/d,GAIDie,GAAA,SAAAz+B,GAEA,QAAAy+B,KACA,cAAAz+B,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAyCA,MA3CIc,QAAA4gB,EAAA,GAAS6kB,EAAAz+B,GAQby+B,EAAAhlC,UAAAklC,OAAA,WACA,MAAAzmC,MAAAonB,MAAAmf,EAAA,UAAAxd,YAMAwd,EAAAhlC,UAAAmlC,QAAA,WACA,MAAA1mC,MAAAonB,MAAAmf,EAAA,WAAAxd,YAKAwd,EAAAhlC,UAAAolC,QAAA,WACA,MAAA3mC,MAAAonB,MAAAmf,EAAA,WAAAxd,YAKAwd,EAAAhlC,UAAAqlC,UAAA,WACA,MAAA5mC,MAAAonB,MAAAmf,EAAA,aAAAxd,YAKAwd,EAAAhlC,UAAAslC,QAAA,WACA,MAAA7mC,MAAAonB,MAAAmf,EAAA,WAAAxd,YAMAwd,EAAAhlC,UAAAiqB,OAAA,WACA,MAAAxrB,MAAAonB,MAAAmf,EAAA,UAAAxd,YAEAwd,GACC5d,GAKDme,GAAA,SAAAh/B,GAEA,QAAAg/B,GAAA9lB,GACA,GAAAhZ,GAAAF,EAAAvH,KAAAP,WAEA,OADAgI,GAAAgZ,UACAhZ,EA8KA,MAlLIlH,QAAA4gB,EAAA,GAASolB,EAAAh/B,GAWbg/B,EAAAC,cAAA,SAAAz1B,GACA,UAAAlI,SAAA,SAAAC,EAAAC,GASA,OAFAmI,GACAC,EAPAs1B,KAGAC,EAAA,GAAArhC,QAAA,qCACAshC,EAAA51B,EAAAgF,MAAA,MACAQ,EAAA,QAGAzW,EAAA,EAA2BA,EAAA6mC,EAAA/kC,SAAkB9B,EAAA,CAC7C,GAAA8mC,GAAAD,EAAA7mC,EACA,QAAAyW,GACA,YACA,GAXA,qBAWAqwB,EAAA/mB,OAAA,EAXA,mBAWAje,QACA2U,EAAA,mBAGA,SAAAqwB,EAAArkB,OACA,KAAA/Z,OAAA,0BAAA1I,EAGA,MACA,oBACA,KAAA8mC,EAAArkB,SACAhM,EAAA,SAEA,MACA,cACA,GAAAyJ,GAAA0mB,EAAAnhC,KAAAqhC,EACA,QAAA5mB,EAAApe,OACA,KAAA4G,OAAA,wBAAA1I,EAEAoR,GAAAkM,SAAA4C,EAAA,OACA7O,EAAA6O,EAAA,GACAzJ,EAAA,eACA,MACA,qBACA,KAAAqwB,EAAArkB,SACAhM,EAAA,OAEA,MACA,YACAkwB,EAAA32B,KAAA,MAAAoB,EAAA,GAAAD,UAAA,GAAAA,UAAA21B,GAA+F11B,SAAAC,gBAC/FoF,EAAA,SAIA,WAAAA,GACAxN,EAAAP,MAAA,4BAEAM,EAAA29B,MAGAF,EAAAvlC,UAAA6lC,YAAA,WACA,GAAAp/B,GAAAhI,IAIA,IAHQ0gB,EAAA,EAAM7Q,MAAA,IAAA7P,KAAAqnC,QAAA,UAAA3kC,OAAAS,UAAA,0BAAAnD,KAAAsnC,SAAAnlC,OAAA,gBAGdnC,KAAAsnC,SAAAnlC,OAAA,EAEA,MADYue,GAAA,EAAM7Q,MAAA,4BAClBzG,QAAAC,SAKA,IAAA8qB,GAAA,GAAAnP,EAGA,OAAAlE,GAAA9gB,KAAAghB,SAAA9X,KAAA,SAAAq+B,GAIA,OAFAC,MACAC,EAAA,GACApnC,EAAA,EAA2BA,EAAA2H,EAAAs/B,SAAAnlC,OAA2B9B,IAAA,CACtD,GAAAqnC,GAAA1/B,EAAAs/B,SAAAjnC,EACA,SAAAqnC,EAAA3lC,QACA0lC,EAAAtlC,OAAA,IAEAqlC,EAAAn3B,KAAA,eAAAo3B,EAAA,UACAA,EAAA,IAEAD,EAAAn3B,KAAA,WAAArI,EAAAq/B,QAAA,QAGAI,EAAAtlC,OAAA,IAEAslC,EAA6C3mC,OAAAmQ,EAAA,KAC7Cu2B,EAAAn3B,KAAA,WAAArI,EAAAq/B,QAAA,MACAG,EAAAn3B,KAAA,sDAAsEo3B,EAAA,UAEtED,EAAAn3B,KAAA,eAAAo3B,EAAA,OAGAD,EAAAn3B,KAAA,oCACAm3B,EAAAn3B,KAAA,wCACA,IAAA7J,GAAA,GAAA0B,SAEA5C,EAA0BxE,OAAAmQ,EAAA,GAAay2B,EAAApiC,KAAAoiC,EAAApiC,IAA8BxE,OAAAmQ,EAAA,GAAOs2B,EAAAG,EAAApiC,IAE5E,IADgBob,EAAA,EAAM7Q,MAAA,IAAA7H,EAAAq/B,QAAA,UAAA3kC,OAAAS,UAAA,oBAAAukC,EAAA3lC,OAAA,IAAAuD,EAAA,gBACtB,QAAAoiC,EAAA3lC,OAAA,CACA,GAAAA,GAAA2lC,EAAA3lC,OACA4lC,EAAAD,EAAA9/B,QAAApB,OACwB1F,QAAAmQ,EAAA,GAAGy2B,EAAA,YAAwB5mC,OAAAmQ,EAAA,GAAGy2B,EAAA9/B,QAAA,gBAAAxE,KAAAukC,EAAA,mBACtD5lC,EAAA4lC,EAAA,uBACAA,GAAA,kBAEAH,EAAAn3B,KAAAtO,EAAA,IAAAuD,EAAA,eACAkB,EAAAW,IAAA,mEAGAqgC,GAAAn3B,KAAAq3B,EAAA3lC,OAAA,IAAAuD,EAAA,cAGgBxE,QAAAmQ,EAAA,GAAYzK,EAAAua,EAAAva,SAE5BkhC,EAAA9/B,SACoB9G,OAAAmQ,EAAA,GAAYzK,EAAAkhC,EAAA9/B,QAAApB,SAGhCA,EAAA4e,IAAA,WACA5e,EAAAG,OAAA,6BAEAH,EAAA4e,IAAA,iBACA5e,EAAAG,OAAA,+DAEAH,EAAA4e,IAAA,8BACA5e,EAAAG,OAAA,sDAGAH,EAAAC,QAAA,SAAAC,EAAA/F,GACA6mC,EAAAn3B,KAAA1P,EAAA,KAAA+F,EAAA,QAEA8gC,EAAAn3B,KAAA,MACAq3B,EAAA9/B,QAAA0J,MACAk2B,EAAAn3B,KAAAq3B,EAAA9/B,QAAA0J,KAAA,QAGAm2B,EAAAtlC,OAAA,IAEAqlC,EAAAn3B,KAAA,eAAAo3B,EAAA,UACAA,EAAA,IAEAD,EAAAn3B,KAAA,WAAArI,EAAAq/B,QAAA,OACA,IAAAO,IACAt2B,KAAAk2B,EAAA5jC,KAAA,IACA4C,SACA+d,eAAA,mCAAqDvc,EAAAq/B,SAErDtlC,OAAA,OAGA,OADY2e,GAAA,EAAM7Q,MAAA,IAAA7H,EAAAq/B,QAAA,UAAA3kC,OAAAS,UAAA,8BAClBgxB,EAAAxsB,MAAgC7G,OAAAmQ,EAAA,GAAOs2B,EAAA,gBAAAK,GACvC1+B,KAAA,SAAApF,GAAoC,MAAAA,GAAAs6B,SACpCl1B,KAAA49B,EAAAC,eACA79B,KAAA,SAAA89B,GACA,GAAAA,EAAA7kC,SAAA6F,EAAAs/B,SAAAnlC,OACA,KAAA4G,OAAA,iEAGA,OADgB2X,GAAA,EAAM7Q,MAAA,IAAA7H,EAAAq/B,QAAA,UAAA3kC,OAAAS,UAAA,mCACtB6jC,EAAA7hC,OAAA,SAAAywB,EAAAtjB,EAAA5E,GACA,GAAAwhB,GAAAlnB,EAAAs/B,SAAA55B,EAEA,OADoBgT,GAAA,EAAM7Q,MAAA,IAAAqf,EAAA1F,GAAA,UAAA9mB,OAAAS,UAAA,gCAAA6E,EAAAq/B,QAAA,OAC1BzR,EAAA1sB,KAAA,SAAAM,GAAoD,MAAA0lB,GAAAjkB,OAAAoB,MAAAiG,GAAApJ,KAAAgmB,EAAA7lB,SAAAQ,MAAAqlB,EAAA5lB,WACnCF,QAAAC,gBAIjBy9B,GACExjB,EAAA,IAMF,SAAA8iB,GAIAA,IAAA,6BAIAA,IAAA,uCAIAA,IAAA,wBACCA,YA+GD,IAutCAyB,IAvtCAC,GAAA,SAAAhgC,GAQA,QAAAggC,GAAArS,EAAAsS,EAAAC,OACA,KAAAD,IAAkCA,UAClC,KAAAC,IAA0CA,GAAA,EAC1C,IAAAhgC,GAAAF,EAAAvH,KAAAP,KAAAy1B,IAAAz1B,IAGA,OAFAgI,GAAA+/B,WACA//B,EAAAggC,mBACAhgC,EAqRA,MAlSIlH,QAAA4gB,EAAA,GAASomB,EAAAhgC,GAuBbggC,EAAAx5B,OAAA,SAAA25B,EAAAC,EAAA3R,EAAA4R,GAGA,WAFA,KAAAA,IAAwCA,EAAA,WAExCF,EAAAG,WAAAzS,MAAAhP,OAAA,QAAApjB,OAAA,YAAA2kC,EAAA,KAAAhnC,MAAAgI,KAAA,SAAAm/B,GACA,GAAAA,EAAAlmC,OAAA,EACA,KAAA4G,OAAA,yBAAAm/B,EAAA,oCAAAD,EAAAxhB,QAAA,KAGA,OAAAwhB,GAAAG,WAAAzhB,OAAA,sBAAAzlB,MAAAgI,KAAA,SAAA1F,GACA,GAAA8kC,GAAwCxnC,OAAAmQ,EAAA,GAAO,IAAAzN,EAAA+kC,mBAAA5I,WAAAuI,EAE/C,OAAAD,GAAAG,WAAAzS,MAAAuN,gBAAAoF,EAAAnC,GAAA2B,gBAAA5+B,KAAA,SAAAs/B,GAEA,MAAAA,GAAA/S,KAAAtpB,UAAAjD,KAAA,SAAA7I,GAEA,MAAAA,GAAA8pB,QACAse,gBACAC,IAAA,6CAEAC,eAAA,GACAC,wBAAA,uCACAC,cAAA,2CACAC,eAAAX,EACA/B,cAAA,EACA1P,MAAAH,IACyBrtB,KAAA,SAAA6/B,GAAuB,UAAAjB,GAAAiB,EAAAtH,KAAAhM,KAAAsT,EAAAtH,KAAAuH,6BAWhDlB,EAAAmB,SAAA,SAAAxT,GACA,GAAAyT,GAAA,GAAApB,GAAArS,EACA,OAAAyT,GAAAC,OAAAjgC,KAAA,SAAAM,GAA8C,MAAA0/B,MAO9CpB,EAAAsB,oBAAA,SAAAn5B,GACA,MAAenP,QAAAmQ,EAAA,GAAGhB,GAClBtM,QAAA,eACAA,QAAA,cACAA,QAAA,KAAuB,UACvBA,QAAA,KAAuB,UACvBA,QAAA,WACAA,QAAA,WACAA,QAAA,YAOAmkC,EAAAuB,oBAAA,SAAAC,GASA,MAAAtjC,MAAAqG,MARA,SAAAk9B,GAMA,QAJA,UAAwB,eAAkB,gBAAkB,MAAM,UAAY,MAC9E,uEACA,wDAEApkC,OAAA,SAAArB,EAAAtD,GAAmD,MAAAsD,GAAAH,QAAAnD,EAAA,GAAAA,EAAA,KAAgC+oC,IAEnFD,KAKAxB,EAAAvmC,UAAAioC,WAAA,WACA,GAAAC,GAAA,GAAAC,IAAA1pC,KAAA2hB,EAAA3hB,KAAA+nC,UAEA,OADA/nC,MAAA+nC,SAAA13B,KAAAo5B,GACAA,GAKA3B,EAAAvmC,UAAAooC,OAAA,WAEA5mB,EAAA/iB,KAAA+nC,SACA,IAAAtiC,KACAA,GAAA4K,KAAA,QACA,QAAAhQ,GAAA,EAAuBA,EAAAL,KAAA+nC,SAAA5lC,OAA0B9B,IACjDoF,EAAA4K,KAAArQ,KAAA+nC,SAAA1nC,GAAAspC,SAGA,OADAlkC,GAAA4K,KAAA,UACA5K,EAAA7B,KAAA,KAOAkkC,EAAAvmC,UAAAqoC,SAAA,SAAAnkC,GACA,GAAAuC,GAAAhI,IAiCA,OA/BAA,MAAA+nC,YAEA5lB,EAAA1c,EAAA,oDAAAod,GAEA,GAAA+R,GAAA,iCAA4C9uB,KAAA+c,GAE5CgnB,EAAA,MAAAjV,KAAAzyB,OAAA,IAAAwb,SAAAiX,EAAA,OACAkV,EAAA,IACA,QAAAD,GACA,OAEAC,EAAA,GAAAC,IAAA,QACAD,EAAAF,SAAA/mB,GACA7a,EAAAgiC,kBAAAF,EACA,MACA,QAEAA,EAAA,GAAAG,IAAA,IACAH,EAAAF,SAAA/mB,GACA7a,EAAAkiC,gBAAAJ,EACA,MACA,QAEAA,EAAA,GAAAK,IACAL,EAAAF,SAAA/mB,GACA7a,EAAAkiC,gBAAAJ,MAKA/mB,EAAA/iB,KAAA+nC,UACA/nC,MAKA8nC,EAAAvmC,UAAA4nC,KAAA,WACA,GAAAnhC,GAAAhI,IACA,OAAAA,MAAAmM,QAAA,qCAAAjD,KAAA,SAAAu4B,GACAz5B,EAAA4hC,SAAAnI,EAAAkH,gBACA3gC,EAAAggC,iBAAAvG,EAAAuH,oBAMAlB,EAAAvmC,UAAA6oC,KAAA,WACA,MAAApqC,MAAAqqC,kBAAsC1B,eAAA3oC,KAAA2pC,YAKtC7B,EAAAvmC,UAAA+oC,eAAA,WACA,GAAAtiC,GAAAhI,IACA,OAAAA,MAAAuqC,eAAA,GAAArhC,KAAA,SAAApF,GAEA,MADAkE,GAAAggC,kBAAA,EACAlkC,KAMAgkC,EAAAvmC,UAAAipC,gBAAA,WACA,GAAAxiC,GAAAhI,IACA,OAAAA,MAAAuqC,eAAA,GAAArhC,KAAA,SAAApF,GAEA,MADAkE,GAAAggC,kBAAA,EACAlkC,KAQAgkC,EAAAvmC,UAAAkpC,gBAAA,SAAAjhB,GACA,MAAAxpB,MAAA0qC,YAAA,SAAAjqC,GAA8C,MAAAA,GAAA+oB,UAO9Cse,EAAAvmC,UAAAmpC,YAAA,SAAAC,GAEA,OAAAtqC,GAAA,EAAuBA,EAAAL,KAAA+nC,SAAA5lC,OAA0B9B,IAEjD,OAAA6X,GAAA,EAA2BA,EAAAlY,KAAA+nC,SAAA1nC,GAAA2iB,QAAA7gB,OAAqC+V,IAEhE,OAAAhR,GAAA,EAA+BA,EAAAlH,KAAA+nC,SAAA1nC,GAAA2iB,QAAA9K,GAAA+K,SAAA9gB,OAAiD+E,IAEhF,GAAAyjC,EAAA3qC,KAAA+nC,SAAA1nC,GAAA2iB,QAAA9K,GAAA+K,SAAA/b,IACA,MAAAlH,MAAA+nC,SAAA1nC,GAAA2iB,QAAA9K,GAAA+K,SAAA/b,EAMA,cAOA4gC,EAAAvmC,UAAAgpC,cAAA,SAAAK,GACA,MAAA5qC,MAAAmM,UAAAjD,KAAA,SAAA7I,GAEA,MADA,IAAAyzB,IAAAzzB,EAAA,wBAAAuqC,EAAA,KACAzgB,cAQA2d,EAAAvmC,UAAA2oC,gBAAA,SAAAJ,GACA,GAAAL,GAAA,KACAoB,EAAA,KACA9C,EAAA/nC,KAAA+nC,SAAAxkC,OAAA,SAAA7B,GAA0D,MAAAA,GAAAogB,QAAAgoB,EAAAgB,YAAA1sB,SAAAkV,WAC1DyU,GAAA5lC,OAAA,GACAsnC,EAAA,GAAAC,IAAA1pC,KAAA8pC,EAAAgB,YAAA1sB,SAAAkV,WACAtzB,KAAA+nC,SAAA13B,KAAAo5B,IAGAA,EAAA1B,EAAA,EAEA,IAAA/kB,GAAAymB,EAAAzmB,QAAAzf,OAAA,SAAA9C,GAA2D,MAAAA,GAAAqhB,QAAAgoB,EAAAgB,YAAA1sB,SAAA2sB,cAC3D/nB,GAAA7gB,OAAA,GACA0oC,EAAA,GAAAd,IAAAN,EAAAK,EAAAgB,YAAA1sB,SAAA2sB,aAAAjB,EAAAgB,YAAA1sB,SAAA4sB,eACAvB,EAAAzmB,QAAA3S,KAAAw6B,IAGAA,EAAA7nB,EAAA,GAEA8mB,EAAAe,SACAA,EAAAI,WAAAnB,IAQAhC,EAAAvmC,UAAAyoC,kBAAA,SAAAa,GACA,GAAApB,GAAA,KACA1B,EAAA/nC,KAAA+nC,SAAAxkC,OAAA,SAAA7B,GAA0D,MAAAA,GAAAogB,QAAA+oB,EAAAC,YAAA1sB,SAAAkV,WAC1DyU,GAAA5lC,OAAA,GACAsnC,EAAA,GAAAC,IAAA1pC,KAAA6qC,EAAAC,YAAA1sB,SAAAkV,WACAtzB,KAAA+nC,SAAA13B,KAAAo5B,IAGAA,EAAA1B,EAAA,GAEA8C,EAAApB,UACAA,EAAAzmB,QAAA3S,KAAAw6B,IAQA/C,EAAAvmC,UAAA8oC,iBAAA,SAAA1f,EAAAxB,GAEA,WADA,KAAAA,IAA8BA,EAAA,KAC9BnpB,KAAAmM,UAAAjD,KAAA,SAAA7I,GAAiD,MAAAA,GAAA8pB,OAAAQ,EAAAxB,MAEjD2e,GACCnG,IACD+H,GAAA,WACA,QAAAA,GAAAR,EAAApnB,EAAAkB,OACA,KAAAA,IAAiCA,MACjChjB,KAAAkpC,OACAlpC,KAAA8hB,QACA9hB,KAAAgjB,UACAhjB,KAAAkrC,OAAsBpqC,OAAAmQ,EAAA,KA+CtB,MA7CAnQ,QAAAC,eAAA2oC,EAAAnoC,UAAA,iBAIAL,IAAA,WAIA,MAHAlB,MAAAgjB,QAAA7gB,OAAA,GACAnC,KAAAmrC,UAAA,IAEAnrC,KAAAgjB,QAAA,IAEA/hB,YAAA,EACAD,cAAA,IAKA0oC,EAAAnoC,UAAA4pC,UAAA,SAAAC,GACA,GAAAP,GAAA,GAAAd,IAAA/pC,KAAA2hB,EAAA3hB,KAAAgjB,SAAAooB,EAEA,OADAprC,MAAAgjB,QAAA3S,KAAAw6B,GACAA,GAOAnB,EAAAnoC,UAAA0pC,WAAA,SAAAnB,GAEA,MADA9pC,MAAAqrC,cAAAJ,WAAAnB,GACA9pC,MAEA0pC,EAAAnoC,UAAAooC,OAAA,WAEA,OADAlkC,MACApF,EAAA,EAAuBA,EAAAL,KAAAgjB,QAAA7gB,OAAyB9B,IAChDoF,EAAA4K,KAAArQ,KAAAgjB,QAAA3iB,GAAAspC,SAEA,OAAAlkC,GAAA7B,KAAA,KAKA8lC,EAAAnoC,UAAAiqB,OAAA,WACA,GAAAxjB,GAAAhI,IACAA,MAAAkpC,KAAAnB,SAAA/nC,KAAAkpC,KAAAnB,SAAAxkC,OAAA,SAAAkmC,GAA2E,MAAAA,GAAAyB,SAAAljC,EAAAkjC,SAC3EnoB,EAAA/iB,KAAAkpC,KAAAnB,WAEA2B,KAEA4B,GAAA,WACA,QAAAA,GAAAzB,EAAA0B,EAAAV,EAAA/oB,EAAA0H,EAAAshB,OACA,KAAAD,IAAgCA,EAAA,UAChC,KAAA/oB,IAA+BA,EAAA,OAC/B,KAAA0H,IAA4BA,EAAM1oB,OAAAmQ,EAAA,UAClC,KAAA65B,IAAqCA,EAAA,MACrC9qC,KAAA6pC,cACA7pC,KAAAurC,cACAvrC,KAAA6qC,SACA7qC,KAAA8hB,QACA9hB,KAAAwpB,KACAxpB,KAAA8qC,cAkBA,MAhBAhqC,QAAAC,eAAAuqC,EAAA/pC,UAAA,YAIAL,IAAA,WACA,MAAA4mC,IAAAsB,oBAAAppC,KAAAwrC,mBAEAvqC,YAAA,EACAD,cAAA,IAEAsqC,EAAA/pC,UAAAqoC,SAAA,SAAAnkC,GACAzF,KAAA8qC,YAAAhD,GAAAuB,oBAA8DvoC,OAAAmQ,EAAA,GAAsBxL,EAAA,wBACpFzF,KAAAurC,YAA2BzqC,OAAAmQ,EAAA,GAAsBxL,EAAA,6BACjDzF,KAAA6pC,YAAA7pC,KAAA8qC,YAAAjB,YACA7pC,KAAAwpB,GAAAxpB,KAAA8qC,YAAAthB,IAEA8hB,KAEAvB,GAAA,SAAAjiC,GAEA,QAAAiiC,GAAAN,EAAA3nB,EAAAspB,EAAAnoB,EAAAsoB,OACA,KAAAH,IAAgCA,EAAA,QAChC,KAAAnoB,IAAkCA,UAClC,KAAAsoB,IAAqCA,EAAA,MACrC,IAAAvjC,GAAAF,EAAAvH,KAAAP,KAAA,EAAAurC,IAAAvrC,IAKA,OAJAgI,GAAAyhC,UACAzhC,EAAA8Z,QACA9Z,EAAAojC,SACApjC,EAAAib,WACAjb,EA8CA,MAxDIlH,QAAA4gB,EAAA,GAASqoB,EAAAjiC,GAYbiiC,EAAAxoC,UAAA0pC,WAAA,SAAAnB,GAGA,MAFAA,GAAAe,OAAA7qC,KACAA,KAAAijB,SAAA5S,KAAAy5B,GACA9pC,MAEA+pC,EAAAxoC,UAAAkqC,WAAA,SAAA/9B,GACA,MAAA1N,MAAAijB,SAAAvV,IAEAq8B,EAAAxoC,UAAAooC,OAAA,WACA,GAAAlkC,KACA,IAAAzF,KAAAijB,SAAA9gB,OAAA,EACAsD,EAAA4K,KAAA,4DAAArQ,KAAAurC,YAAA,0BAAAvrC,KAAA0rC,SAAA,gBAGA,QAAArrC,GAAA,EAA2BA,EAAAL,KAAAijB,SAAA9gB,OAA0B9B,IACrDoF,EAAA4K,KAAArQ,KAAAijB,SAAA5iB,GAAAspC,OAAAtpC,EAAA,GAGA,OAAAoF,GAAA7B,KAAA,KAEAmmC,EAAAxoC,UAAAqoC,SAAA,SAAAnkC,GACAqC,EAAAvG,UAAAqoC,SAAArpC,KAAAP,KAAAyF,GACAzF,KAAA8qC,YAAAhD,GAAAuB,oBAA8DvoC,OAAAmQ,EAAA,GAAsBxL,EAAA,wBACpFzF,KAAAorC,OAAAprC,KAAA8qC,YAAA1sB,SAAA4sB,cACAhrC,KAAA8hB,MAAA9hB,KAAA8qC,YAAA1sB,SAAA2sB,cAEAhB,EAAAxoC,UAAAiqC,eAAA,WACA,OACAG,YAAA,EACAvtB,UACA4sB,cAAAhrC,KAAAorC,OACAL,aAAA/qC,KAAA8hB,MACAwR,UAAAtzB,KAAAypC,QAAA3nB,SAOAioB,EAAAxoC,UAAAiqB,OAAA,WACA,GAAAxjB,GAAAhI,IACAA,MAAAypC,QAAAzmB,QAAAhjB,KAAAypC,QAAAzmB,QAAAzf,OAAA,SAAAsnC,GAA8E,MAAAA,GAAArhB,KAAAxhB,EAAAwhB,KAC9EzG,EAAA/iB,KAAA6qC,OAAA5nB,WAEA8mB,GACCuB,IAIDM,GAAA,SAAA9jC,GAEA,QAAA8jC,KACA,cAAA9jC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAUA,MAZIc,QAAA4gB,EAAA,GAASkqB,EAAA9jC,GAOb8jC,EAAArqC,UAAAiqB,OAAA,WACA,GAAAxjB,GAAAhI,IACAA,MAAA6qC,OAAA5nB,SAAAjjB,KAAA6qC,OAAA5nB,SAAA1f,OAAA,SAAAumC,GAA+E,MAAAA,GAAAtgB,KAAAxhB,EAAAwhB,KAC/EzG,EAAA/iB,KAAA6qC,OAAA5nB,WAEA2oB,GACCN,IACDnB,GAAA,SAAAriC,GAEA,QAAAqiC,GAAA/L,OACA,KAAAA,IAA8BA,EAAA,GAC9B,IAAAp2B,GAAAF,EAAAvH,KAAAP,KAAA,UAAAA,IAEA,OADAgI,GAAAo2B,OACAp2B,EAoDA,MAzDIlH,QAAA4gB,EAAA,GAASyoB,EAAAriC,GAObhH,OAAAC,eAAAopC,EAAA5oC,UAAA,QAIAL,IAAA,WACA,MAAAlB,MAAA6rC,OAEA1kC,IAAA,SAAAi3B,GACAA,EAAA0N,WAAA,SACA1N,EAAA,MAAAA,EAAA,QAEAp+B,KAAA6rC,MAAAzN,GAEAn9B,YAAA,EACAD,cAAA,IAEAmpC,EAAA5oC,UAAAiqC,eAAA,WACA,OACA3B,YAAA7pC,KAAA6pC,YACAkC,WAAA,WACAviB,GAAAxpB,KAAAwpB,GACApL,UACA4tB,aAAAhsC,KAAA8hB,MACAkpB,cAAAhrC,KAAA6qC,OAAAO,OACAL,aAAA/qC,KAAA6qC,OAAA/oB,MACAwR,UAAAtzB,KAAA6qC,OAAApB,QAAA3nB,SAIAqoB,EAAA5oC,UAAAooC,OAAA,SAAAj8B,GAEA1N,KAAA8hB,MAAApU,CACA,IAAAjI,KAMA,OALAA,GAAA4K,KAAA,4DAAArQ,KAAAurC,YAAA,0BAAAvrC,KAAA0rC,SAAA,MACAjmC,EAAA4K,KAAA,wBACA5K,EAAA4K,KAAA,GAAArQ,KAAAo+B,MACA34B,EAAA4K,KAAA,UACA5K,EAAA4K,KAAA,UACA5K,EAAA7B,KAAA,KAEAumC,EAAA5oC,UAAAqoC,SAAA,SAAAnkC,GACA,GAAAuC,GAAAhI,IACA8H,GAAAvG,UAAAqoC,SAAArpC,KAAAP,KAAAyF,GACAzF,KAAAo+B,KAAA,GACAjc,EAAA1c,EAAA,uCAAA/D,GAEA,GAAAmE,GAAA,2CAAAC,KAAApE,EACAsG,GAAAo2B,KAAAv4B,EAAA1D,OAAA,EAAA0D,EAAA,SAGAskC,GACCyB,IACD3B,GAAA,SAAAniC,GAEA,QAAAmiC,GAAA1T,EAAAzK,EAAAmgB,EAAArZ,EAAAsZ,EAAAC,EAAAC,OACA,KAAAtgB,IAAqCA,EAAA,QACrC,KAAAmgB,IAAuCA,UACvC,KAAArZ,IAAmCA,EAAA,QACnC,KAAAsZ,IAAwCA,EAAA,QACxC,KAAAC,IAAgDA,EAAA,UAChD,KAAAC,IAA2CA,EAAA,MAC3C,IAAApkC,GAAAF,EAAAvH,KAAAP,KAAA,UAAAA,IAQA,OAPAgI,GAAAuuB,QACAvuB,EAAA8jB,cACA9jB,EAAAikC,gBACAjkC,EAAA4qB,YACA5qB,EAAAkkC,iBACAlkC,EAAAmkC,yBACAnkC,EAAAokC,oBACApkC,EAiIA,MAjJIlH,QAAA4gB,EAAA,GAASuoB,EAAAniC,GAkBbmiC,EAAAoC,iBAAA,SAAAjgB,GACA,GAAAkgB,GAAA,GAAArC,GAAA,GAEA,OADAqC,GAAAzZ,OAAAzG,GACAkgB,GAEArC,EAAA1oC,UAAAsxB,OAAA,SAAA0Z,GACAvsC,KAAA4yB,UAAA2Z,EAAAzhB,GAAAnnB,QAAA,WAAqD,IAAAhB,aACrD,IAAA6pC,GAAAxmC,KAAAqG,MAAAkgC,EAAAE,SACAzsC,MAAAu2B,MAAAiW,EAAAE,qBAAA,GAAAnW,MAAAoW,QACA3sC,KAAA8rB,YAAA0gB,EAAAE,qBAAA,GAAA5gB,YAAA6gB,QACA3sC,KAAAurC,YAAA,MACAvrC,KAAAisC,cAAAjsC,KAAA4sC,oBAAAJ,EAAAE,qBAAA,GAAA/hB,aAEAsf,EAAA1oC,UAAAsrC,cAAA,SAAAliB,GAEA,MADA3qB,MAAAisC,cAA6BnrC,OAAAmQ,EAAA,GAAMjR,KAAAisC,cAAAthB,GACnC3qB,MAEAiqC,EAAA1oC,UAAAurC,cAAA,WACA,MAAA9sC,MAAAisC,eAEAhC,EAAA1oC,UAAAooC,OAAA,SAAAj8B,GAEA1N,KAAA8hB,MAAApU,CAEA,IAAAE,IACA29B,YAAAvrC,KAAAurC,YACAzf,YAAA9rB,KAAA8rB,YACAtC,GAAAxpB,KAAA4yB,UACAma,WAAA/sC,KAAAwpB,GACAmB,WAAA3qB,KAAAisC,cACAE,uBAAAnsC,KAAAmsC,uBACA5V,MAAAv2B,KAAAu2B,OAEA9wB,IAWA,OAVAA,GAAA4K,KAAA,4DAAArQ,KAAAosC,kBAAA,0BAAApsC,KAAA0rC,SAAA,MACAjmC,EAAA4K,KAAA,uDAAArQ,KAAAurC,YAAA,0BAAAzD,GAAAsB,oBAAAx7B,GAAA,MACAnI,EAAA4K,KAAA,6BACA5K,EAAA4K,KAAArQ,KAAA4yB,WACAntB,EAAA4K,KAAA,UACA5K,EAAA4K,KAAA,mCACA5K,EAAA4K,KAAArQ,KAAAgtC,wBACAvnC,EAAA4K,KAAA,UACA5K,EAAA4K,KAAA,UACA5K,EAAA4K,KAAA,UACA5K,EAAA7B,KAAA,KAEAqmC,EAAA1oC,UAAAqoC,SAAA,SAAAnkC,GACAqC,EAAAvG,UAAAqoC,SAAArpC,KAAAP,KAAAyF,EACA,IAAAwnC,GAAAnF,GAAAuB,oBAA6DvoC,OAAAmQ,EAAA,GAAsBxL,EAAA,uBACnFzF,MAAAu2B,MAAA0W,EAAA1W,MACAv2B,KAAA8rB,YAAAmhB,EAAAnhB,YACA9rB,KAAA4yB,UAAAqa,EAAAzjB,GACAxpB,KAAAosC,kBAAiCtrC,OAAAmQ,EAAA,GAAsBxL,EAAA,6BAAA9B,QAAA,YACvD3D,KAAAurC,YAA2BzqC,OAAAmQ,EAAA,GAAsBxL,EAAA,8BAAA9B,QAAA,YACjD3D,KAAA6sC,cAAAI,EAAAtiB,gBACAvnB,KAAA6pC,EAAAd,yBACAnsC,KAAAmsC,uBAAAc,EAAAd,uBAGA,IAAAe,GAAA/qB,EAAA1c,EAAA,qDAAAod,GACA,MAAAA,GAAAlf,QAAA,iDAAAA,QAAA,iBAEA3D,MAAAksC,eAAAgB,EAAA/qC,OAAA,EAAA+qC,EAAA,OAEAjD,EAAA1oC,UAAAiqC,eAAA,WACA,OACA3B,YAAA7pC,KAAA6pC,YACArgB,GAAAxpB,KAAAwpB,GACApL,UACA4tB,aAAAhsC,KAAA8hB,MACAkpB,cAAAhrC,KAAA6qC,OAAAO,OACAL,aAAA/qC,KAAA6qC,OAAA/oB,MACAwR,UAAAtzB,KAAA6qC,OAAApB,QAAA3nB,OAEA8Q,UAAA5yB,KAAA4yB,YAGAqX,EAAA1oC,UAAAyrC,qBAAA,WACA,GAAAvnC,KACA,QAAArC,KAAApD,KAAAmsC,wBAAA,OAAAnsC,KAAAmsC,uBACA1mC,EAAA4K,KAAArQ,KAAAksC,oBAEA,QAAA9oC,KAAApD,KAAAmsC,uBAAA,CACA,OAAA/oC,KAAApD,KAAAmsC,uBAAAgB,qBAEA,OADA5hC,GAAAzK,OAAAyK,KAAAvL,KAAAmsC,uBAAAgB,sBACA9sC,EAAA,EAA+BA,EAAAkL,EAAApJ,OAAiB9B,IAChDoF,EAAA4K,KAAA,2BAAA9E,EAAAlL,GAAA,yCACAoF,EAAA4K,KAAArQ,KAAAmsC,uBAAAgB,qBAAA5hC,EAAAlL,KACAoF,EAAA4K,KAAA,SAGA,QAAAjN,KAAApD,KAAAmsC,uBAAAiB,aAEA,OADA7hC,GAAAzK,OAAAyK,KAAAvL,KAAAmsC,uBAAAiB,cACA/sC,EAAA,EAA+BA,EAAAkL,EAAApJ,OAAiB9B,IAChDoF,EAAA4K,KAAA,2BAAA9E,EAAAlL,GAAA,UAAAL,KAAAmsC,uBAAAiB,aAAA7hC,EAAAlL,IAAA,OAGA,QAAA+C,KAAApD,KAAAmsC,uBAAAkB,MAEA,OADA9hC,GAAAzK,OAAAyK,KAAAvL,KAAAmsC,uBAAAkB,OACAhtC,EAAA,EAA+BA,EAAAkL,EAAApJ,OAAiB9B,IAChDoF,EAAA4K,KAAA,yBAAA9E,EAAAlL,GAAA,WAAAL,KAAAmsC,uBAAAkB,MAAA9hC,EAAAlL,IAAA,UAIA,MAAAoF,GAAA7B,KAAA,KAEAqmC,EAAA1oC,UAAAqrC,oBAAA,SAAA9jB,GAWA,WATA1lB,KAAA0lB,EAAAmkB,iBAAA7pC,KAAA0lB,EAAAmkB,YAAAd,uBACAnsC,KAAAmsC,uBAAArjB,EAAAmkB,YAAAd,2BAEA/oC,KAAA0lB,EAAAqjB,uBACAnsC,KAAAmsC,uBAAArjB,EAAAqjB,uBAGAnsC,KAAAmsC,uBAAA,SAEA/oC,KAAA0lB,EAAAmkB,iBAAA7pC,KAAA0lB,EAAAmkB,YAAAtiB,WACA7B,EAAAmkB,YAAAtiB,eAEAvnB,KAAA0lB,EAAA6B,WACA7B,EAAA6B,WAGA7B,GAGAmhB,GACC2B,IAMD0B,GAAA,SAAAxlC,GAEA,QAAAwlC,KACA,cAAAxlC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA+CA,MAjDIc,QAAA4gB,EAAA,GAAS4rB,EAAAxlC,GASbwlC,EAAA/rC,UAAAgoB,QAAA,SAAAC,GACA,GAAA+jB,GAAA,GAAAC,IAAAxtC,KAEA,OADAutC,GAAAzjB,OAAA,IAAAN,EAAA,KACA+jB,GASAD,EAAA/rC,UAAA0oB,IAAA,SAAAsM,EAAAjxB,EAAAmoC,GACA,GAAAzlC,GAAAhI,SACA,KAAAytC,IAAiCA,GAAA,EACjC,IAAA7iB,GAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,GAAMoQ,EAAA,sBACjCqsB,UAAAD,EACA/W,MAAAH,EACAmS,IAAApjC,IAEA,OAAAtF,MAAAonB,MAAAkmB,EAAA,MAAAvkB,UAA2DzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC5E,OACAA,OACA2/B,KAAAvlC,EAAAuhB,QAAA3b,EAAAkd,QAUAwiB,EAAA/rC,UAAAosC,UAAA,SAAAC,EAAAC,GACA,GAAAjjB,GAAuB9pB,OAAAmQ,EAAA,IACvB28B,SACAC,kBAEA,OAAA7tC,MAAAonB,MAAAkmB,EAAA,aAAAvkB,UAAkEzX,KAAAsZ,KAElE0iB,GACChlB,GAKDklB,GAAA,SAAA1lC,GAEA,QAAA0lC,KACA,cAAA1lC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAkBA,MApBIc,QAAA4gB,EAAA,GAAS8rB,EAAA1lC,GAIbhH,OAAAC,eAAAysC,EAAAjsC,UAAA,YAIAL,IAAA,WACA,UAAAosC,IAAAttC,KAAA,aAEAiB,YAAA,EACAD,cAAA,IAKAwsC,EAAAjsC,UAAAgL,OAAA,WACA,MAAAzE,GAAAvG,UAAAi7B,WAAAj8B,KAAAP,OAEAwtC,GACC7kB,GAKDmlB,GAAA,SAAAhmC,GAEA,QAAAgmC,KACA,cAAAhmC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA2BA,MA7BIc,QAAA4gB,EAAA,GAASosB,EAAAhmC,GAIbhH,OAAAC,eAAA+sC,EAAAvsC,UAAA,eAKAL,IAAA,WACA,UAAAosC,IAAAttC,KAAA,gBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAA+sC,EAAAvsC,UAAA,oBAKAL,IAAA,WACA,UAAAosC,IAAAttC,KAAA,qBAEAiB,YAAA,EACAD,cAAA,IAEA8sC,EAAiBhtC,OAAA4gB,EAAA,IACjBH,EAAA,eACAusB,IAEC7nB,GAID8nB,GAAA,SAAAjmC,GAEA,QAAAimC,GAAAvqC,GAEA,WADA,KAAAA,IAA8BA,EAAA,MAC9BsE,EAAAvH,KAAAP,KAAA,kBAAAwD,IAAAxD,KAuCA,MA1CIc,QAAA4gB,EAAA,GAASqsB,EAAAjmC,GAabimC,EAAAxsC,UAAAysC,aAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAKA,WAJA,KAAAH,IAAqCA,EAAA,UACrC,KAAAC,IAA+BA,EAAA,QAC/B,KAAAC,IAAyCA,EAAA,UACzC,KAAAC,IAA0CA,EAAA,MAC1C,GAAAL,GAAA,aAAAhlB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBm9B,mBACAF,QACAC,kBACAF,mBAUAF,EAAAxsC,UAAA8sC,eAAA,SAAAC,EAAAH,GAEA,WADA,KAAAA,IAAyCA,EAAA,MACzC,GAAAJ,GAAA,eAAAhlB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBq9B,aACAH,uBAIAJ,GACC9nB,GAKDsoB,GAAA,SAAAzmC,GAEA,QAAAymC,KACA,cAAAzmC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KA6CA,MA/CIc,QAAA4gB,EAAA,GAAS6sB,EAAAzmC,GAIbhH,OAAAC,eAAAwtC,EAAAhtC,UAAA,sBAIAL,IAAA,WACA,UAAAstC,IAAAxuC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwtC,EAAAhtC,UAAA,4BAIAL,IAAA,WACA,UAAAstC,IAAAxuC,KAAA,6BAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwtC,EAAAhtC,UAAA,YAIAL,IAAA,WACA,UAAAutC,IAAAzuC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAwtC,EAAAhtC,UAAA,aAIAL,IAAA,WACA,UAAAwtC,IAAA1uC,OAEAiB,YAAA,EACAD,cAAA,IAEAutC,EAAuBztC,OAAA4gB,EAAA,IACvBH,EAAA,qBACAgtB,IAEC5lB,GAID6lB,GAAA,SAAA1mC,GAEA,QAAA0mC,KACA,cAAA1mC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAAS8sB,EAAA1mC,GAIb0mC,EAAyB1tC,OAAA4gB,EAAA,IACzBH,EAAA,uBACAitB,IAEClmB,GAIDmmB,GAAA,SAAA3mC,GAEA,QAAA2mC,KACA,cAAA3mC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS+sB,EAAA3mC,GAIb6mC,EAAAF,EAMAA,EAAAltC,UAAAqtC,eAAA,SAAAC,GACA,GAAAC,EAOA,OALAA,GADA,gBAAAD,GACAA,EAGAA,EAAA5f,cAEAjvB,KAAAonB,MAAAunB,EAAA,mBAAAG,EAAA,MACA/lB,WACA7f,KAAA,SAAA02B,GAAkC,MAAQ9+B,QAAAmQ,EAAA,GAAG2uB,EAAA,kBAAAA,EAAAmP,eAAAnP,KAO7C6O,EAAAltC,UAAAytC,eAAA,SAAAC,GACA,GAAAH,EAOA,OALAA,GADA,gBAAAG,GACAA,EAG4BnuC,OAAAmQ,EAAA,GAAOg+B,EAAA,YAAAA,EAAAC,qBAAAjgB,cAEnCjvB,KAAAonB,MAAAunB,EAAA,mBAAAG,EAAA,MACA/lB,WACA7f,KAAA,SAAA02B,GAAkC,MAAQ9+B,QAAAmQ,EAAA,GAAG2uB,EAAA,kBAAAA,EAAAuP,eAAAvP,IAE7C,IAAA+O,EAIA,OAHAF,GAAAE,EAA4B7tC,OAAA4gB,EAAA,IAC5BH,EAAA,aACAktB,IAEC9lB,GAID+lB,GAAA,SAAA5mC,GAEA,QAAA4mC,KACA,cAAA5mC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASgtB,EAAA5mC,GAIbsnC,EAAAV,EAOAA,EAAAntC,UAAAgoB,QAAA,SAAAC,GAEA,MAAAxpB,MAAAonB,MAAAgoB,EAAA,WAAA5lB,EAAA,KAAAT,YAAyEpI,EAAA8tB,KAEzE,IAAAW,EAIA,OAHAV,GAAAU,EAA8BtuC,OAAA4gB,EAAA,IAC9BH,EAAA,cACAmtB,IAECpmB,GA8ED+mB,IA5EA,GAAAvoC,OACA,qBACA,6BACA,wBACA,+BACA,gBACA,gBACA,sBACA,mBACA,wBACA,eACA,kBACA,yBACA,gBACA,yBACA,gBACA,eACA,gCACA,kBACA,2BACA,kBACA,gBACA,kBACA,kCACA,uBACA,6CACA,6BACA,kBACA,4BACA,wBACA,sBAEA,GAAAA,SA4CA,SAAAgB,GAEA,QAAAunC,KACA,cAAAvnC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAqEA,MAvEIc,QAAA4gB,EAAA,GAAS2tB,EAAAvnC,GAObunC,EAAA9tC,UAAA+tC,QAAA,SAAAC,GACA,GAAAvnC,GAAAhI,KACA+f,EAAA/f,KAAAwvC,WAAAD,GACA3kB,EAAuB9pB,OAAAmQ,EAAA,IACvBie,QAAqBpuB,OAAAmQ,EAAA,GAAMoQ,EAAA,qDAAAvgB,OAAAi0B,UAAgFhV,GAC3G0vB,yBAAAzvC,KAAA0vC,WAAA3vB,EAAA0vB,0BACAE,WAAA3vC,KAAA0vC,WAAA3vB,EAAA4vB,YACAC,kBAAA5vC,KAAA0vC,WAAA3vB,EAAA6vB,mBACAC,gBAAA7vC,KAAA0vC,WAAA3vB,EAAA8vB,iBACAC,iBAAA9vC,KAAA0vC,WAAA3vB,EAAA+vB,kBACAC,SAAA/vC,KAAA0vC,WAAA3vB,EAAAgwB,cAIA,IAAA/vC,KAAAmoB,YAAA,CAEAnoB,KAAAkmB,eAAA,CAEA,IAAA8pB,GAAA,2BAAwDlvC,OAAAmQ,EAAA,GAAW2Z,GAAA,GACnD9pB,QAAAmQ,EAAA,GAAoBjR,KAAA+nB,iBAEpC,8BAAAxiB,KAAAvF,KAAA+nB,gBAAApc,OACA3L,KAAA+nB,gBAAApc,IAAAqkC,GAIAhwC,KAAA+nB,gBAAA,GAA2CzE,GAAA,EAAc0sB,GAGzD,MAAAhwC,MAAA+oB,UAA8BzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAAwB,UAAAqiC,IAAAriC,EAAA5F,EAAAye,QAAA1G,MAOvEsvB,EAAA9tC,UAAAmuC,WAAA,SAAAQ,GACA,gBAAAA,GACqB/U,aAErB+U,EAAepvC,OAAAmQ,EAAA,GAAOi/B,SACPpvC,OAAAmQ,EAAA,GAAGi/B,EAAA,WAAAA,GAA4B/U,QAAA+U,KAO9Cb,EAAA9tC,UAAAiuC,WAAA,SAAAzvB,GAWA,MATA,gBAAAA,IAC0BowB,UAAApwB,GAE1BA,EAAAqwB,cACArwB,EAAAqwB,gBAGArwB,GAIAsvB,EAAavuC,OAAA4gB,EAAA,IACbH,EAAA,0BACA8tB,IAEC1mB,IAIDsnB,GAAA,WAKA,QAAAA,GAAAI,EAAAhqB,EAAAiqB,EAAAC,EAAAC,OACA,KAAAD,IAA8BA,EAAA,UAC9B,KAAAC,IAAkCA,EAAA,MAClCxwC,KAAAqmB,OACArmB,KAAAswC,SACAtwC,KAAAuwC,OACAvwC,KAAAwwC,WACAxwC,KAAAuwC,KAAAF,EAAAI,UAAAJ,EAAAI,UAAAJ,EA+FA,MA7FAvvC,QAAAC,eAAAkvC,EAAA1uC,UAAA,eACAL,IAAA,WACA,MAAAlB,MAAA0wC,iBAAAC,aAEA1vC,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAkvC,EAAA1uC,UAAA,YACAL,IAAA,WACA,MAAAlB,MAAA0wC,iBAAAE,mBAAAC,gBAAAC,UAEA7vC,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAkvC,EAAA1uC,UAAA,aACAL,IAAA,WACA,MAAAlB,MAAA0wC,iBAAAE,mBAAAC,gBAAAE,WAEA9vC,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAkvC,EAAA1uC,UAAA,gCACAL,IAAA,WACA,MAAAlB,MAAA0wC,iBAAAE,mBAAAC,gBAAAG,8BAEA/vC,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAkvC,EAAA1uC,UAAA,oBACAL,IAAA,WACA,MAAAlB,MAAAuwC,MAEAtvC,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAkvC,EAAA1uC,UAAA,wBACAL,IAAA,WAIA,MAHA,QAAAlB,KAAAwwC,WACAxwC,KAAAwwC,SAAAxwC,KAAAixC,oBAAAjxC,KAAAuwC,KAAAK,mBAAAC,gBAAAK,MAAAC,OAEAnxC,KAAAwwC,UAEAvvC,YAAA,EACAD,cAAA,IAQAivC,EAAA1uC,UAAA6vC,QAAA,SAAAC,EAAAC,GAEA,GAAAtxC,KAAA+wC,UAAA/wC,KAAA8wC,SACA,MAAA1nC,SAAAC,QAAA,KAIA,IAAAkoC,OAAAnuC,KAAAkuC,IAAuDxwC,OAAAmQ,EAAA,GAAGjR,KAAAswC,OAAA,YAAAtwC,KAAAswC,OAAAkB,SAAA,GAC1DzxB,EAAoBjf,OAAAmQ,EAAA,GAAMjR,KAAAswC,QAC1BkB,SAAAD,EACAE,SAAAF,GAAAF,EAAA,IAGA,OAAAtxB,GAAA0xB,SAAAzxC,KAAA+wC,UACA3nC,QAAAC,QAAA,MAEA,GAAAgmC,IAAArvC,KAAAqmB,KAAA,MACAipB,QAAAvvB,IAOAkwB,EAAA1uC,UAAA0vC,oBAAA,SAAAS,GAGA,OAFAvW,GAAA,GAAA12B,OACAktC,EAAAD,EAAAvW,QAAAuW,EAAAvW,QAAAuW,EACAzvC,EAAA,EAAA2vC,EAAAD,EAAqD1vC,EAAA2vC,EAAAzvC,OAA2BF,IAAA,CAChF,GAAA4vC,GAAAD,EAAA3vC,GACA6vC,EAAAD,EAAAE,MAAA5W,QAAA0W,EAAAE,MAAA5W,QAAA0W,EAAAE,KACA5W,GAAA9qB,KAAAyhC,EAAA3sC,OAAA,SAAAy6B,EAAAoS,GAOA,MANAlxC,QAAAC,eAAA6+B,EAAAoS,EAAAniB,KACA7uB,cAAA,EACAC,YAAA,EACAyF,MAAAsrC,EAAAC,MACAC,UAAA,IAEAtS,QAGA,MAAAzE,IAEA8U,MAMA,SAAApI,GACAA,IAAA,yBACAA,IAAA,2BACAA,IAAA,4BACCA,YAID,IAAAsK,KACA,SAAAA,GACAA,IAAA,iDACAA,IAAA,+CACAA,IAAA,6CACAA,IAAA,iCACAA,IAAA,yCACAA,IAAA,iCACAA,IAAA,+CACAA,IAAA,+BACAA,IAAA,sCACCA,YAID,IAAAC,KACA,SAAAA,GACAA,IAAA,eACAA,IAAA,2BACAA,IAAA,yBACAA,IAAA,6BACAA,IAAA,qCACAA,IAAA,sCACCA,YACD,IA8gDAC,IAz/CAC,IArBA,WACA,QAAAC,MAEAA,EAAAC,UAAA,uCACAD,EAAAE,yBAAA,uCACAF,EAAAG,iBAAA,uCACAH,EAAAI,0BAAA,uCACAJ,EAAAK,+BAAA,uCACAL,EAAAM,mBAAA,uCACAN,EAAAO,2BAAA,uCACAP,EAAAQ,uBAAA,uCACAR,EAAAS,kBAAA,uCACAT,EAAAU,MAAA,uCACAV,EAAAW,SAAA,uCACAX,EAAAY,QAAA,uCACAZ,EAAAa,qBAAA,uCACAb,EAAAc,iBAAA,uCACAd,EAAAe,KAAA,0CAIA,SAAAxrC,GAEA,QAAAwqC,KACA,cAAAxqC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAoCA,MAtCIc,QAAA4gB,EAAA,GAAS4wB,EAAAxqC,GAIbwqC,EAAA/wC,UAAA+tC,QAAA,SAAAvvB,GAEA,MADA/f,MAAAuzC,sBAAAxzB,GACA/f,KAAAkB,MAAAgI,KAAA,SAAAoJ,GACA,GAAAuW,GAAyB/nB,OAAAmQ,EAAA,GAAGqB,EAAA,oBAAA5Q,GAAsC,MAAA4Q,GAAAkhC,QAAA9xC,GAAAy5B,SAAsC,SAAAz5B,GAAiB,MAAA4Q,GAAA5Q,GACzH,QACA+xC,YAAA5qB,EAAA,eACA6qB,gBAAA7qB,EAAA,mBACA8qB,QAAA9qB,EAAA,eAIAypB,EAAA/wC,UAAAgyC,sBAAA,SAAAxzB,GACA,GAAA/X,GAAAhI,IAMAA,MAAA+f,MAAA5Y,IAAA,gBAAA4Y,EAAA6zB,UAAA,IACA,IAAAC,GANA,SAAAjmB,GAAoC,gBAAAkmB,GAA8B,gBAAAx0B,GAClDxe,OAAAmQ,EAAA,GAAG2c,EAAAkmB,IACnB9rC,EAAA+X,MAAA5Y,IAAAmY,EAAAsO,EAAAkmB,GAAA5vC,eAIA6b,EACA8zB,GAAA,sCACAA,EAAA,+CACAA,EAAA,oCACAA,EAAA,uCACAA,EAAA,yCACAA,EAAA,sBACAA,EAAA,8BACAA,EAAA,8CACAA,EAAA,kCACAA,EAAA,wCAEAvB,EAAoBxxC,OAAA4gB,EAAA,IACpBH,EAAA,wBACA+wB,IAEC3pB,IAMDorB,GAAA,SAAAjsC,GAEA,QAAAisC,KACA,cAAAjsC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASqyB,EAAAjsC,GAIbksC,EAAAD,EAOAA,EAAAxyC,UAAA0oB,IAAA,SAAAT,EAAAyqB,GACA,GAAAjsC,GAAAhI,IAEA,YADA,KAAAi0C,IAA+BA,GAAA,GAC/Bj0C,KAAAonB,MAAA4sB,EAAA,OAAAjrB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBijC,aAAA,EACAC,UAAA3qB,EACAyqB,YAES/qC,KAAA,SAAA0E,GACT,OACAA,OACAwmC,QAAApsC,EAAAuhB,QAAAC,OASAuqB,EAAAxyC,UAAAgoB,QAAA,SAAAC,GACA,GAAA4qB,GAAA,GAAAC,IAAAr0C,KAEA,OADAo0C,GAAAtqB,OAAA,KAAAN,EAAA,MACA4qB,GAQAL,EAAAxyC,UAAAiqB,OAAA,SAAAhC,EAAAyqB,GAEA,WADA,KAAAA,IAA+BA,GAAA,GAC/Bj0C,KAAAonB,MAAA4sB,EAAA,UAAAjrB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBkjC,UAAA3qB,EACAyqB,YAIA,IAAAD,EAIA,OAHAD,GAAAC,EAA4BlzC,OAAA4gB,EAAA,IAC5BH,EAAA,aACAwyB,IAECzrB,GACD+rB,GAAA,SAAAvsC,GAEA,QAAAusC,KACA,cAAAvsC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAkBA,MApBIc,QAAA4gB,EAAA,GAAS2yB,EAAAvsC,GASbusC,EAAA9yC,UAAA+yC,WAAA,SAAAL,GACA,GAAAjsC,GAAAhI,SACA,KAAAi0C,IAA+BA,GAAA,EAC/B,IAAA5S,GAAArhC,KAAA4nB,oBAEA,OADA,IAAAysB,GAAAr0C,MAAA2mB,OAAA,gBACAzlB,MAAAgI,KAAA,SAAAkrC,GACA,GAAA5S,GAAAx5B,EAAA+e,UAAAgtB,GAAA/rC,EAAAif,UAAA,GAAAjf,EAAAgf,OAAAwE,OAAA4oB,EAAAG,aAAAN,EAEA,OADA5S,KACAG,KAGA6S,GACC1rB,GAED6rB,GAAA,SAAA1sC,GAEA,QAAA0sC,KACA,cAAA1sC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS8yB,EAAA1sC,GAIb2sC,EAAAD,EACAA,EAAAE,QAAA,SAAApvC,GACA,UAAAA,EACA,UAAAmvC,GAAA,GAEA,IAAA/mC,GAAApI,EAAAsF,QAAA,QACA,OACA,IAAA6pC,GADA/mC,GAAA,EACApI,EAAA8a,OAAA,EAAA1S,GAEApI,IAEAkvC,EAAAjzC,UAAAozC,gBAAA,SAAAC,EAAAC,GACA,GAAA90B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,oBACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB6jC,aAAAD,EACAE,eAAAH,OAIAJ,EAAAjzC,UAAAyzC,uBAAA,SAAAJ,EAAAC,GACA,GAAA90B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,2BACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB6jC,aAAAD,EACAE,eAAAH,OAIAJ,EAAAjzC,UAAA0zC,cAAA,SAAAL,EAAAC,EAAAK,EAAAC,EAAAC,EAAAC,EAAAC,OACA,KAAAA,IAA2CA,GAAA,EAC3C,IAAAv1B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,kBACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB6jC,aAAAD,EACAE,eAAAH,EACAW,aAAAL,EACAM,aAAAJ,EACAK,eAAAN,EACAO,aAAAL,EACAM,kBAAAL,OAYAd,EAAAjzC,UAAAq0C,mBAAA,SAAAhB,EAAAC,EAAAgB,EAAAP,OACA,KAAAA,IAA2CA,GAAA,EAC3C,IAAAv1B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,uBACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB6jC,aAAAD,EACAE,eAAAH,EACAkB,cAAAD,EACAF,kBAAAL,OAYAd,EAAAjzC,UAAAw0C,qBAAA,SAAAC,EAAAb,EAAAc,EAAAX,OACA,KAAAA,IAA2CA,GAAA,EAC3C,IAAAv1B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,yBACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClBilC,cAAAF,EACAR,aAAAS,EACAR,eAAAN,EACAQ,kBAAAL,OAIAd,EAAAjzC,UAAA40C,iBAAA,SAAAvB,EAAAC,EAAAK,EAAAC,EAAAc,EAAAZ,EAAAe,OACA,KAAAA,IAA8CA,GAAA,EAC9C,IAAAr2B,GAAA/f,KAAAonB,MAAAqtB,EAAA,KAEA,OADA10B,GAAA+J,OAAA,qBACA/J,EAAAgJ,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB6jC,aAAAD,EACAE,eAAAH,EACAW,aAAAL,EACAM,aAAAS,EACAR,eAAAN,EACAO,aAAAL,EACAgB,qBAAAD,MAIA,IAAA3B,EAIA,OAHAD,GAAAC,EAAwD3zC,OAAA4gB,EAAA,IACxDH,EAAA,+BACAizB,IAECvuB,GAMDqwB,GAAA,SAAAxuC,GAEA,QAAAwuC,KACA,cAAAxuC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS40B,EAAAxuC,GAIbyuC,EAAAD,EAWAA,EAAA/0C,UAAA0oB,IAAA,SAAAsM,EAAAjxB,EAAAwmB,EAAAoR,EAAAsZ,EAAAC,OACA,KAAA3qB,IAAqCA,EAAA,QACrC,KAAAoR,IAAkCA,EAAA,WAClC,KAAAsZ,IAAkCA,EAAA,UAClC,KAAAC,IAA4CA,GAAA,EAC5C,IAAA3tB,IACAmD,YAAAH,EACA4qB,SAAAF,EACA9f,MAAAH,EACAmS,IAAApjC,EACAqxC,+BAAAF,EACAG,YAAA1Z,GAEAtS,EAAuB9pB,OAAAmQ,EAAA,IACvBoK,WAA0Bva,OAAAmQ,EAAA,IAC1BuP,YAA+Bc,KAAA,8BAClBwH,IAEb,OAAA9oB,MAAAonB,MAAAmvB,EAAA,OAAAxtB,UAAmDzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GACpE,OACAA,OACA+V,IAAA,GAAAP,IAAA/C,EAAAzS,GAAAjK,QAAA,wBAIA,IAAA4yC,EAIA,OAHAD,GAAAC,EAAoBz1C,OAAA4gB,EAAA,IACpBH,EAAA,SACA+0B,IAEChuB,GAKDuuB,GAAA,SAAA/uC,GAEA,QAAA+uC,KACA,cAAA/uC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAASm1B,EAAA/uC,GAIb+uC,EAAe/1C,OAAA4gB,EAAA,IACfH,EAAA,aACAs1B,IAECvuB,GAKDlF,GAAA,SAAAtb,GAEA,QAAAsb,KACA,cAAAtb,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS0B,EAAAtb,GAIbgvC,EAAA1zB,EAQAA,EAAA2zB,QAAA,SAAAzxC,EAAA9B,GACA,UAAAszC,GAAA52B,EAAA5a,GAAA9B,IAEA1C,OAAAC,eAAAqiB,EAAA7hB,UAAA,QAKAL,IAAA,WACA,UAAAo1C,IAAAt2C,OAEAiB,YAAA,EACAD,cAAA,IAMAoiB,EAAA7hB,UAAAy1C,aAAA,WACA,GAAAhvC,GAAAhI,IACA,OAAAA,MAAA2mB,OAAA,gBAAAE,OAAA,aAAA3lB,MACAgI,KAAA,SAAA8qB,GACA,GAAAijB,GAAAjjB,EAAAijB,SACA,WAAA9zB,IAAAnb,EAAAue,gBAAAjQ,MAAA,aAAA4gC,YAAAD,EAAAnsB,OASA1H,EAAA7hB,UAAA41C,iCAAA,SAAAC,EAAAC,GAGA,WAFA,KAAAD,IAA4CA,GAAA,OAC5C,KAAAC,IAA8CA,GAAA,GAC9Cr3C,KAAAonB,MAAAkvB,GAAA,uDAAAc,EAAA,yBAAAC,EAAA,MAEAv2C,OAAAC,eAAAqiB,EAAA7hB,UAAA,iBAIAL,IAAA,WACA,MAAAlB,MAAAonB,MAAAkB,EAAA,kBAEArnB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,YAKAL,IAAA,WACA,UAAA21C,IAAA72C,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,gBAKAL,IAAA,WACA,UAAAqzB,IAAAv0B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,SAKAL,IAAA,WACA,UAAA47B,IAAA98B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,UAKAL,IAAA,WACA,UAAAm2B,IAAAr3B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,YAKAL,IAAA,WACA,UAAA6yC,IAAA/zC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,mBAKAL,IAAA,WACA,UAAAm2B,IAAAr3B,KAAA,oBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,cAKAL,IAAA,WACA,UAAA4sC,IAAA9tC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,aAKAL,IAAA,WACA,UAAAmoB,GAAArpB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,cAKAL,IAAA,WACA,UAAAmpB,GAAArqB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,oBAKAL,IAAA,WACA,UAAA+7B,IAAAj9B,KAAA,qBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,oBAKAL,IAAA,WACA,UAAAqtC,IAAAvuC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,eAIAL,IAAA,WACA,UAAAopB,GAAAtqB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,WAKAL,IAAA,WACA,UAAAqyB,IAAAvzB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,qBAKAL,IAAA,WACA,UAAAu7B,IAAAz8B,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,mBAKAL,IAAA,WACA,UAAAwqB,GAAA1rB,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,gBAKAL,IAAA,WACA,MAAAszC,IAAAE,QAAA10C,KAAAymB,UAEAxlB,YAAA,EACAD,cAAA,IAMAoiB,EAAA7hB,UAAA+1C,YAAA,WACA,UAAAxQ,IAAA9mC,KAAAinB,YAEAnmB,OAAAC,eAAAqiB,EAAA7hB,UAAA,cAKAL,IAAA,WACA,UAAAuyB,IAAAzzB,KAAA,eAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,wBAKAL,IAAA,WACA,UAAAwpB,GAAA1qB,KAAA,yBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,yBAKAL,IAAA,WACA,UAAAwpB,GAAA1qB,KAAA,0BAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,0BAKAL,IAAA,WACA,UAAAwpB,GAAA1qB,KAAA,2BAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqiB,EAAA7hB,UAAA,0BAKAL,IAAA,WACA,UAAA+7B,IAAAj9B,KAAA,2BAEAiB,YAAA,EACAD,cAAA,IAOAoiB,EAAA7hB,UAAAg2C,6BAAA,SAAAC,GACA,UAAA/jB,IAAAzzB,KAAA,iCAAAw3C,EAAA,OAUAp0B,EAAA7hB,UAAAk2C,8BAAA,SAAAD,GACA,UAAA/jB,IAAAzzB,KAAA,6CAAAw3C,EAAA,OAOAp0B,EAAA7hB,UAAAm2C,2BAAA,SAAAC,GACA,UAAAhW,IAAA3hC,KAAA,+BAAA23C,EAAA,OASAv0B,EAAA7hB,UAAAq2C,4BAAA,SAAAD,GACA,UAAAhW,IAAA3hC,KAAA,2CAAA23C,EAAA,OAOAv0B,EAAA7hB,UAAAs2C,QAAA,SAAAC,GACA,UAAA7a,IAAAj9B,KAAA,YAAA83C,EAAA,OAOA10B,EAAA7hB,UAAA4oB,OAAA,SAAAQ,GACA,GAAA3iB,GAAAhI,KACA4qB,EAAuB9pB,OAAAmQ,EAAA,GAAInQ,OAAAmQ,EAAA,IAC3BuP,YAA2Bc,KAAA,WAClBqJ,GACT,OAAA3qB,MAAA+oB,UACAzX,KAAAsZ,EACApkB,SACAwiB,gBAAA,WAES9f,KAAA,SAAA0E,GACT,OACAA,OACA+V,IAAA3b,MAQAob,EAAA7hB,UAAAgL,OAAA,WACA,MAAAzE,GAAAvG,UAAAi7B,WAAAj8B,KAAAP,OAUAojB,EAAA7hB,UAAAw2C,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAvtB,GAAuB9pB,OAAAmQ,EAAA,IACvBinC,qBACAF,kBACAC,gBACAE,kBAEA,OAAAn4C,MAAAonB,MAAA0vB,EAAA,cAAA/tB,UAAyDzX,KAAAsZ,KAOzDxH,EAAA7hB,UAAA62C,iBAAA,SAAAlb,GACA,GAAAtP,GAAA5tB,KAAAonB,MAAA0vB,EAAA,mBAGA,OAFAlpB,GAAA9D,OAAA,QACA8D,EAAA7N,MAAA5Y,IAAA,KAAA+1B,GACAtP,EAAA7E,YAOA3F,EAAA7hB,UAAA82C,WAAA,SAAAzuB,GACA,GAAAgB,GAAuB9pB,OAAAmQ,EAAA,IACvBqnC,UAAA1uB,GAEA,OAAA5pB,MAAAonB,MAAA0vB,EAAA,cAAA/tB,UAAyDzX,KAAAsZ,IAAiB1hB,KAAA,SAAA0E,GAC1E,OACAA,OACAwc,KAAA,GAAAX,GAAApJ,EAAAzS,QAUAwV,EAAA7hB,UAAAg3C,sBAAA,SAAA/B,EAAAgC,GAGA,WAFA,KAAAhC,IAAkCA,EAAA,UAClC,KAAAgC,IAA8CA,GAAA,GAC9C,GAAAlwB,GAAAtoB,KAAA,iCAAAw2C,EAAA,4BAAAgC,EAAA,MAQAp1B,EAAA7hB,UAAAk3C,WAAA,SAAAn3B,GACA,MAAAthB,MAAAonB,MAAA0vB,EAAA,cAAAx1B,EAAA,KAAAqF,OAAA,MAAAzlB,MAAAgI,KAAA,SAAA0E,GACA,UAAAqvB,IAAA5c,EAAAzS,OAQAwV,EAAA7hB,UAAA08B,WAAA,SAAAle,GACA,GAAA6K,GAAuB9pB,OAAAmQ,EAAA,IAAK8O,MAAUjf,OAAAmQ,EAAA,IAAQuP,YAAgBc,KAAA,mBAA6BvB,IAC3F,OAAA/f,MAAAonB,MAAA0vB,EAAA,cAAA/tB,UAAyDzX,KAAAsZ,KAEzD9pB,OAAAC,eAAAqiB,EAAA7hB,UAAA,sBAKAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,2BAEAiB,YAAA,EACAD,cAAA,IAOAoiB,EAAA7hB,UAAAm3C,YAAA,SAAAlvB,GACA,UAAAC,GAAAzpB,KAAA,eAAAwpB,EAAA,MASApG,EAAA7hB,UAAAo3C,UAAA,SAAAnS,EAAAh5B,EAAAorC,GAGA,WAFA,KAAAprC,IAA8BA,EAAA,OAC9B,KAAAorC,IAAgCA,EAAA,IAChC54C,KAAAonB,MAAA0vB,EAAA,uBAAAtQ,EAAA,cAAAoS,EAAA,WAAAprC,EAAA,KAAAtM,OAOAkiB,EAAA7hB,UAAAs3C,iBAAA,SAAAltC,GACA,MAAA3L,MAAAonB,MAAA0vB,EAAA,qBAAAnrC,EAAA,MAAAzK,OAUAkiB,EAAA7hB,UAAAu3C,iBAAA,SAAAntC,EAAAjF,EAAAolB,EAAAitB,GAGA,WAFA,KAAAjtB,IAAqCA,EAAA,QACrC,KAAAitB,IAAkCA,EAAA,IAClC/4C,KAAAonB,MAAA0vB,EAAA,oBAAA/tB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAClB8nC,WACAjtB,cACAngB,MACAjF,aASA0c,EAAA7hB,UAAAy3C,oBAAA,SAAArtC,GACA,MAAA3L,MAAAonB,MAAA0vB,EAAA,wBAAAnrC,EAAA,MAAAod,YAOA3F,EAAA7hB,UAAA03C,cAAA,SAAA3zC,GACA,UAAA+gC,IAAA/gC,GAAAtF,OAKAojB,EAAA7hB,UAAA23C,sBAAA,WACA,MAAAl5C,MAAAonB,MAAAkB,EAAA,yBAAApnB,OASAkiB,EAAA7hB,UAAA43C,kBAAA,SAAAjR,EAAA3R,EAAA6iB,GAGA,WAFA,KAAA7iB,IAA+BA,EAAA2R,EAAAvkC,QAAA,sBAC/B,KAAAy1C,IAAsCA,EAAA,cACtCtR,GAAAx5B,OAAAtO,KAAAq5C,MAAA/iB,WAAA8iB,GAAAlR,EAAA3R,IASAnT,EAAA7hB,UAAA+3C,wBAAA,SAAApR,EAAAqR,EAAAhjB,GAEA,WADA,KAAAA,IAA+BA,EAAA2R,EAAAvkC,QAAA,kBAC/BmkC,GAAAx5B,OAAAtO,KAAA63C,QAAA0B,GAAArR,EAAA3R,GAEA,IAAAugB,EAIA,OAHA1zB,GAAA0zB,EAAkBh2C,OAAA4gB,EAAA,IAClBH,EAAA,aACA6B,IAECsO,IAMDvO,GAAA,SAAArb,GAEA,QAAAqb,KACA,cAAArb,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAASyB,EAAArb,GAIb0xC,EAAAr2B,EACAriB,OAAAC,eAAAoiB,EAAA5hB,UAAA,WAKAL,IAAA,WACA,UAAAkiB,IAAApjB,KAAA,YAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAoiB,EAAA5hB,UAAA,YAKAL,IAAA,WACA,UAAA6yC,IAAA/zC,OAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAoiB,EAAA5hB,UAAA,qBAKAL,IAAA,WACA,UAAAu7B,IAAAz8B,OAEAiB,YAAA,EACAD,cAAA,IAMAmiB,EAAA5hB,UAAAk4C,WAAA,WACA,MAAAz5C,MAAA05C,QAAA/yB,OAAA,OAAAzlB,MAAAgI,KAAA,SAAAya,GAAqE,UAAAP,IAAAO,EAAA+kB,QAKrEvlB,EAAA5hB,UAAAo4C,eAAA,WAEA,MADA,IAAAH,GAAAx5C,KAAAinB,UAAA,oBACA8B,WAAA7f,KAAA,SAAA0E,GACA,GAAgB9M,OAAAmQ,EAAA,GAAGrD,EAAA,6BACnB,GAAAgJ,GAAAhJ,EAAA+W,wBAEA,OADA/N,GAAAgjC,wBAAAhjC,EAAAgjC,wBAAAze,QACAvkB,EAGA,MAAAhJ,MASAuV,EAAA5hB,UAAAs4C,qBAAA,SAAAC,GACA,GAAAlsB,GAAA,GAAA3H,GAAA,0CAEA,OADA2H,GAAA7N,MAAA5Y,IAAA,SAAA2yC,EAAA,KACAlsB,EAAA1sB,MAAAgI,KAAA,SAAA0E,GACA,MAAgB9M,QAAAmQ,EAAA,GAAGrD,EAAA,wBACnBA,EAAAmsC,qBAGAnsC,KASAuV,EAAA5hB,UAAAy4C,qBAAA,SAAAC,GACA,GAAArsB,GAAA,GAAA3H,GAAA,0CAEA,OADA2H,GAAA7N,MAAA5Y,IAAA,SAAA8yC,EAAA,KACArsB,EAAA1sB,MAAAgI,KAAA,SAAA0E,GACA,MAAgB9M,QAAAmQ,EAAA,GAAGrD,EAAA,wBACnBA,EAAAssC,qBAGAtsC,KAQAuV,EAAA5hB,UAAA+1C,YAAA,WACA,UAAAxQ,IAAA9mC,KAAAinB,YAOA9D,EAAA5hB,UAAA21C,YAAA,SAAAiD,GACA,MAAAn6C,MAAAonB,MAAAoyB,EAAA,gBAAAW,EAAA,MAAApxB,WAAA7f,KAAA,SAAAxI,GAAgG,OAChGkN,KAAAlN,EACAijB,IAAAP,GAAA2zB,QAAAr2C,EAAA,aAAAA,EAAA8f,WAAAC,QAGA,IAAA+4B,EAIA,OAHAr2B,GAAAq2B,EAAoB14C,OAAA4gB,EAAA,IACpBH,EAAA,cACA4B,IAECwF,GAEDyxB,GAAA,SAAAtyC,GAOA,QAAAsyC,GAAAp5B,EAAAxd,OACA,KAAAA,IAA8BA,EAAA,qCAC9B,IAAAwE,GAAAF,EAAAvH,KAAAP,KAAAghB,EAAAxd,IAAAxD,IAGA,OAFAgI,GAAAqyC,wBAAA,GAAAC,IAAAt5B,GAAAkG,cAAAlf,GACAA,EAAAuyC,cAAA,GAAAC,IAAAx5B,GAAAkG,cAAAlf,GACAA,EA0QA,MArRIlH,QAAA4gB,EAAA,GAAS04B,EAAAtyC,GAabhH,OAAAC,eAAAq5C,EAAA74C,UAAA,mBAIAL,IAAA,WACA,MAAAlB,MAAAonB,MAAAgzB,EAAA,mBAAAl5C,OAEAD,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAq5C,EAAA74C,UAAA,wBAIAL,IAAA,WACA,MAAAlB,MAAAonB,MAAAgzB,EAAA,wBAAAl5C,OAEAD,YAAA,EACAD,cAAA,IAOAo5C,EAAA74C,UAAAk5C,cAAA,SAAA7wB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,oBAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAOAk5C,EAAA74C,UAAAm5C,aAAA,SAAA9wB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,mBAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAOAk5C,EAAA74C,UAAAo5C,gBAAA,SAAAC,GAEA,WADA,KAAAA,IAAkCA,EAAA,IAClC56C,KAAAonB,MAAAgzB,EAAA,mBAAAQ,EAAA,KAAA15C,OAOAk5C,EAAA74C,UAAAs5C,gBAAA,SAAAjxB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,sBAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAEAJ,OAAAC,eAAAq5C,EAAA74C,UAAA,eAKAL,IAAA,WACA,UAAAonB,GAAAtoB,KAAA,mBAEAiB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAq5C,EAAA74C,UAAA,gBAKAL,IAAA,WACA,UAAAk5C,GAAAp6C,KAAA,oBAEAiB,YAAA,EACAD,cAAA,IAOAo5C,EAAA74C,UAAAu5C,oBAAA,SAAAlxB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,0BAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAOAk5C,EAAA74C,UAAAw5C,iBAAA,SAAAnxB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,uBAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAEAJ,OAAAC,eAAAq5C,EAAA74C,UAAA,gBAKAL,IAAA,WACA,GAAA0sB,GAAA5tB,KAAAonB,MAAAgzB,EAAA,KAEA,OADAxsB,GAAA9D,OAAA,oBACA8D,EAAA1sB,OAEAD,YAAA,EACAD,cAAA,IAQAo5C,EAAA74C,UAAAy5C,0BAAA,SAAApxB,EAAAqxB,GACA,GAAArtB,GAAA5tB,KAAAonB,MAAAgzB,EAAA,2DAAAa,EAAA,KAEA,OADArtB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA1sB,OAOAk5C,EAAA74C,UAAA25C,eAAA,SAAAtxB,GACA,GAAAgE,GAAA5tB,KAAAonB,MAAAgzB,EAAA,qBAEA,OADAxsB,GAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAwS,GAAA,KACAgE,EAAA7E,YAQAqxB,EAAA74C,UAAA45C,YAAA,SAAAC,EAAAC,GACA,GAAAztB,GAAA5tB,KAAAonB,MAAAgzB,EAAA,KAIA,OAHAxsB,GAAA9D,OAAA,gFACA8D,EAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAgkC,GAAA,KACAxtB,EAAA7N,MAAA5Y,IAAA,SAAAiQ,mBAAAikC,GAAA,KACAztB,EAAA1sB,OAOAk5C,EAAA74C,UAAA+5C,gBAAA,SAAAC,GACA,GAAAvzC,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACA,GAAAkyC,GAAA,KACAC,EAAA,GAAAC,WACAD,GAAAE,OAAA,SAAA5wC,GAA0C,MAAAywC,GAAAzwC,EAAAnG,OAAAy3B,QAC1Cof,EAAAG,kBAAAL,GACA,GAAAnB,GAAApyC,EAAA,uBACA+gB,UACAzX,KAAA+K,OAAAY,aAAA7a,MAAA,QAAAy5C,aAAAL,MACatyC,KAAA,SAAAM,GAAqB,MAAAH,OAAoBQ,MAAA,SAAAkB,GAAsB,MAAAzB,GAAAyB,QAU5EqvC,EAAA74C,UAAAu6C,8BAAA,SAAAC,EAAAd,EAAAe,GACA,GAAApxB,GAAuB9pB,OAAAmQ,EAAA,IACvB8qC,cACAd,eACAe,iBAEA,OAAAh8C,MAAAonB,MAAAgzB,EAAA,iCACArxB,UAAuBzX,KAAAsZ,KASvBwvB,EAAA74C,UAAA06C,8BAAA,SAAAF,EAAAd,EAAAiB,GACA,GAAAtxB,GAAuB9pB,OAAAmQ,EAAA,IACvB8qC,cACAd,eACAiB,kBAEA,OAAAl8C,MAAAonB,MAAAgzB,EAAA,iCACArxB,UAAuBzX,KAAAsZ,KAOvBwvB,EAAA74C,UAAA46C,8BAAA,WAEA,OADAC,MACAn6C,EAAA,EAAwBA,EAAAC,UAAAC,OAAuBF,IAC/Cm6C,EAAAn6C,GAAAC,UAAAD,EAEA,OAAAjC,MAAAu6C,cAAA4B,8BAAAC,IAEAt7C,OAAAC,eAAAq5C,EAAA74C,UAAA,oBAKAL,IAAA,WACA,MAAAlB,MAAAu6C,cAAA8B,kBAEAp7C,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAq5C,EAAA74C,UAAA,eAIAL,IAAA,WACA,MAAAlB,MAAAu6C,cAAA+B,aAEAr7C,YAAA,EACAD,cAAA,IAOAo5C,EAAA74C,UAAAg7C,mBAAA,SAAAC,GAEA,WADA,KAAAA,IAA4CA,GAAA,GAC5Cx8C,KAAAu6C,cAAAgC,mBAAAC,IAOApC,EAAA74C,UAAAk7C,mBAAA,SAAAC,GACA,MAAA18C,MAAAu6C,cAAAkC,mBAAAC,IAOAtC,EAAA74C,UAAAo7C,8BAAA,SAAAC,GACA,MAAA58C,MAAAq6C,wBAAAsC,8BAAAC,IAOAxC,EAAA74C,UAAAs7C,6BAAA,SAAAD,GACA,MAAA58C,MAAAq6C,wBAAAwC,6BAAAD,IAEAxC,GACCzxB,GACD6xB,GAAA,SAAA1yC,GAEA,QAAA0yC,KACA,cAAA1yC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS84B,EAAA1yC,GAIbg1C,EAAAtC,EAMAA,EAAAj5C,UAAA46C,8BAAA,SAAAC,GACA,MAAAp8C,MAAAonB,MAAA01B,EAAA,oCAAA/zB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,IAAK8rC,SAAAX,OAGvBt7C,OAAAC,eAAAy5C,EAAAj5C,UAAA,oBAKAL,IAAA,WACA,GAAA0sB,GAAA5tB,KAAA+mB,UAAA+1B,EAAA98C,KAAAinB,UAAA,yDAIA,OAHAjnB,MAAAunB,WACAqG,IAAAzG,QAAAnnB,KAAAgnB,QAEA4G,EAAA7E,YAEA9nB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAy5C,EAAAj5C,UAAA,eAKAL,IAAA,WACA,MAAAlB,MAAAonB,MAAA01B,EAAA,kBAAA/zB,YAEA9nB,YAAA,EACAD,cAAA,IAOAw5C,EAAAj5C,UAAAg7C,mBAAA,SAAAC,GAEA,WADA,KAAAA,IAA4CA,GAAA,GAC5Cx8C,KAAAonB,MAAA01B,EAAA,0CAAAN,EAAA,KAAAzzB,YAOAyxB,EAAAj5C,UAAAk7C,mBAAA,SAAAC,GACA,MAAA18C,MAAAonB,MAAA01B,EAAA,qCAAAJ,EAAA,KAAA3zB,WAEA,IAAA+zB,EAIA,OAHAtC,GAAAsC,EAAsCh8C,OAAA4gB,EAAA,IACtCH,EAAA,wDACAi5B,IAECv0B,GACDq0B,GAAA,SAAAxyC,GAEA,QAAAwyC,KACA,cAAAxyC,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS44B,EAAAxyC,GAIbk1C,EAAA1C,EAMAA,EAAA/4C,UAAAo7C,8BAAA,SAAAC,GACA,GAAAhvB,GAAA5tB,KAAAonB,MAAA41B,EAAA,KAEA,OADApvB,GAAA9D,OAAA,kCACA8D,EAAA7E,UACAzX,KAAAtR,KAAAi9C,mDAAAL,KAEA1zC,KAAA,SAAA02B,GACA,sBAAAA,GACAA,EAAAsd,8BAEAtd,IAEA12B,KAAAlD,KAAAqG,QAOAiuC,EAAA/4C,UAAAs7C,6BAAA,SAAAD,GACA,GAAAhvB,GAAA5tB,KAAAonB,MAAA41B,EAAA,KAEA,OADApvB,GAAA9D,OAAA,iCACA8D,EAAA7E,UACAzX,KAAAtR,KAAAi9C,mDAAAL,KAEA1zC,KAAA,SAAA02B,GACA,sBAAAA,GACAA,EAAAud,6BAEAvd,IAEA12B,KAAAlD,KAAAqG,QAOAiuC,EAAA/4C,UAAA07C,mDAAA,SAAAL,GACA,MAAe97C,QAAAmQ,EAAA,IACf2rC,YAA2B97C,OAAAmQ,EAAA,GAAMoQ,EAAA,4DAAAu7B,KAGjC,IAAAI,EAIA,OAHA1C,GAAA0C,EAA0Dl8C,OAAA4gB,EAAA,IAC1DH,EAAA,sEACA+4B,IAECr0B,GAKDm3B,GAAA,SAAAt1C,GAEA,QAAAs1C,KACA,cAAAt1C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS07B,EAAAt1C,GAIbu1C,EAAAD,EACAt8C,OAAAC,eAAAq8C,EAAA77C,UAAA,MACAL,IAAA,WACA,UAAAo8C,IAAAt9C,OAEAiB,YAAA,EACAD,cAAA,IAKAo8C,EAAA77C,UAAAg8C,oBAAA,WACA,MAAAv9C,MAAAonB,MAAAi2B,EAAA,oBAAAn8C,MAAAgI,KAAA,SAAApF,GACA,MAAAA,GAAA05C,kBAAA15C,KAMAs5C,EAAA77C,UAAAk8C,wBAAA,WACA,MAAAz9C,MAAAonB,MAAAi2B,EAAA,wBAAAn8C,MAAAgI,KAAA,SAAApF,GACA,MAAAA,GAAA45C,sBAAA55C,KAQAs5C,EAAA77C,UAAAo8C,OAAA,SAAAC,GACA,MAAA59C,MAAAonB,MAAAi2B,EAAA,UAAAt0B,UAA6DzX,KAAAtR,KAAA69C,iCAAAD,MAO7DR,EAAA77C,UAAAu8C,WAAA,SAAAF,GACA,MAAA59C,MAAAonB,MAAAi2B,EAAA,cAAAt0B,UAAiEzX,KAAAtR,KAAA69C,iCAAAD,MAOjER,EAAA77C,UAAAw8C,cAAA,SAAAH,GACA,MAAA59C,MAAAonB,MAAAi2B,EAAA,iBAAAt0B,UAAoEzX,KAAAtR,KAAA69C,iCAAAD,MAOpER,EAAA77C,UAAAs8C,iCAAA,SAAAD,GACA,MAAe98C,QAAAmQ,EAAA,IACf+sC,MAAAl9C,OAAAi0B,OAAA1T,EAAA,8BACAyJ,GAAA,MACa8yB,KAGb,IAAAP,EAIA,OAHAD,GAAAC,EAAkCv8C,OAAA4gB,EAAA,IAClCH,EAAA,0BACA67B,IAECz0B,GACD20B,GAAA,SAAAx1C,GAEA,QAAAw1C,KACA,cAAAx1C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAFIc,OAAA4gB,EAAA,GAAS47B,EAAAx1C,GAIbm2C,EAAAX,EAMAA,EAAA/7C,UAAA28C,SAAA,SAAAC,GACA,MAAAn+C,MAAAonB,MAAA62B,EAAA,kBAAAE,EAAA,KAAAj9C,MAAAgI,KAAA,SAAApF,GACA,MAAmBhD,QAAAmQ,EAAA,GAAGnN,EAAA,YAAAA,EAAAs6C,SAAAjjB,QAAAr3B,KAQtBw5C,EAAA/7C,UAAA88C,cAAA,SAAAF,GACA,MAAAn+C,MAAAonB,MAAA62B,EAAA,uBAAAE,EAAA,KAAAj9C,MAAAgI,KAAA,SAAApF,GACA,MAAAA,GAAAw6C,eAAAx6C,KAMAw5C,EAAA/7C,UAAAg9C,UAAA,WACA,MAAAv+C,MAAAonB,MAAA62B,EAAA,aAAA/8C,MAAAgI,KAAA,SAAApF,GACA,MAAmBhD,QAAAmQ,EAAA,GAAGnN,EAAA,aAAAA,EAAA06C,UAAArjB,QAAAr3B,KAMtBw5C,EAAA/7C,UAAAk9C,YAAA,WACA,MAAAz+C,MAAAonB,MAAA62B,EAAA,eAAA/8C,MAAAgI,KAAA,SAAApF,GACA,MAAmBhD,QAAAmQ,EAAA,GAAGnN,EAAA,eAAAA,EAAA46C,YAAAvjB,QAAAr3B,IAGtB,IAAAm6C,EAIA,OAHAX,GAAAW,EAAsCn9C,OAAA4gB,EAAA,IACtCH,EAAA,OACA+7B,IAEC30B,IAMD,SAAA0pB,GACAA,IAAA,eACAA,IAAA,uBACAA,IAAA,eACAA,IAAA,cACCA,YAMD,IAAAsM,KACA,SAAAA,GACAA,IAAA,eACAA,IAAA,eACAA,IAAA,uBACAA,IAAA,eACAA,IAAA,aAIAA,IAAA,mEAIAA,IAAA,mDAIAA,IAAA,mDACCA,YAMD,IAAAC,KACA,SAAAA,GACAA,IAAA,WACAA,IAAA,uCACAA,IAAA,+BACAA,IAAA,kCACCA,YAID,IAAAC,KACA,SAAAA,GAIAA,IAAA,WAIAA,IAAA,mCAIAA,IAAA,+BAIAA,IAAA,+BAIAA,IAAA,uCAIAA,IAAA,qCAIAA,IAAA,iCAIAA,IAAA,mCAIAA,IAAA,uCAIAA,IAAA,+CAIAA,IAAA,4DAIAA,IAAA,0EAIAA,IAAA,wDAIAA,IAAA,gCAIAA,IAAA,sCAIAA,IAAA,8BAIAA,IAAA,sCAIAA,IAAA,gDAIAA,IAAA,mCACCA,YAKD,IAAAC,IAAA,SAAAh3C,GAQA,QAAAg3C,GAAA99B,EAAA+9B,GACA,MAAAj3C,GAAAvH,KAAAP,KAAA8+C,EAAAE,WAAAh+B,GAAA,6BAAA+9B,IAAA/+C,KAuGA,MA/GIc,QAAA4gB,EAAA,GAASo9B,EAAAh3C,GAUbg3C,EAAAE,WAAA,SAAA1+B,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAA7f,GAAA6f,EACAhb,EAAA7E,EAAAgmB,QACA/Y,EAAApI,EAAAsF,QAAA,QACA,OAAA8C,GAAA,EACApI,EAEAA,EAAA8a,OAAA,EAAA1S,IAEAoxC,EAAAv9C,UAAA09C,OAAA,SAAAn2B,GACA,MAAA9oB,MAAA+oB,UACAzX,KAAkBxQ,OAAAmQ,EAAA,GAAG6X,MAQrBg2B,EAAAv9C,UAAAmvB,UAAA,SAAA5H,GACA,GAAA9mB,IACA2oB,WAAwB7pB,OAAAmQ,EAAA,GAAMoQ,EAAA,iCAC9B69B,KAAAp2B,EAAAo2B,KACAC,KAAAr2B,EAAAq2B,KACAC,QAAAt2B,EAAAs2B,UAuBA,OApBAt2B,GAAAu2B,IAAAv2B,EAAAu2B,GAAAl9C,OAAA,IACAH,EAAA2oB,WAAgC7pB,OAAAmQ,EAAA,GAAMjP,EAAA2oB,YACtC00B,IAAqBlkB,QAAArS,EAAAu2B,OAGrBv2B,EAAAw2B,IAAAx2B,EAAAw2B,GAAAn9C,OAAA,IACAH,EAAA2oB,WAAgC7pB,OAAAmQ,EAAA,GAAMjP,EAAA2oB,YACtC20B,IAAqBnkB,QAAArS,EAAAw2B,OAGrBx2B,EAAAy2B,KAAAz2B,EAAAy2B,IAAAp9C,OAAA,IACAH,EAAA2oB,WAAgC7pB,OAAAmQ,EAAA,GAAMjP,EAAA2oB,YACtC40B,KAAsBpkB,QAAArS,EAAAy2B,QAGtBz2B,EAAA02B,oBACAx9C,EAAA2oB,WAAgC7pB,OAAAmQ,EAAA,GAAMjP,EAAA2oB,YACtC60B,kBAAA12B,EAAA02B,qBAGAx/C,KAAAonB,MAAA03B,EAAA,gBAAAG,OAAAj9C,IAEA88C,EAAAv9C,UAAAk+C,6BAAA,WACA,MAAAz/C,MAAAonB,MAAA03B,EAAA,mCAAAG,YAEAH,EAAAv9C,UAAAm+C,iBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,OACA,KAAAA,IAA2CA,GAAA,EAC3C,IAAAh+C,IACA+9C,oBACAJ,QACAG,mBACAE,oBACAJ,SACAC,UAEA,OAAA7/C,MAAAonB,MAAA03B,EAAA,uCAAAG,OAAAj9C,IAEA88C,EAAAv9C,UAAA0+C,iBAAA,SAAAN,EAAAC,EAAAC,EAAA70B,EAAA4vB,GACA,GAAA54C,IACAgpB,YACA20B,QACA/E,WACAgF,SACAC,UAEA,OAAA7/C,MAAAonB,MAAA03B,EAAA,sCAAAG,OAAAj9C,IAEA88C,EAAAv9C,UAAA2+C,6BAAA,SAAAC,GACA,GAAAn+C,IACAm+C,cAEA,OAAAngD,MAAAonB,MAAA03B,EAAA,mCAAAG,OAAAj9C,IAEA88C,EAAAv9C,UAAA6+C,yBAAA,SAAAC,EAAAzF,OACA,KAAAA,IAAkCA,EAAA,GAClC,IAAA54C,IACAq+C,SACAzF,WAEA,OAAA56C,MAAAonB,MAAA03B,EAAA,+BAAAG,OAAAj9C,IAEA88C,EAAAv9C,UAAA++C,eAAA,SAAA1pC,GACA,MAAA5W,MAAAonB,MAAA03B,EAAA,iCAAAG,QACA5jC,WAAAzE,IACS1N,KAAA,SAAApF,GACT,OACA8J,KAAA9J,EACA2xB,KAAA,GAAAkM,IAAAthB,EAAAvc,QAIAg7C,GACC74B,GAKD/C,GAAA,WAOA,QAAAA,GAAAjD,EAAAsgC,OACA,KAAAtgC,IAAkCA,UAClC,KAAAsgC,IAAkCA,EAAA,IAClCvgD,KAAAigB,WACAjgB,KAAAugD,WAoIA,MA3HAr9B,GAAA3hB,UAAAye,UAAA,SAAApY,EAAAoZ,GAEA,WADA,KAAAA,IAAiCA,EAAA,IACjC,GAAAkC,GAAAtb,EAAAoZ,IAOAkC,EAAA3hB,UAAAsf,MAAA,SAAAnV,GACAmV,EAAAnV,IAOAwX,EAAA3hB,UAAAi/C,cAAA,SAAAzgC,GACA,GAAA0gC,EAOA,OALAA,GADA,gBAAA1gC,IAC0B6zB,UAAA7zB,GAG1BA,EAEA/f,KAAAsO,OAAAgkC,IAAAhD,QAAAmR,IAOAv9B,EAAA3hB,UAAA2gB,OAAA,SAAAnC,GACA,MAAA/f,MAAAsO,OAAA+gC,IAAAC,QAAAvvB,IAQAmD,EAAA3hB,UAAAm/C,kBAAA,SAAA3gC,EAAAnY,GACA,MAAA5H,MAAAsO,OAAA+gC,IAAAsR,aAAA/4C,GAAA0nC,QAAAvvB,IAEAjf,OAAAC,eAAAmiB,EAAA3hB,UAAA,QAKAL,IAAA,WACA,MAAAlB,MAAAsO,OAAA6U,KAEAliB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAmiB,EAAA3hB,UAAA,OAKAL,IAAA,WACA,MAAAlB,MAAAsO,OAAA8U,KAEAniB,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAmiB,EAAA3hB,UAAA,YAKAL,IAAA,WACA,MAAAlB,MAAAsO,OAAA8rC,KAEAn5C,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAmiB,EAAA3hB,UAAA,UAIAL,IAAA,WACA,MAAAlB,MAAAsO,OAAA8uC,KAEAn8C,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAmiB,EAAA3hB,UAAA,cAIAL,IAAA,WACA,UAAA6sC,KAEA9sC,YAAA,EACAD,cAAA,IAMAkiB,EAAA3hB,UAAA+1C,YAAA,WACA,MAAAt3C,MAAA2jB,IAAA2zB,eAEAx2C,OAAAC,eAAAmiB,EAAA3hB,UAAA,WAIAL,IAAA,WACA,MAAAlB,MAAAsO,OAAAwwC,GAAA,KAEA79C,YAAA,EACAD,cAAA,IAQAkiB,EAAA3hB,UAAA+M,OAAA,SAAAsyC,EAAAp9C,GACA,UAAAo9C,GAAA5gD,KAAAugD,SAAA/8C,GAAAwc,UAAAhgB,KAAAigB,WAEAiD,IAEA,IAAAA,MXqqD6B3iB,KAAKoB,EAAqBzB,EAAoB,KAIrE,SAAUN,EAAQ+B,EAAqBzB,GAE7C,YYnnUA,SAAA2gD,GAAA/+C,GAMA,MALI4e,GAAA,EAAM3Q,KACVnC,KAAoB,IAAN8S,EAAA,EAAMrR,eAAAvN,EAAAu6B,UACpBvsB,MAAA,EACAlG,QAAA,IAAA9H,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,0EAEAiG,QAAAC,QAAAvH,EAAAu6B,QAAA,MAKA,QAAAykB,GAAAh/C,EAAA4E,GACA,UAAA0C,SAAA,SAAAC,GACAvH,EAAAu6B,OAAA31B,EACA5E,EAAAi/C,WAAA,EACA13C,EAAAvH,KAQA,QAAAoQ,GAAAzR,GACA,MAAAA,GAAAinB,SAAAvlB,OAAA,EACA1B,EAAAinB,SAAAs5B,QAAAvgD,GAGA2I,QAAAC,QAAA5I,GAQA,QAAAwgD,GAAAn/C,GACAA,EAAA4lB,SAAAvlB,OAAA,GACQue,EAAA,EAAM7Q,MAAA,IAAA/N,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,4CAEd,IAAAq+B,GAAAtvB,EAAApQ,GAAAoH,KAAA,SAAAuc,GAAqD,MAAAo7B,GAAAp7B,KAA4B5b,MAAA,SAAAkB,GAEjF,KADQ2V,GAAA,EAAMrT,MAAAtC,GACdA,GAMA,OAJAjJ,GAAAmmB,WAEAnmB,EAAAklB,MAAAk6B,0BAAA1f,GAEAA,EAKA,QAAA2f,GAAAC,GAEA,WADA,KAAAA,IAA+BA,GAAA,GAC/B,SAAAx8C,EAAAy8C,EAAAC,GACA,GAAAv/C,GAAAu/C,EAAA56C,KACA46C,GAAA56C,MAAA,WAEA,OADA+a,MACAxf,EAAA,EAA4BA,EAAAC,UAAAC,OAAuBF,IACnDwf,EAAAxf,GAAAC,UAAAD,EAGA,QAAAm/C,GAAA3/B,EAAAtf,OAAA,GAAiDrB,OAAAmQ,EAAA,GAAGwQ,EAAA,iBAAAA,EAAA,GAAAs/B,WACpCrgC,EAAA,EAAM7Q,MAAA,IAAA4R,EAAA,GAAA4G,UAAA,UAAA3lB,OAAAS,UAAA,sCAAAk+C,EAAA,oCACtBj4C,QAAAC,QAAAoY,EAAA,MAGYf,EAAA,EAAM7Q,MAAA,IAAA4R,EAAA,GAAA4G,UAAA,UAAA3lB,OAAAS,UAAA,qCAAAk+C,EAAA,OAElBt/C,EAAAK,MAAAwC,EAAA6c,GAAAvY,KAAA,SAAAuc,GAAmE,MAAAvT,GAAAuT,QAkInE,QAAA87B,KACA,OACAC,EAAAC,SACAD,EAAAE,QACAF,EAAAG,KACAH,EAAAI,QACAtxC,MAAA,GAjZApQ,EAAAQ,EAAAiB,EAAA,qBAAAkgD,KAAA3hD,EAAAQ,EAAAiB,EAAA,qBAAAmgD,KAAA5hD,EAAAQ,EAAAiB,EAAA,qBAAAogD,KAAA7hD,EAAAQ,EAAAiB,EAAA,qBAAAqgD,KAAA9hD,EAAAQ,EAAAiB,EAAA,qBAAAsgD,KAAA/hD,EAAAQ,EAAAiB,EAAA,qBAAAugD,KAAAhiD,EAAAQ,EAAAiB,EAAA,qBAAAwgD,KAAAjiD,EAAAQ,EAAAiB,EAAA,qBAAAygD,KAAAliD,EAAAQ,EAAAiB,EAAA,qBAAA0gD,IAAA,IAAApxC,GAAA/Q,EAAA,GAAAwhB,EAAAxhB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAaA2hD,EAAA,WACA,QAAAA,GAAAl2C,GACA3L,KAAA2L,MACA3L,KAAAsM,WAA0BxL,OAAAmQ,EAAA,GAAO,GAAAvO,MAAA,SAAuBuO,EAAA,EAAajE,8BACrEhN,KAAAsiD,UAAyBrxC,EAAA,EAAasxC,oBAetC,MAbAzhD,QAAAC,eAAA8gD,EAAAtgD,UAAA,SACAL,IAAA,WACA,gBAAAlB,KAAAsiD,UACAT,EAAAW,QAAAC,MAGAZ,EAAAW,QAAAE,SAGAzhD,YAAA,EACAD,cAAA,IAEA6gD,EAAAW,QAAA,GAAiCvxC,GAAA,EACjC4wC,KAEAc,EAAA,WACA,QAAAA,GAAA13C,EAAA23C,GACA5iD,KAAAiL,SACAjL,KAAA4iD,eAYA,MAVAD,GAAAphD,UAAA8K,MAAA,SAAAiG,GACA,GAAAtK,GAAAhI,IACA,OAAAA,MAAAiL,OAAAoB,MAAAiG,GAAApJ,KAAA,SAAApF,GAA8D,MAAAkE,GAAA66C,UAAA/+C,MAE9D6+C,EAAAphD,UAAAshD,UAAA,SAAAj1C,GAIA,MAHA,QAAA5N,KAAA4iD,aAAA92C,OACA9L,KAAA4iD,aAAA92C,MAAAU,IAAAxM,KAAA4iD,aAAAj3C,IAAAiC,EAAA5N,KAAA4iD,aAAAt2C,YAEAsB,GAEA+0C,KAGAG,EAAA,SAAAh7C,GAEA,QAAAg7C,GAAAl5C,EAAA0I,EAAAb,EAAAC,OACA,KAAAD,IAAgCA,EAAAa,EAAAb,YAChC,KAAAC,IAAoCA,EAAAY,EAAAZ,WACpC,IAAA1J,GAAAF,EAAAvH,KAAAP,KAAA4J,IAAA5J,IAKA,OAJAgI,GAAAsK,WACAtK,EAAAyJ,SACAzJ,EAAA0J,aACA1J,EAAA+6C,oBAAA,EACA/6C,EAEA,MAXIlH,QAAA4gB,EAAA,GAASohC,EAAAh7C,GAWbg7C,GACC/5C,OACD+4C,EAAA,WACA,QAAAA,MAwDA,MAtDAA,GAAAvgD,UAAA8K,MAAA,SAAAvI,GACA,GAAAkE,GAAAhI,IACA,WAAAoJ,SAAA,SAAAC,EAAAC,GACAtB,EAAAw6B,YAAA1+B,EAAAwF,IACAtB,EAAAg7C,UAAAl/C,EAAAuF,EAAAC,MAIAw4C,EAAAvgD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,EAAAC,GACA,GAAAtB,GAAAhI,IACA8D,GAAA0C,QAAA4e,IAAA,uBAAAmgB,WAAAzhC,EAAA0C,QAAAtF,IAAA,0BAAA4C,EAAA2N,OACApI,MAIAvF,EAAAs6B,OACAl1B,KAAA,SAAA+5C,GAAsC,MAAAA,GAAAt/C,QAAA,WAAAxB,OAAA,EAAA6D,KAAAqG,MAAA42C,QACtC/5C,KAAA,SAAA+G,GAAuC,MAAA5G,GAAArB,EAAA06B,eAAAzyB,MACvCpG,MAAA,SAAAkB,GAAqC,MAAAzB,GAAAyB,MAUrC+2C,EAAAvgD,UAAAihC,YAAA,SAAA1+B,EAAAwF,GAIA,MAHAxF,GAAAo/C,IACA55C,EAAA,GAAAw5C,GAAA,kDAAAh/C,EAAA2N,OAAA,KAAA3N,EAAA4N,WAAA5N,EAAAsjB,UAEAtjB,EAAAo/C,IAOApB,EAAAvgD,UAAAmhC,eAAA,SAAAzyB,GACA,GAAAosB,GAAApsB,CAYA,OAXYnP,QAAAmQ,EAAA,GAAGhB,EAAA,KAEfosB,EADgBv7B,OAAAmQ,EAAA,GAAGhB,EAAAvP,EAAA,WACnBuP,EAAAvP,EAAAy6B,QAGAlrB,EAAAvP,EAGiBI,OAAAmQ,EAAA,GAAGhB,EAAA,WACpBosB,EAAApsB,EAAAvJ,OAEA21B,GAEAylB,KAEAC,EAAA,SAAAj6C,GAEA,QAAAi6C,KACA,cAAAj6C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAEA,MAJIc,QAAA4gB,EAAA,GAASqgC,EAAAj6C,GAIbi6C,GACCD,GACDE,EAAA,SAAAl6C,GAEA,QAAAk6C,KACA,cAAAl6C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAASsgC,EAAAl6C,GAIbk6C,EAAAzgD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,GACAvF,EAAAs6B,OAAAl1B,KAAAG,IAEA24C,GACCF,GACDG,EAAA,SAAAn6C,GAEA,QAAAm6C,KACA,cAAAn6C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAASugC,EAAAn6C,GAIbm6C,EAAA1gD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,GACAvF,EAAAq/C,OAAAj6C,KAAAG,IAEA44C,GACCH,GACDI,EAAA,SAAAp6C,GAEA,QAAAo6C,KACA,cAAAp6C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAKA,MAPIc,QAAA4gB,EAAA,GAASwgC,EAAAp6C,GAIbo6C,EAAA3gD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,GACAvF,EAAAmM,OAAA/G,KAAAG,IAEA64C,GACCJ,GACDK,EAAA,SAAAr6C,GAEA,QAAAq6C,KACA,cAAAr6C,KAAA1F,MAAApC,KAAAkC,YAAAlC,KAUA,MAZIc,QAAA4gB,EAAA,GAASygC,EAAAr6C,GAIbq6C,EAAA5gD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,GACYvI,OAAAmQ,EAAA,GAAMnN,EAAAs/C,aAClBt/C,EAAAs/C,cAAAl6C,KAAAG,GAGAvF,EAAA03C,SAAAtyC,KAAAG,IAGA84C,GACCL,GAgGDN,GA/FA,SAAA15C,GAEA,QAAAu7C,GAAAp4C,GACA,GAAAjD,GAAAF,EAAAvH,KAAAP,WAEA,OADAgI,GAAAiD,SACAjD,EAJIlH,OAAA4gB,EAAA,GAAS2hC,EAAAv7C,GAMbu7C,EAAA9hD,UAAAyhD,UAAA,SAAAl/C,EAAAuF,GACArJ,KAAAiL,OAAAnH,GAAAoF,KAAAG,KAGCy4C,GAoFD,WACA,QAAAN,MAwHA,MAnHAA,GAAAC,SAAA,SAAA3/C,GACA,UAAAsH,SAAA,SAAAC,GACYqX,EAAA,EAAM3Q,KAClBnC,KAA4B,IAAN8S,EAAA,EAAMrR,kBAAqCvN,EACjEgO,MAAA,EACAlG,QAAA,IAAA9H,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,eAAArB,EAAA2lB,KAAA,aAAA3lB,EAAAsmB,mBAAA,MAEA/e,EAAAvH,MAMA0/C,EAAAE,QAAA,SAAA5/C,GACA,UAAAsH,SAAA,SAAAC,GAEA,GAAAvH,EAAAomB,SAAA,CACgBxH,EAAA,EAAM7Q,MAAA,IAAA/N,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,wDACtB,IAAAy/C,GAAA,GAAAf,GAAA//C,EAAAsmB,mBAAAzlB,cAKA,QAJAS,KAAAtB,EAAAgmB,iBACA86B,EAAmC9hD,OAAAmQ,EAAA,GAAM2xC,EAAA9gD,EAAAgmB,iBAGzC,OAAA86B,EAAA92C,MAAA,CAEA,GAAA8B,GAAAg1C,EAAA92C,MAAA5K,IAAA0hD,EAAAj3C,IACA,WAAAiC,EAcA,MAZwB8S,GAAA,EAAM3Q,KAC9BnC,KAAwC,IAAN8S,EAAA,EAAMrR,kBAAqCzB,EAC7EkC,MAAA,EACAlG,QAAA,IAAA9H,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,iCAE4BrC,OAAAmQ,EAAA,GAAMnP,EAAA+lB,kBAClC/lB,EAAA+lB,kBAG4B/mB,OAAAmQ,EAAA,GAAGnP,EAAAmJ,OAAA,aAC/B2C,EAAA9L,EAAAmJ,OAAAsY,QAAA3V,IAEAkzC,EAAAh/C,EAAA8L,GAAA1E,KAAA,SAAAuc,GAA6E,MAAApc,GAAAoc,KAG7D/E,EAAA,EAAM7Q,MAAA,IAAA/N,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,iCAGtBrB,EAAAmJ,OAAA,GAAA03C,GAAA7gD,EAAAmJ,OAAA23C,GAEA,MAAAv5C,GAAAvH,MAMA0/C,EAAAG,KAAA,SAAA7/C,GACA,UAAAsH,SAAA,SAAAC,EAAAC,GAEA,GAAAxH,EAAAmmB,UAAA,CAEA,GAAAxmB,GAAAK,EAAAklB,MAAAiD,IAAAnoB,EAAAsmB,mBAAAtmB,EAAA2lB,KAAA3lB,EAAA8F,QAAA9F,EAAAmJ,OAAAnJ,EAAAumB,UAEoBvnB,QAAAmQ,EAAA,GAAMnP,EAAA+lB,kBAC1B/lB,EAAA+lB,kBAEgBnH,EAAA,EAAM7Q,MAAA,IAAA/N,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,+BAAArB,EAAAklB,MAAAqgB,QAAA,OAEtBh+B,EAAAy3C,EAAAh/C,EAAAL,QAEA,CACgBif,EAAA,EAAM7Q,MAAA,IAAA/N,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,uBAEtB,IAAAgxB,GAAAryB,EAAAkmB,gBACA7C,EAA2BrkB,OAAAmQ,EAAA,GAAMnP,EAAA8F,aAAyB7F,OAAAD,EAAA2lB,MAC1D0M,GAAAxsB,MAAA7F,EAAAsmB,mBAAAjD,GACAjc,KAAA,SAAAoJ,GAA+C,MAAAxQ,GAAAmJ,OAAAoB,MAAAiG,KAC/CpJ,KAAA,SAAAmzB,GAA6C,MAAAykB,GAAAh/C,EAAAu6B,KAC7CnzB,KAAA,SAAAuc,GAA0C,MAAApc,GAAAoc,KAC1C5b,MAAA,SAAAkB,GAAyC,MAAAzB,GAAAyB,SAOzCy2C,EAAAI,OAAA,SAAA9/C,GACA,UAAAsH,SAAA,SAAAC,GACAvH,EAAAmmB,UACgBvH,EAAA,EAAM3Q,KACtBnC,KAAgC,IAAN8S,EAAA,EAAMrR,kBAAqCvN,EACrEgO,MAAA,EACAlG,QAAA,IAAA9H,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,KAAArB,EAAA2lB,KAAA,mCAAA3lB,EAAAklB,MAAAqgB,QAAA,MAIgB3mB,EAAA,EAAM3Q,KACtBnC,KAAgC,IAAN8S,EAAA,EAAMrR,kBAAqCvN,EACrEgO,MAAA,EACAlG,QAAA,IAAA9H,EAAAumB,UAAA,UAAA3lB,OAAAS,UAAA,gBAAArB,EAAA2lB,KAAA,cAGApe,EAAAvH,MAGIhB,OAAA4gB,EAAA,IACJy/B,GAAA,IACAK,EAAA,iBACI1gD,OAAA4gB,EAAA,IACJy/B,KACAK,EAAA,gBACI1gD,OAAA4gB,EAAA,IACJy/B,KACAK,EAAA,aACI1gD,OAAA4gB,EAAA,IACJy/B,GAAA,IACAK,EAAA,eACAA,MAWA8B,EAAA,WACA,QAAAA,KACAtjD,KAAAswC,OAAA,GAAAxpC,KACA9G,KAAAigB,YACAjgB,KAAAqmB,KAAA,GACArmB,KAAAomB,WAAA,GACApmB,KAAAmoB,aAAA,EACAnoB,KAAA+nB,gBAAA,KAoHA,MA9GAu7B,GAAA/hD,UAAAklB,MAAA,WACA,MAAAzmB,MAAAqmB,MAOAi9B,EAAA/hD,UAAAuoB,OAAA,SAAAy5B,GAEA,MADAvjD,MAAAqmB,MAAAk9B,EACAvjD,MAEAc,OAAAC,eAAAuiD,EAAA/hD,UAAA,SAKAL,IAAA,WACA,MAAAlB,MAAAswC,QAEArvC,YAAA,EACAD,cAAA,IAOAsiD,EAAA/hD,UAAAye,UAAA,SAAApY,GAEA,MADQ9G,QAAAmQ,EAAA,GAAYjR,KAAAigB,SAAArY,GACpB5H,MAOAsjD,EAAA/hD,UAAA2lB,cAAA,SAAArmB,GAEA,MADQC,QAAAmQ,EAAA,GAAYjR,KAAAigB,SAAApf,EAAAof,UACpBjgB,MAOAsjD,EAAA/hD,UAAAo/C,aAAA,SAAA/4C,GAOA,MANaqJ,GAAA,EAAauyC,qBAC1BxjD,KAAAmoB,aAAA,MACA/kB,KAAAwE,IACA5H,KAAA+nB,gBAAAngB,IAGA5H,MAEAsjD,EAAA/hD,UAAAkiD,QAAA,SAAAx4C,EAAArD,GAGA,WAFA,KAAAqD,IAAgCA,EAAA,GAAAi3C,QAChC,KAAAt6C,IAAiCA,MACjC5H,KAAAwnB,iBAAA,MAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA4G,MAAAm/C,GAAAn/C,MAE5GwhD,EAAA/hD,UAAAwnB,SAAA,SAAAnhB,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAAi3C,IAChCliD,KAAAwnB,iBAAA,OAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA6G,MAAAm/C,GAAAn/C,MAE7GwhD,EAAA/hD,UAAAg7B,UAAA,SAAA30B,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAAi3C,IAChCliD,KAAAwnB,iBAAA,QAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA8G,MAAAm/C,GAAAn/C,MAE9GwhD,EAAA/hD,UAAAi7B,WAAA,SAAA50B,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAAi3C,IAChCliD,KAAAwnB,iBAAA,SAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA+G,MAAAm/C,GAAAn/C,MAE/GwhD,EAAA/hD,UAAAmiD,QAAA,SAAA97C,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAAi3C,IAChCliD,KAAAwnB,iBAAA,MAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA4G,MAAAm/C,GAAAn/C,MAO5GwhD,EAAA/hD,UAAAoF,OAAA,SAAA48C,GACAvjD,KAAAqmB,KAAoBvlB,OAAAmQ,EAAA,GAAOjR,KAAAqmB,KAAAk9B,IAE3BziD,OAAAC,eAAAuiD,EAAA/hD,UAAA,aAKAL,IAAA,WACA,MAAAlB,MAAAomB,YAEAnlB,YAAA,EACAD,cAAA,IAQAsiD,EAAA/hD,UAAAoD,OAAA,SAAA+W,EAAAlY,GACAxD,KAAAomB,WAAA1K,EAAA2K,KACArmB,KAAAqmB,KAAoBvlB,OAAAmQ,EAAA,GAAOjR,KAAAomB,WAAA5iB,GAC3BxD,KAAAknB,cAAAxL,IAEA4nC,KAEAlB,EAAA,SAAAt6C,GAEA,QAAAs6C,KACA,GAAAp6C,GAAAF,EAAAvH,KAAAP,WAEA,OADAgI,GAAA27C,OAAA,KACA37C,EA8FA,MAlGIlH,QAAA4gB,EAAA,GAAS0gC,EAAAt6C,GAiBbs6C,EAAA7gD,UAAA4lB,QAAA,SAAAH,GACA,UAAAhnB,KAAAgnB,MACA,KAAAje,OAAA,yCAGA,OADA/I,MAAA2jD,OAAA38B,EACAhnB,MAMAoiD,EAAA7gD,UAAAklB,MAAA,WACA,MAAAzmB,MAAAqmB,MAQA+7B,EAAA7gD,UAAAL,IAAA,SAAA+J,EAAArD,GAGA,WAFA,KAAAqD,IAAgCA,EAAA,GAAA82C,QAChC,KAAAn6C,IAAiCA,MACjC5H,KAAAyjD,QAAAx4C,EAAArD,IAEAw6C,EAAA7gD,UAAAkiD,QAAA,SAAAx4C,EAAArD,GAGA,WAFA,KAAAqD,IAAgCA,EAAA,GAAA82C,QAChC,KAAAn6C,IAAiCA,MACjC5H,KAAAwnB,iBAAA,MAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA4G,MAAAm/C,GAAAn/C,MAE5GsgD,EAAA7gD,UAAAwnB,SAAA,SAAAnhB,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAA82C,IAChC/hD,KAAAwnB,iBAAA,OAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA6G,MAAAm/C,GAAAn/C,MAE7GsgD,EAAA7gD,UAAAg7B,UAAA,SAAA30B,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAA82C,IAChC/hD,KAAAwnB,iBAAA,QAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA8G,MAAAm/C,GAAAn/C,MAE9GsgD,EAAA7gD,UAAAi7B,WAAA,SAAA50B,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAA82C,IAChC/hD,KAAAwnB,iBAAA,SAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA+G,MAAAm/C,GAAAn/C,MAE/GsgD,EAAA7gD,UAAAmiD,QAAA,SAAA97C,EAAAqD,GAGA,WAFA,KAAArD,IAAiCA,UACjC,KAAAqD,IAAgCA,EAAA,GAAA82C,IAChC/hD,KAAAwnB,iBAAA,MAAA5f,EAAAqD,EAAAs2C,KAAAr4C,KAAA,SAAApH,GAA4G,MAAAm/C,GAAAn/C,MAK5GsgD,EAAA7gD,UAAAqmB,mBAAA,WACA,cAAA5nB,KAAA2jD,OACA3jD,KAAA2jD,OAAAC,gBAEA,WAA4B,cAE5B9iD,OAAAC,eAAAqhD,EAAA7gD,UAAA,YAKAL,IAAA,WACA,MAAmBJ,QAAAmQ,EAAA,GAAoBjR,KAAA2jD,SAEvC1iD,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAqhD,EAAA7gD,UAAA,SAKAL,IAAA,WACA,MAAAlB,MAAAunB,SAAAvnB,KAAA2jD,OAAA,MAEA1iD,YAAA,EACAD,cAAA,IAEAohD,GACCkB,GAEDjB,EAAA,WACA,QAAAA,GAAAwB,OACA,KAAAA,IAAkCA,EAAY/iD,OAAAmQ,EAAA,MAC9CjR,KAAA6jD,WACA7jD,KAAA8jD,SACA9jD,KAAA+jD,SACA/jD,KAAAgkD,UA8EA,MA5EAljD,QAAAC,eAAAshD,EAAA9gD,UAAA,WACAL,IAAA,WACA,MAAAlB,MAAA6jD,UAEA5iD,YAAA,EACAD,cAAA,IAEAF,OAAAC,eAAAshD,EAAA9gD,UAAA,YAIAL,IAAA,WACA,MAAAlB,MAAA8jD,OAEA7iD,YAAA,EACAD,cAAA,IAUAqhD,EAAA9gD,UAAA0oB,IAAA,SAAA3kB,EAAAvD,EAAA6F,EAAAqD,EAAAue,GACA,GAAA5S,IACA4S,KACAznB,SAAAsjB,cACAzd,UACAqD,SACA3B,OAAA,KACAD,QAAA,KACA/D,OAEA7D,EAAA,GAAA2H,SAAA,SAAAC,EAAAC,GACAsN,EAAAvN,UACAuN,EAAAtN,UAGA,OADAtJ,MAAA8jD,MAAAzzC,KAAAuG,GACAnV,GAMA4gD,EAAA9gD,UAAAqiD,cAAA,WACA,GAAAK,GAAA,YAIA,OAHAjkD,MAAA+jD,MAAA1zC,KAAA,GAAAjH,SAAA,SAAAC,GACA46C,EAAA56C,KAEA46C,GAOA5B,EAAA9gD,UAAA2/C,0BAAA,SAAAz/C,GACAzB,KAAAgkD,OAAA3zC,KAAA5O,IAOA4gD,EAAA9gD,UAAA+tC,QAAA,WACA,GAAAtnC,GAAAhI,IAGA,OAAAoJ,SAAA86C,IAAAlkD,KAAA+jD,OACA76C,KAAA,WAA+B,MAAAE,SAAA86C,IAAAl8C,EAAA+7C,SAC/B76C,KAAA,WAA+B,MAAAlB,GAAAo/B,gBAC/Bl+B,KAAA,WAA+B,MAAAE,SAAA86C,IAAAl8C,EAAAg8C,UAC/B96C,KAAA,eAEAm5C","file":"sp-addinhelpers.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-addinhelpers\"] = factory();\n\telse\n\t\troot[\"pnp.sp-addinhelpers\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-addinhelpers\"] = factory();\n\telse\n\t\troot[\"pnp.sp-addinhelpers\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export AdalClient */\n/* unused harmony export objectToMap */\n/* unused harmony export mergeMaps */\n/* unused harmony export setup */\n/* unused harmony export RuntimeConfigImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return mergeHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FetchClient; });\n/* unused harmony export BearerTokenFetchClient */\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PnPClientStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return getCtxCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return dateAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return combine; });\n/* unused harmony export getRandomString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getGUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return isFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return objectDefinedNotNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return isUrlAbsolute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return stringIsNullOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getAttrValueFromString; });\n/* unused harmony export sanitizeGuid */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return jsS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return hOP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return getHashCode; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__);\n/**\n@license\n * @pnp/common v1.2.2-1 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nfunction getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global$1.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = Object(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__[\"inject\"])({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/* unused harmony export __importStar */\n/* unused harmony export __importDefault */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/* unused harmony export LogLevel */\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\n@license\n * @pnp/logging v1.2.2-1 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__ = __webpack_require__(5);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRequestExecutorClient\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SPRestAddIn\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"sp\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_addinhelpers__[\"c\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__ = __webpack_require__(6);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__sprequestexecutorclient__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sprestaddin__ = __webpack_require__(8);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__sprestaddin__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__sprestaddin__[\"b\"]; });\n\r\n\r\n//# sourceMappingURL=addinhelpers.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRequestExecutorClient; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(0);\n\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\n\r\n//# sourceMappingURL=sprequestexecutorclient.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRestAddIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sp; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_common__ = __webpack_require__(0);\n\r\n\r\n\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"b\" /* Site */], addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"c\" /* Web */], addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"n\" /* isUrlAbsolute */])(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"n\" /* isUrlAbsolute */])(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = Object(__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"d\" /* combine */])(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"a\" /* SPRest */]));\r\n\r\nvar sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export odataUrlFrom */\n/* unused harmony export spODataEntity */\n/* unused harmony export spODataEntityArray */\n/* unused harmony export SharePointQueryable */\n/* unused harmony export SharePointQueryableInstance */\n/* unused harmony export SharePointQueryableCollection */\n/* unused harmony export SharePointQueryableSecurable */\n/* unused harmony export FileFolderShared */\n/* unused harmony export SharePointQueryableShareable */\n/* unused harmony export SharePointQueryableShareableFile */\n/* unused harmony export SharePointQueryableShareableFolder */\n/* unused harmony export SharePointQueryableShareableItem */\n/* unused harmony export SharePointQueryableShareableWeb */\n/* unused harmony export AppCatalog */\n/* unused harmony export App */\n/* unused harmony export SPBatch */\n/* unused harmony export ContentType */\n/* unused harmony export ContentTypes */\n/* unused harmony export FieldLink */\n/* unused harmony export FieldLinks */\n/* unused harmony export Field */\n/* unused harmony export Fields */\n/* unused harmony export CheckinType */\n/* unused harmony export WebPartsPersonalizationScope */\n/* unused harmony export MoveOperations */\n/* unused harmony export TemplateFileType */\n/* unused harmony export File */\n/* unused harmony export Files */\n/* unused harmony export Folder */\n/* unused harmony export Folders */\n/* unused harmony export SPHttpClient */\n/* unused harmony export Item */\n/* unused harmony export Items */\n/* unused harmony export ItemVersion */\n/* unused harmony export ItemVersions */\n/* unused harmony export PagedItemCollection */\n/* unused harmony export NavigationNodes */\n/* unused harmony export NavigationNode */\n/* unused harmony export NavigationService */\n/* unused harmony export List */\n/* unused harmony export Lists */\n/* unused harmony export RegionalSettings */\n/* unused harmony export InstalledLanguages */\n/* unused harmony export TimeZone */\n/* unused harmony export TimeZones */\n/* unused harmony export sp */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPRest; });\n/* unused harmony export RoleDefinitionBindings */\n/* unused harmony export Search */\n/* unused harmony export SearchQueryBuilder */\n/* unused harmony export SearchResults */\n/* unused harmony export SortDirection */\n/* unused harmony export ReorderingRuleMatchType */\n/* unused harmony export QueryPropertyValueType */\n/* unused harmony export SearchBuiltInSourceId */\n/* unused harmony export SearchSuggest */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Site; });\n/* unused harmony export UserProfileQuery */\n/* unused harmony export toAbsoluteUrl */\n/* unused harmony export extractWebUrl */\n/* unused harmony export UtilityMethod */\n/* unused harmony export View */\n/* unused harmony export Views */\n/* unused harmony export ViewFields */\n/* unused harmony export WebPartDefinitions */\n/* unused harmony export WebPartDefinition */\n/* unused harmony export WebPart */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Web; });\n/* unused harmony export PromotedState */\n/* unused harmony export ClientSidePage */\n/* unused harmony export CanvasSection */\n/* unused harmony export CanvasControl */\n/* unused harmony export CanvasColumn */\n/* unused harmony export ClientSidePart */\n/* unused harmony export ClientSideText */\n/* unused harmony export ClientSideWebpart */\n/* unused harmony export Comments */\n/* unused harmony export Comment */\n/* unused harmony export Replies */\n/* unused harmony export SocialQuery */\n/* unused harmony export MySocialQuery */\n/* unused harmony export SocialActorType */\n/* unused harmony export SocialActorTypes */\n/* unused harmony export SocialFollowResult */\n/* unused harmony export SocialStatusCode */\n/* unused harmony export ControlMode */\n/* unused harmony export FieldTypes */\n/* unused harmony export DateTimeFieldFormatType */\n/* unused harmony export AddFieldOptions */\n/* unused harmony export CalendarType */\n/* unused harmony export UrlFieldFormatType */\n/* unused harmony export PermissionKind */\n/* unused harmony export PrincipalType */\n/* unused harmony export PrincipalSource */\n/* unused harmony export RoleType */\n/* unused harmony export PageType */\n/* unused harmony export SharingLinkKind */\n/* unused harmony export SharingRole */\n/* unused harmony export SharingOperationStatusCode */\n/* unused harmony export SPSharedObjectType */\n/* unused harmony export SharingDomainRestrictionMode */\n/* unused harmony export RenderListDataOptions */\n/* unused harmony export FieldUserSelectionMode */\n/* unused harmony export ChoiceFieldFormatType */\n/* unused harmony export UrlZone */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(10);\n/**\n@license\n * @pnp/sp v1.2.2-1 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"s\" /* stringIsNullOrEmpty */])(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[3]) && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */].apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataParserBase */]));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== undefined && __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* FetchClient */](); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2-1\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.2-1\");\r\n        }\r\n        opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getCtxCallback */])(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* isUrlAbsolute */])(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global$1._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(global$1._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global$1._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(global$1._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global$1._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global$1.location !== undefined) {\r\n            var baseUrl_1 = global$1.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* isUrlAbsolute */])(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl.slice(index), path);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"q\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            BasePermissions: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* TextParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"a\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"d\" /* JSONParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(json, \"d\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* TextParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"a\" /* BlobParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BufferParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"d\" /* JSONParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* isUrlAbsolute */])(reqInfo.url) ? reqInfo.url : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(reqInfo, \"options\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2-1\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"e\" /* ODataBatch */]));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            request: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getHashCode */])(postBody) + \")\";\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"r\" /* objectDefinedNotNull */])(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* CachingOptions */](cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isArray */])(prop) ? prop : [prop];\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"queryParams\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* jsS */])(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(2)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return CachingOptions; });\n/* unused harmony export CachingParserWrapper */\n/* unused harmony export HttpRequestError */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataParserBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return TextParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BlobParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return JSONParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BufferParser; });\n/* unused harmony export LambdaParser */\n/* unused harmony export setResult */\n/* unused harmony export pipe */\n/* unused harmony export requestPipelineMethod */\n/* unused harmony export PipelineMethods */\n/* unused harmony export getDefaultPipeline */\n/* unused harmony export Queryable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(3);\n/**\n@license\n * @pnp/odata v1.2.2-1 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    return HttpRequestError;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(\"Error making HttpClient request in queryable: [\" + r.status + \"] \" + r.statusText, r.clone()));\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(json, \"d\")) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* isFunc */])(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n        data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(args[0], \"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* isFunc */])(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* hOP */])(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* isFunc */])(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"q\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"q\" /* mergeOptions */])(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"r\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sp-addinhelpers.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c984b9dc6cdcd457aafc","/**\n@license\n * @pnp/common v1.2.2-1 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { __extends } from 'tslib';\nimport { inject } from 'adal-angular/dist/adal.min.js';\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code for this ObjectPathQueue\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nfunction getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global$1.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    __extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\nexport { AdalClient, objectToMap, mergeMaps, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combine, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, jsS, hOP, getHashCode };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 0\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 2\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.2.2-1 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 3\n// module chunks = 0","export * from \"./src/addinhelpers\";\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/index.js\n// module id = 4\n// module chunks = 0","export { SPRequestExecutorClient } from \"./sprequestexecutorclient\";\r\nexport * from \"./sprestaddin\";\r\n//# sourceMappingURL=addinhelpers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/addinhelpers.js\n// module id = 5\n// module chunks = 0","import { extend } from \"@pnp/common\";\r\n/**\r\n * Makes requests using the SP.RequestExecutor library.\r\n */\r\nvar SPRequestExecutorClient = /** @class */ (function () {\r\n    function SPRequestExecutorClient() {\r\n        /**\r\n         * Converts a SharePoint REST API response to a fetch API response.\r\n         */\r\n        this.convertToResponse = function (spResponse) {\r\n            var responseHeaders = new Headers();\r\n            if (spResponse.headers !== undefined) {\r\n                for (var h in spResponse.headers) {\r\n                    if (spResponse.headers[h]) {\r\n                        responseHeaders.append(h, spResponse.headers[h]);\r\n                    }\r\n                }\r\n            }\r\n            // Cannot have an empty string body when creating a Response with status 204\r\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\r\n            return new Response(body, {\r\n                headers: responseHeaders,\r\n                status: spResponse.statusCode,\r\n                statusText: spResponse.statusText,\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * Fetches a URL using the SP.RequestExecutor library.\r\n     */\r\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (SP === undefined || SP.RequestExecutor === undefined) {\r\n            throw Error(\"SP.RequestExecutor is undefined. Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\");\r\n        }\r\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\r\n        var headers = {}, iterator, temp;\r\n        if (options.headers && options.headers instanceof Headers) {\r\n            iterator = options.headers.entries();\r\n            temp = iterator.next();\r\n            while (!temp.done) {\r\n                headers[temp.value[0]] = temp.value[1];\r\n                temp = iterator.next();\r\n            }\r\n        }\r\n        else {\r\n            headers = options.headers;\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var requestOptions = {\r\n                error: function (error) {\r\n                    reject(_this.convertToResponse(error));\r\n                },\r\n                headers: headers,\r\n                method: options.method,\r\n                success: function (response) {\r\n                    resolve(_this.convertToResponse(response));\r\n                },\r\n                url: url,\r\n            };\r\n            if (options.body) {\r\n                requestOptions = extend(requestOptions, { body: options.body });\r\n            }\r\n            else {\r\n                requestOptions = extend(requestOptions, { binaryStringRequestBody: true });\r\n            }\r\n            executor.executeAsync(requestOptions);\r\n        });\r\n    };\r\n    return SPRequestExecutorClient;\r\n}());\r\nexport { SPRequestExecutorClient };\r\n//# sourceMappingURL=sprequestexecutorclient.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/sprequestexecutorclient.js\n// module id = 6\n// module chunks = 0","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adal-angular/dist/adal.min.js\n// module id = 7\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { SPRest, Web, Site, } from \"@pnp/sp\";\r\nimport { isUrlAbsolute, combine, } from \"@pnp/common\";\r\nvar SPRestAddIn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPRestAddIn, _super);\r\n    function SPRestAddIn() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Site, addInWebUrl, hostWebUrl, \"site\");\r\n    };\r\n    /**\r\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\r\n     *\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     */\r\n    SPRestAddIn.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\r\n        return this._cdImpl(Web, addInWebUrl, hostWebUrl, \"web\");\r\n    };\r\n    /**\r\n     * Implements the creation of cross domain REST urls\r\n     *\r\n     * @param factory The constructor of the object to create Site | Web\r\n     * @param addInWebUrl The absolute url of the add-in web\r\n     * @param hostWebUrl The absolute url of the host web\r\n     * @param urlPart String part to append to the url \"site\" | \"web\"\r\n     */\r\n    SPRestAddIn.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\r\n        if (!isUrlAbsolute(addInWebUrl)) {\r\n            throw Error(\"The addInWebUrl parameter must be an absolute url.\");\r\n        }\r\n        if (!isUrlAbsolute(hostWebUrl)) {\r\n            throw Error(\"The hostWebUrl parameter must be an absolute url.\");\r\n        }\r\n        var url = combine(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\r\n        var instance = new factory(url, urlPart);\r\n        instance.query.set(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\r\n        return instance.configure(this._options);\r\n    };\r\n    return SPRestAddIn;\r\n}(SPRest));\r\nexport { SPRestAddIn };\r\nexport var sp = new SPRestAddIn();\r\n//# sourceMappingURL=sprestaddin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-addinhelpers/es5/src/sprestaddin.js\n// module id = 8\n// module chunks = 0","/**\n@license\n * @pnp/sp v1.2.2-1 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { stringIsNullOrEmpty, extend, combine, hOP, RuntimeConfig, FetchClient, mergeHeaders, getCtxCallback, isUrlAbsolute, mergeOptions, getGUID, jsS, getAttrValueFromString, dateAdd, getHashCode, objectDefinedNotNull, isArray } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\nimport { ODataParserBase, ODataDefaultParser, ODataQueryable, TextParser, BlobParser, JSONParser, BufferParser, ODataBatch, CachingOptions } from '@pnp/odata';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2-1\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.2-1\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global$1._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global$1._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global$1._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global$1.location !== undefined) {\r\n            var baseUrl_1 = global$1.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = __decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = __decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = __decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = __decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = __decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = __decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = __decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = __decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = __decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = __decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = __decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = __decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = __decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = __decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = __decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = __decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = __decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = __decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    __extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = __decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    __extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    __extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = __decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = __decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = __decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.2-1\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    __extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = __decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = __decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = __decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = __decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = __decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = __decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = __decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = __decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = __decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = __decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = __decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = __decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = __decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = __decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    __extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = __decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = __decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = __decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { odataUrlFrom, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, SPBatch, ContentType, ContentTypes, FieldLink, FieldLinks, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, RegionalSettings, InstalledLanguages, TimeZone, TimeZones, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, Site, UserProfileQuery, toAbsoluteUrl, extractWebUrl, UtilityMethod, View, Views, ViewFields, WebPartDefinitions, WebPartDefinition, WebPart, Web, PromotedState, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSidePart, ClientSideText, ClientSideWebpart, Comments, Comment, Replies, SocialQuery, MySocialQuery, SocialActorType, SocialActorTypes, SocialFollowResult, SocialStatusCode, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType, UrlZone };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 9\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.2.2-1 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { RuntimeConfig, dateAdd, PnPClientStorage, isFunc, hOP, extend, combine, mergeOptions, objectDefinedNotNull, getGUID } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    __extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    return HttpRequestError;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            reject(new HttpRequestError(\"Error making HttpClient request in queryable: [\" + r.status + \"] \" + r.statusText, r.clone()));\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    __extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    __extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    __extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    __extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    __extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, HttpRequestError, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, LambdaParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, Queryable, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}