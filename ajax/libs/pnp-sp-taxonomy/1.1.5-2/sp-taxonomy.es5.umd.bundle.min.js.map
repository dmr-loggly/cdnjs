{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sp-taxonomy.es5.umd.bundle.min.js","webpack:///webpack/bootstrap acf03e7f8da0680ad972","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./dist/packages/sp-clientsvc/dist/sp-clientsvc.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/termsets.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/termstores.js","webpack:///./build/packages/sp-taxonomy/es5/src/termgroup.js","webpack:///./build/packages/sp-taxonomy/es5/src/terms.js","webpack:///./build/packages/sp-taxonomy/es5/src/session.js","webpack:///./dist/packages/sp/dist/sp.es5.js","webpack:///(webpack)/buildin/global.js","webpack:///./dist/packages/odata/dist/odata.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/labels.js","webpack:///./build/packages/sp-taxonomy/es5/src/taxonomy.js","webpack:///./node_modules/adal-angular/dist/adal.min.js","webpack:///./build/packages/sp-taxonomy/es5/src/types.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","Array","global","getCtxCallback","context","method","params","_i","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combine","paths","filter","path","stringIsNullOrEmpty","map","replace","join","getGUID","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","extend","source","noOverwrite","check","f","v","getOwnPropertyNames","reduce","t","isUrlAbsolute","url","test","getAttrValueFromString","html","attrName","reg","RegExp","match","exec","sanitizeGuid","guid","matches","jsS","JSON","stringify","hOP","mergeHeaders","Request","headers","forEach","value","append","mergeOptions","objectToMap","Map","objectEntries","mergeMaps","maps","k","set","RuntimeConfig","FetchClient","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__","global$1","window","fetch","options","BearerTokenFetchClient","_super","_token","_this","token","Headers","AdalClient","clientId","tenant","redirectUri","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","location","origin","Error","getToken","getResource","then","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","displayCall","_displayCallback","navigateToLoginRequestUrl","_loginPromise","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","e","_loginInProgress","parser","createElement","href","protocol","hostname","entries","keys","RuntimeConfigImpl","_v","config","_runtimeConfig","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","from","data","_local","_session","getStore","localStorage","sessionStorage","objectPath","opQuery","selectProperties","childSelectProperties","builder","push","setProperty","type","methodAction","arrParams","toArray","objectProperties","actions","ObjectPath","staticMethod","typeId","staticProperty","objConstructor","writeObjectPathBody","objectPaths","op","opSetId","id","xml","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","parseInt","regex","ObjectPathBatch","ClientSvcQueryable","MethodParams","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","__WEBPACK_IMPORTED_MODULE_1_tslib__","__WEBPACK_IMPORTED_MODULE_2__pnp_odata__","__WEBPACK_IMPORTED_MODULE_3__pnp_sp__","__WEBPACK_IMPORTED_MODULE_4__pnp_logging__","_p","build","initValues","string","a","number","boolean","inputIndex","replaceAfter","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","add","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","action","appendActionToLast","last","clone","slice","contextIndex","toBody","charCodeAt","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","ProcessQueryParser","text","ok","parsed","ErrorInfo","findResult","json","result","getParsedResultById","IsNull","ProcessQueryPath","parent","_objectPaths","_selects","_parentUrl","_url","configureFrom","select","selects","inBatch","batch","_batch","toUrlAndQuery","toUrl","query","getSelects","getChild","methodName","getChildProperty","propertyName","send","hasBatch","clientsvc_ObjectPaths","body","postCore","sendGet","ops","sendGetCollection","invokeMethod","invokeMethodImpl","invokeNonQuery","_useCaching","invokeMethodCollection","invokeUpdate","properties","toRequestContext","verb","pipeline","_options","accept","content-type","cacheKey","_cachingOptions","dependencyDispose","addBatchDependency","batchDependency","cachingOptions","clientFactory","isBatched","isCached","requestAbsoluteUrl","requestId","addDependency","queryAction","isAction","concat","parentUrl","_batchId","executeImpl","requests","write","executor","BatchExecutor","batchId","appendRequests","execute","_requests","_builderIndex","method$$1","request","pathQueue","indexMappingFunction","opActions","obPaths","ProcessQueryCachingParserWrapper","BatchParser","rawResponse","chain","wrapper","cacheOptions","cacheData","TermSets","TermSet","__WEBPACK_IMPORTED_MODULE_1__pnp_common__","__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__","__WEBPACK_IMPORTED_MODULE_3__termgroup__","__WEBPACK_IMPORTED_MODULE_4__terms__","Name","getByName","Id","getById","addStakeholder","stakeholderName","deleteStakeholder","getTermById","addTerm","lcid","isAvailableForTagging","copy","update","Logger","LogLevel","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","level","log","writeJSON","entry","err","subscribers","subscriber","ConsoleListener","msg","format","warn","FunctionListener","TermStores","TermStore","__WEBPACK_IMPORTED_MODULE_5__termsets__","getTermSetsByName","getTermSetById","getTermInTermSet","termId","termSetId","getTermGroupById","getTerms","info","input","methodIndex","getSiteCollectionGroup","createIfMissing","methodParent","siteIndex","addLanguage","addGroup","commitAll","deleteLanguage","rollbackAll","updateCache","updateUsedTermsOnSite","getChanges","TermGroup","__WEBPACK_IMPORTED_MODULE_3__termsets__","__WEBPACK_IMPORTED_MODULE_4__termstores__","addContributor","principalName","addGroupManager","createTermSet","Terms","Term","__WEBPACK_IMPORTED_MODULE_3__labels__","__WEBPACK_IMPORTED_MODULE_4__termsets__","createLabel","isDefault","labels","getByValue","deprecate","doDeprecate","setDescription","description","setLocalCustomProperty","Session","__WEBPACK_IMPORTED_MODULE_1__pnp_sp__","__WEBPACK_IMPORTED_MODULE_3__termstores__","webUrl","setup","createBatch","getDefaultKeywordTermStore","getDefaultSiteCollectionTermStore","extractWebUrl","candidateUrl","substr","odataUrlFrom","candidate","parts","__metadata","uri","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","spODataEntity","SPODataEntityParserImpl","toAbsoluteUrl","SPRuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","metadata","defaultPath","class_1","args","getNextOrder","collection","max","order","regexIndexOf","startpos","substring","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","trim","reindex","columns","controls","SPHttpClient","sp","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","hydrate","SPRuntimeConfigImpl","SPODataEntityArrayParserImpl","spPart","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","cachedDigest","Accept","Content-Type","fetchRaw","cache","credentials","response","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","_impl","_digestCache","opts","has","toUpperCase","digest","rawHeaders","retry","ctx","status","delay","attempts","retryCount","retryContext","post","patch","SharePointQueryable","lastIndexOf","as","aliasedParams","labelName","expand","expands","getParent","configure","additionalPath","includeBatch","SharePointQueryableCollection","orderBy","ascending","split","skip","top","_getById","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","SiteUsers","SiteUser","SiteUsers_1","getByEmail","email","getByLoginName","loginName","su","encodeURIComponent","removeById","removeByLoginName","LoginName","user","SiteGroups","CurrentUser","ControlMode","SiteGroup","SiteGroups_1","postBody","group","groupName","retGroup","RoleAssignments","RoleAssignment","RoleAssignments_1","principalId","roleDefId","remove","RoleDefinitionBindings","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","basePermissions","BasePermissions","Description","Order","definition","retDef","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","CheckinType","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","isArray","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","g","Guest","getShareObjectWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","shareEverything","LimitedWebPartManager","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","moveTo","zoneId","zoneIndex","Folders","Folders_1","Folder","folder","Files","recycle","listItemAllFields","Item","destUrl","_a","srcUrl","ServerRelativeUrl","client","webBaseUrl","hostUrl","methodUrl","ContentTypes","ContentType","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","additionalSettings","assign","Group","StringValue","FieldLinks","FieldLink","AttachmentFiles","AttachmentFiles_1","AttachmentFile","content","file","addMultiple","files","deleteMultiple","getText","getParsed","getBlob","getBuffer","getJSON","setContent","Views","Views_1","getByTitle","title","personalView","PersonalView","Title","view","ViewFields","renderAsHtml","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields","Field","Fields_1","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","parameters","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","results","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","patchCore","deleteCore","UserCustomActions","UserCustomAction","UserCustomActions_1","Lists","List","Lists_1","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","list","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","getView","viewId","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","Comments","Comment","Comments_1","Replies","like","unlike","Replies_1","Items_1","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","promise","item","candidatelistItemEntityTypeFullName","File","ItemVersions","ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","ItemVersion","PagedItemCollection","nextUrl","_parent","handleError","__next","parseODataJSON","odata.etag","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","moveOperations","MoveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","parseFloat","fileOffset","ContinueUpload","Version","Versions_1","deleteAll","deleteById","versionId","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","TemplateFileType","PromotedState","AppCatalog","getAppById","App","filename","deploy","retract","install","uninstall","upgrade","SortDirection","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","addSection","section","CanvasSection","toHtml","fromHtml","ct","controlType","control","CanvasColumn","mergeColumnToTree","ClientSideWebpart","mergePartToTree","ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","j","on","column","controlData","position","sectionIndex","sectionFactor","addControl","_memId","addColumn","factor","defaultColumn","CanvasControl","dataVersion","getControlData","getControl","jsonData","displayMode","ClientSidePart","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","NavigationNodes","NavigationNode","visible","IsVisible","node","moveAfter","nodeId","previousNodeId","Navigation","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones_1","Search","formattedBody","SelectProperties","fixupProp","RefinementFilters","SortList","HithighlightedProperties","HitHighlightedProperties","ReorderingRules","Properties","SearchResults","prop","_query","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","ReorderingRuleMatchType","QueryPropertyValueType","SocialActorType","SearchSuggest","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","SPBatch","ParseResponse","statusText","responses","statusRegExp","lines","state","line","Response","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","Features","Feature","Features_1","force","featdefScope","featureId","feature","deactivate","DefinitionId","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","Web","WebInfos","Web_1","fromUrl","getParentWeb","ParentWeb","Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","UserProfileQuery","clientPeoplePickerQuery","ClientPeoplePickerQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","buffer","reader","FileReader","onload","readAsArrayBuffer","String","fromCharCode","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","SocialQuery","SocialQuery_1","MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","SocialActorTypes","SocialFollowResult","SocialStatusCode","UtilityMethod","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","SPRest","_baseUrl","searchSuggest","finalQuery","Querytext","toSearchQuery","fm","Function","eval","returnResult","setResult","hasResult","next","shift","pipe","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","getDefaultPipeline","PipelineMethods","logStart","caching","logEnd","CachingOptions","CachingParserWrapper","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","AlreadyInBatchException","Queryable","ODataQueryable","ODataBatch","storeName","defaultCachingStore","storage","local","session","ProcessHttpClientResponseException","parseImpl","txt","responseBody","responseHeaders","blob","arrayBuffer","LambdaParser","pathPart","usingCaching","globalCacheDisable","getCore","putCore","_reqs","_deps","_rDeps","resolver","all","Labels","Label","__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__","__WEBPACK_IMPORTED_MODULE_2__pnp_common__","setAsDefaultForLanguage","__WEBPACK_IMPORTED_MODULE_0__src_taxonomy__","taxonomy","__WEBPACK_IMPORTED_MODULE_0__session__","__WEBPACK_IMPORTED_MODULE_1__labels__","__WEBPACK_IMPORTED_MODULE_2__termgroup__","__WEBPACK_IMPORTED_MODULE_3__terms__","__WEBPACK_IMPORTED_MODULE_5__termstores__","__WEBPACK_IMPORTED_MODULE_6__types__","AuthenticationContext","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","_guid","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","_getHash","isCallback","_deserialize","getLoginError","getRequestInfo","valid","stateMatch","stateResponse","requestType","_matchState","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","StringMatchOption","ChangedItemType","ChangedOperationType"],"mappings":"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","file":"sp-taxonomy.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-taxonomy\"] = factory();\n\telse\n\t\troot[\"pnp.sp-taxonomy\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-taxonomy\"] = factory();\n\telse\n\t\troot[\"pnp.sp-taxonomy\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/* unused harmony export __importStar */\n/* unused harmony export __importDefault */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export AdalClient */\n/* unused harmony export objectToMap */\n/* unused harmony export mergeMaps */\n/* unused harmony export setup */\n/* unused harmony export RuntimeConfigImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return mergeHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return FetchClient; });\n/* unused harmony export BearerTokenFetchClient */\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PnPClientStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return getCtxCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return dateAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return combine; });\n/* unused harmony export getRandomString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getGUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return isFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return objectDefinedNotNull; });\n/* unused harmony export isArray */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return isUrlAbsolute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return stringIsNullOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return getAttrValueFromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return sanitizeGuid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return jsS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return hOP; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__);\n/**\n@license\n * @pnp/common v1.1.5-2 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global$1.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */])(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = Object(__WEBPACK_IMPORTED_MODULE_1_adal_angular_dist_adal_min_js__[\"inject\"])({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o === undefined) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(localStorage);\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(sessionStorage);\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (s) {\r\n        return s !== undefined ? new PnPClientStorageWrapper(s) : new PnPClientStorageWrapper(new MemoryStorage());\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(10)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ObjectPathBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ClientSvcQueryable; });\n/* unused harmony export ObjectPath */\n/* unused harmony export opSetId */\n/* unused harmony export opSetPathId */\n/* unused harmony export opSetParentId */\n/* unused harmony export opSetPathParamId */\n/* unused harmony export ObjectPathQueue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return objectPath; });\n/* unused harmony export identityQuery */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return opQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return setProperty; });\n/* unused harmony export methodAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return objectProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return staticMethod; });\n/* unused harmony export staticProperty */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return objConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MethodParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return method; });\n/* unused harmony export ProcessQueryParser */\n/* unused harmony export writeObjectPathBody */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_odata__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_sp__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pnp_logging__ = __webpack_require__(4);\n/**\n@license\n * @pnp/sp-clientsvc v1.1.5-2 - pnp - Provides core functionality to interact with the legacy client.svc SharePoint endpoint\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\n\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\n\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\n\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\n\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\n\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (result && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\n\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(parent._parentUrl, ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"a\" /* AlreadyInBatchException */]();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(options, \"body\")) {\r\n                options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return Object(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"c\" /* toAbsoluteUrl */])(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(options, _this._options);\r\n            var headers = new Headers();\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, options.headers);\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"d\" /* CachingOptions */](cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new __WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"a\" /* SPHttpClient */](); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"k\" /* Queryable */]));\n\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"g\" /* ODataBatch */]));\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method$$1 = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method$$1.path = opSetId(\"0\", method$$1.path);\r\n        method$$1.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method$$1);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]));\n\n\n//# sourceMappingURL=sp-clientsvc.es5.js.map\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TermSets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termgroup__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__terms__ = __webpack_require__(7);\n\r\n\r\n\r\n\r\n\r\nvar TermSets = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\nvar TermSet = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"b\" /* Terms */], \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"j\" /* setProperty */])(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termsets.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/* unused harmony export LogLevel */\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\n@license\n * @pnp/logging v1.1.5-2 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TermStores; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termgroup__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__terms__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__termsets__ = __webpack_require__(3);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"i\" /* property */])(\"TermStores\", \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id)));\r\n    };\r\n    return TermStores;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\nvar TermStore = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"b\" /* TermSets */], \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(termId)).string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(termSetId));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"e\" /* objConstructor */].apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()].concat(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"g\" /* objectProperties */])(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetTerms\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new __WEBPACK_IMPORTED_MODULE_4__terms__[\"b\" /* Terms */](this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new __WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */](this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"e\" /* objConstructor */].apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()].concat(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"g\" /* objectProperties */])(info))));\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetChanges\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])(), Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"h\" /* opQuery */])([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termstores.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermGroup; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termsets__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termstores__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof __WEBPACK_IMPORTED_MODULE_4__termstores__[\"a\" /* TermStore */] ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termsets__[\"b\" /* TermSets */], \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"i\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termgroup.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Terms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Term; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__labels__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termsets__ = __webpack_require__(3);\n\r\n\r\n\r\n\r\n\r\nvar Terms = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new __WEBPACK_IMPORTED_MODULE_3__labels__[\"b\" /* Labels */](this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\" /* TermSet */], \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\" /* TermSet */], \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"b\" /* TermSets */], \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"f\" /* extend */])(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=terms.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Session; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termstores__ = __webpack_require__(5);\n\r\n\r\n\r\n\r\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"k\" /* staticMethod */])(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new __WEBPACK_IMPORTED_MODULE_3__termstores__[\"b\" /* TermStores */](this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"b\" /* sp */].setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"c\" /* ObjectPathBatch */](this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termstores__[\"a\" /* TermStore */], \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termstores__[\"a\" /* TermStore */], \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=session.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export odataUrlFrom */\n/* unused harmony export spODataEntity */\n/* unused harmony export spODataEntityArray */\n/* unused harmony export SharePointQueryable */\n/* unused harmony export SharePointQueryableInstance */\n/* unused harmony export SharePointQueryableCollection */\n/* unused harmony export SharePointQueryableSecurable */\n/* unused harmony export FileFolderShared */\n/* unused harmony export SharePointQueryableShareable */\n/* unused harmony export SharePointQueryableShareableFile */\n/* unused harmony export SharePointQueryableShareableFolder */\n/* unused harmony export SharePointQueryableShareableItem */\n/* unused harmony export SharePointQueryableShareableWeb */\n/* unused harmony export AppCatalog */\n/* unused harmony export App */\n/* unused harmony export ContentType */\n/* unused harmony export ContentTypes */\n/* unused harmony export FieldLink */\n/* unused harmony export FieldLinks */\n/* unused harmony export Field */\n/* unused harmony export Fields */\n/* unused harmony export CheckinType */\n/* unused harmony export WebPartsPersonalizationScope */\n/* unused harmony export MoveOperations */\n/* unused harmony export TemplateFileType */\n/* unused harmony export File */\n/* unused harmony export Files */\n/* unused harmony export Folder */\n/* unused harmony export Folders */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPHttpClient; });\n/* unused harmony export Item */\n/* unused harmony export Items */\n/* unused harmony export ItemVersion */\n/* unused harmony export ItemVersions */\n/* unused harmony export PagedItemCollection */\n/* unused harmony export NavigationNodes */\n/* unused harmony export NavigationNode */\n/* unused harmony export NavigationService */\n/* unused harmony export List */\n/* unused harmony export Lists */\n/* unused harmony export RegionalSettings */\n/* unused harmony export InstalledLanguages */\n/* unused harmony export TimeZone */\n/* unused harmony export TimeZones */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sp; });\n/* unused harmony export SPRest */\n/* unused harmony export RoleDefinitionBindings */\n/* unused harmony export Search */\n/* unused harmony export SearchQueryBuilder */\n/* unused harmony export SearchResults */\n/* unused harmony export SortDirection */\n/* unused harmony export ReorderingRuleMatchType */\n/* unused harmony export QueryPropertyValueType */\n/* unused harmony export SearchBuiltInSourceId */\n/* unused harmony export SearchSuggest */\n/* unused harmony export Site */\n/* unused harmony export UserProfileQuery */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return toAbsoluteUrl; });\n/* unused harmony export extractWebUrl */\n/* unused harmony export UtilityMethod */\n/* unused harmony export View */\n/* unused harmony export Views */\n/* unused harmony export ViewFields */\n/* unused harmony export WebPartDefinitions */\n/* unused harmony export WebPartDefinition */\n/* unused harmony export WebPart */\n/* unused harmony export Web */\n/* unused harmony export PromotedState */\n/* unused harmony export ClientSidePage */\n/* unused harmony export CanvasSection */\n/* unused harmony export CanvasControl */\n/* unused harmony export CanvasColumn */\n/* unused harmony export ClientSidePart */\n/* unused harmony export ClientSideText */\n/* unused harmony export ClientSideWebpart */\n/* unused harmony export Comments */\n/* unused harmony export Comment */\n/* unused harmony export Replies */\n/* unused harmony export SocialQuery */\n/* unused harmony export MySocialQuery */\n/* unused harmony export SocialActorType */\n/* unused harmony export SocialActorTypes */\n/* unused harmony export SocialFollowResult */\n/* unused harmony export SocialStatusCode */\n/* unused harmony export ControlMode */\n/* unused harmony export FieldTypes */\n/* unused harmony export DateTimeFieldFormatType */\n/* unused harmony export AddFieldOptions */\n/* unused harmony export CalendarType */\n/* unused harmony export UrlFieldFormatType */\n/* unused harmony export PermissionKind */\n/* unused harmony export PrincipalType */\n/* unused harmony export PrincipalSource */\n/* unused harmony export RoleType */\n/* unused harmony export PageType */\n/* unused harmony export SharingLinkKind */\n/* unused harmony export SharingRole */\n/* unused harmony export SharingOperationStatusCode */\n/* unused harmony export SPSharedObjectType */\n/* unused harmony export SharingDomainRestrictionMode */\n/* unused harmony export RenderListDataOptions */\n/* unused harmony export FieldUserSelectionMode */\n/* unused harmony export ChoiceFieldFormatType */\n/* unused harmony export UrlZone */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(11);\n/**\n@license\n * @pnp/sp v1.1.5-2 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[3]) && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */].apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== undefined && __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* FetchClient */](); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-2\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.5-2\");\r\n        }\r\n        opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getCtxCallback */])(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global$1._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(global$1._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global$1._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(global$1._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(global$1._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global$1.location !== undefined) {\r\n            var baseUrl_1 = global$1.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl.slice(index), path);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        url += \"?\" + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Curries the getById function\r\n     *\r\n     * @param factory Class to create for the id\r\n     */\r\n    SharePointQueryableCollection.prototype._getById = function (factory) {\r\n        var _this = this;\r\n        return function (id) {\r\n            if (typeof id === \"number\") {\r\n                return (new factory(_this)).concat(\"(\" + id + \")\");\r\n            }\r\n            else {\r\n                return (new factory(_this)).concat(\"('\" + id + \"')\");\r\n            }\r\n        };\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a user from the collection by id\r\n         *\r\n         * @param id The id of the user to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteUser);\r\n        return _this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    SiteUsers = SiteUsers_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n    var SiteUsers_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a group from the collection by id\r\n         *\r\n         * @param id The id of the group to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteGroup);\r\n        return _this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    SiteGroups = SiteGroups_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n    var SiteGroups_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role assignment associated with the specified principal id from the collection.\r\n         *\r\n         * @param id The id of the role assignment\r\n         */\r\n        _this.getById = _this._getById(RoleAssignment);\r\n        return _this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    RoleAssignments = RoleAssignments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n    var RoleAssignments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role definition with the specified id from the collection\r\n         *\r\n         * @param id The id of the role definition\r\n         *\r\n         */\r\n        _this.getById = _this._getById(RoleDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            BasePermissions: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a web part definition from the collection by id\r\n         *\r\n         * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n         */\r\n        _this.getById = _this._getById(WebPartDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    Folders = Folders_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n    var Folders_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ContentType);\r\n        return _this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    ContentTypes = ContentTypes_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n    var ContentTypes_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(FieldLink);\r\n        return _this;\r\n    }\r\n    FieldLinks = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    AttachmentFiles = AttachmentFiles_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n    var AttachmentFiles_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    function Views() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a view by guid id\r\n         *\r\n         * @param id The GUID id of the view\r\n         */\r\n        _this.getById = _this._getById(View);\r\n        return _this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    Views = Views_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n    var Views_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    ViewFields = ViewFields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n    var ViewFields_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    function Fields() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param title The Id of the list\r\n         */\r\n        _this.getById = _this._getById(Field);\r\n        return _this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object.assign(metadata(\"SP.FieldCreationInformation\"), {\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n            }, properties),\r\n        }));\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(props, properties));\r\n    };\r\n    Fields = Fields_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n    var Fields_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    function Forms() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Form);\r\n        return _this;\r\n    }\r\n    Forms = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns all the webhook subscriptions or the specified webhook subscription\r\n         *\r\n         * @param id The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n         */\r\n        _this.getById = _this._getById(Subscription);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns the user custom action with the specified id\r\n         *\r\n         * @param id The GUID id of the user custom action to retrieve\r\n         */\r\n        _this.getById = _this._getById(UserCustomAction);\r\n        return _this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    UserCustomActions = UserCustomActions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n    var UserCustomActions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    function Lists() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the list (GUID)\r\n         */\r\n        _this.getById = _this._getById(List);\r\n        return _this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    Lists = Lists_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n    var Lists_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comments, _super);\r\n    function Comments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Comment);\r\n        return _this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    Comments = Comments_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n    var Comments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    Replies = Replies_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n    var Replies_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    function Items() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Item);\r\n        return _this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^[\\$select|\\$filter|\\$top|\\$expand]$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    Items = Items_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n    var Items_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ItemVersion);\r\n        return _this;\r\n    }\r\n    ItemVersions = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"d\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    Files = Files_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n    var Files_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    function Versions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Version);\r\n        return _this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    Versions = Versions_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n    var Versions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* getAttrValueFromString */])(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(NavigationNode);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    TimeZone = TimeZone_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n    var TimeZone_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    TimeZones = TimeZones_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n    var TimeZones_1;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\n// after: https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\r\nfunction toCamelCase(str) {\r\n    return str\r\n        .replace(/\\s(.)/g, function ($1) { return $1.toUpperCase(); })\r\n        .replace(/\\s/g, \"\")\r\n        .replace(/^(.)/, function ($1) { return $1.toLowerCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toCamelCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toCamelCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            request: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    Search = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(reqInfo.url) ? reqInfo.url : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(reqInfo, \"options\") && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-2\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataBatch */]));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    function Features() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the feature (GUID)\r\n         */\r\n        _this.getById = _this._getById(Feature);\r\n        return _this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    Features = Features_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n    var Features_1;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n    var RelatedItemManagerImpl_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    Webs = Webs_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n    var Webs_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    Web = Web_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n    var Web_1;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    Site = Site_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n    var Site_1;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    ProfileLoader = ProfileLoader_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n    var ProfileLoader_1;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"queryParams\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n    var ClientPeoplePickerQuery_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    SocialQuery = SocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n    var SocialQuery_1;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    MySocialQuery = MySocialQuery_1 = Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n    var MySocialQuery_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* jsS */])(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(query, \"_query\")) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(10)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CachingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CachingParserWrapper; });\n/* unused harmony export ProcessHttpClientResponseException */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ODataParserBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return TextParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BlobParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return JSONParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BufferParser; });\n/* unused harmony export LambdaParser */\n/* unused harmony export setResult */\n/* unused harmony export pipe */\n/* unused harmony export requestPipelineMethod */\n/* unused harmony export PipelineMethods */\n/* unused harmony export getDefaultPipeline */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AlreadyInBatchException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return Queryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(4);\n/**\n@license\n * @pnp/odata v1.1.5-2 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* dateAdd */])(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, e));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"d\")) {\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n        data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(args[0], \"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* hOP */])(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* extend */])(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* mergeOptions */])(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* combine */])(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getGUID */])(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Labels; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Label; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_common__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"i\" /* property */])(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=labels.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__ = __webpack_require__(14);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"taxonomy\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Labels\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Label\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Session\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermGroup\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Terms\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Term\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermSets\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermSet\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermStores\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermStore\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"StringMatchOption\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ChangedItemType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ChangedOperationType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"b\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return taxonomy; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__session__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__labels__ = __webpack_require__(12);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__labels__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_1__labels__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__session__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__termgroup__ = __webpack_require__(6);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__termgroup__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__terms__ = __webpack_require__(7);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_3__terms__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_3__terms__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termsets__ = __webpack_require__(3);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_4__termsets__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__termstores__ = __webpack_require__(5);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_5__termstores__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_5__termstores__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__types__ = __webpack_require__(16);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"c\"]; });\n\r\n// export an existing session instance\r\nvar taxonomy = new __WEBPACK_IMPORTED_MODULE_0__session__[\"a\" /* Session */]();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=taxonomy.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return StringMatchOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ChangedItemType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ChangedOperationType; });\nvar StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nvar ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nvar ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\r\n//# sourceMappingURL=types.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sp-taxonomy.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap acf03e7f8da0680ad972","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","/**\n@license\n * @pnp/common v1.1.5-2 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { __extends } from 'tslib';\nimport { inject } from 'adal-angular/dist/adal.min.js';\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return obj !== undefined && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for oToS\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global$1.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    __extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combine(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o === undefined) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(localStorage);\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(sessionStorage);\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (s) {\r\n        return s !== undefined ? new PnPClientStorageWrapper(s) : new PnPClientStorageWrapper(new MemoryStorage());\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\nexport { AdalClient, objectToMap, mergeMaps, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combine, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, jsS, hOP };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 1\n// module chunks = 0","/**\n@license\n * @pnp/sp-clientsvc v1.1.5-2 - pnp - Provides core functionality to interact with the legacy client.svc SharePoint endpoint\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { extend, objectDefinedNotNull, getAttrValueFromString, jsS, hOP, combine, getGUID, mergeHeaders, mergeOptions } from '@pnp/common';\nimport { __extends } from 'tslib';\nimport { AlreadyInBatchException, CachingOptions, Queryable, CachingParserWrapper, ODataBatch } from '@pnp/odata';\nimport { SPHttpClient, toAbsoluteUrl } from '@pnp/sp';\nimport { Logger } from '@pnp/logging';\n\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\n\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\n\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\n\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\n\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\n\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    __extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\n\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    __extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    __extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method$$1 = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method$$1.path = opSetId(\"0\", method$$1.path);\r\n        method$$1.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method$$1);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    __extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    __extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\n\nexport { ObjectPathBatch, ClientSvcQueryable, ObjectPath, opSetId, opSetPathId, opSetParentId, opSetPathParamId, ObjectPathQueue, objectPath, identityQuery, opQuery, setProperty, methodAction, objectProperties, property, staticMethod, staticProperty, objConstructor, MethodParams, method, ProcessQueryParser, writeObjectPathBody };\n//# sourceMappingURL=sp-clientsvc.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp-clientsvc/dist/sp-clientsvc.es5.js\n// module id = 2\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, setProperty } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nvar TermSets = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(ClientSvcQueryable));\r\nexport { TermSets };\r\nvar TermSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(Terms, \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, setProperty(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return extend(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(ClientSvcQueryable));\r\nexport { TermSet };\r\n//# sourceMappingURL=termsets.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termsets.js\n// module id = 3\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.1.5-2 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 4\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, method, objConstructor, objectPath, objectProperties, opQuery, property } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(property(\"TermStores\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", MethodParams.build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", MethodParams.build().string(sanitizeGuid(id)));\r\n    };\r\n    return TermStores;\r\n}(ClientSvcQueryable));\r\nexport { TermStores };\r\nvar TermStore = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(TermSets, \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = MethodParams.build().string(sanitizeGuid(termId)).string(sanitizeGuid(termSetId));\r\n        return this.getChild(Term, \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermGroup, \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = objConstructor.apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(method(\"GetTerms\", params, \r\n        // actions\r\n        objectPath()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new Terms(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(method(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        objectPath()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new TermGroup(this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return extend(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(method(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(objConstructor.apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info))));\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(method(\"GetChanges\", params, \r\n        // actions\r\n        objectPath(), opQuery([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(ClientSvcQueryable));\r\nexport { TermStore };\r\n//# sourceMappingURL=termstores.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termstores.js\n// module id = 5\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams } from \"@pnp/sp-clientsvc\";\r\nimport { TermSets } from \"./termsets\";\r\nimport { TermStore } from \"./termstores\";\r\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof TermStore ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return extend(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(ClientSvcQueryable));\r\nexport { TermGroup };\r\n//# sourceMappingURL=termgroup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termgroup.js\n// module id = 6\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, } from \"@pnp/sp-clientsvc\";\r\nimport { Labels } from \"./labels\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\nvar Terms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(ClientSvcQueryable));\r\nexport { Terms };\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new Labels(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return extend(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = MethodParams.build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = MethodParams.build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = MethodParams.build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(ClientSvcQueryable));\r\nexport { Term };\r\n//# sourceMappingURL=terms.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/terms.js\n// module id = 7\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { sp } from \"@pnp/sp\";\r\nimport { ClientSvcQueryable, ObjectPathBatch, objectPath, staticMethod } from \"@pnp/sp-clientsvc\";\r\nimport { TermStore, TermStores } from \"./termstores\";\r\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new TermStores(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        sp.setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new ObjectPathBatch(this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(ClientSvcQueryable));\r\nexport { Session };\r\n//# sourceMappingURL=session.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/session.js\n// module id = 8\n// module chunks = 0","/**\n@license\n * @pnp/sp v1.1.5-2 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { stringIsNullOrEmpty, extend, combine, hOP, RuntimeConfig, FetchClient, mergeHeaders, getCtxCallback, isUrlAbsolute, mergeOptions, getGUID, jsS, getAttrValueFromString, dateAdd } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\nimport { ODataParserBase, ODataDefaultParser, ODataQueryable, TextParser, BlobParser, JSONParser, BufferParser, ODataBatch } from '@pnp/odata';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-2\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.5-2\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global$1._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global$1._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global$1._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global$1.location !== undefined) {\r\n            var baseUrl_1 = global$1.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        url += \"?\" + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath).configure(this._options);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Curries the getById function\r\n     *\r\n     * @param factory Class to create for the id\r\n     */\r\n    SharePointQueryableCollection.prototype._getById = function (factory) {\r\n        var _this = this;\r\n        return function (id) {\r\n            if (typeof id === \"number\") {\r\n                return (new factory(_this)).concat(\"(\" + id + \")\");\r\n            }\r\n            else {\r\n                return (new factory(_this)).concat(\"('\" + id + \"')\");\r\n            }\r\n        };\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a user from the collection by id\r\n         *\r\n         * @param id The id of the user to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteUser);\r\n        return _this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    SiteUsers = SiteUsers_1 = __decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n    var SiteUsers_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = __decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a group from the collection by id\r\n         *\r\n         * @param id The id of the group to retrieve\r\n         */\r\n        _this.getById = _this._getById(SiteGroup);\r\n        return _this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    SiteGroups = SiteGroups_1 = __decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n    var SiteGroups_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role assignment associated with the specified principal id from the collection.\r\n         *\r\n         * @param id The id of the role assignment\r\n         */\r\n        _this.getById = _this._getById(RoleAssignment);\r\n        return _this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    RoleAssignments = RoleAssignments_1 = __decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n    var RoleAssignments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets the role definition with the specified id from the collection\r\n         *\r\n         * @param id The id of the role definition\r\n         *\r\n         */\r\n        _this.getById = _this._getById(RoleDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = __decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = __decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a web part definition from the collection by id\r\n         *\r\n         * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n         */\r\n        _this.getById = _this._getById(WebPartDefinition);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = __decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    Folders = Folders_1 = __decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n    var Folders_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ContentType);\r\n        return _this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    ContentTypes = ContentTypes_1 = __decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n    var ContentTypes_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(FieldLink);\r\n        return _this;\r\n    }\r\n    FieldLinks = __decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    AttachmentFiles = AttachmentFiles_1 = __decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n    var AttachmentFiles_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    function Views() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a view by guid id\r\n         *\r\n         * @param id The GUID id of the view\r\n         */\r\n        _this.getById = _this._getById(View);\r\n        return _this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    Views = Views_1 = __decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n    var Views_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    ViewFields = ViewFields_1 = __decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n    var ViewFields_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    function Fields() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param title The Id of the list\r\n         */\r\n        _this.getById = _this._getById(Field);\r\n        return _this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(\"SP.FieldCreationInformation\"), {\r\n            parameters: extend({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n            }, properties),\r\n        }));\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    Fields = Fields_1 = __decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n    var Fields_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    function Forms() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Form);\r\n        return _this;\r\n    }\r\n    Forms = __decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns all the webhook subscriptions or the specified webhook subscription\r\n         *\r\n         * @param id The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n         */\r\n        _this.getById = _this._getById(Subscription);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = __decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Returns the user custom action with the specified id\r\n         *\r\n         * @param id The GUID id of the user custom action to retrieve\r\n         */\r\n        _this.getById = _this._getById(UserCustomAction);\r\n        return _this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    UserCustomActions = UserCustomActions_1 = __decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n    var UserCustomActions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    function Lists() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the list (GUID)\r\n         */\r\n        _this.getById = _this._getById(List);\r\n        return _this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    Lists = Lists_1 = __decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n    var Lists_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (hOP(data, \"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (hOP(data, \"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    __extends(Comments, _super);\r\n    function Comments() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Comment);\r\n        return _this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    Comments = Comments_1 = __decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n    var Comments_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    __extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    __extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    Replies = Replies_1 = __decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n    var Replies_1;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    function Items() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Item);\r\n        return _this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^[\\$select|\\$filter|\\$top|\\$expand]$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    Items = Items_1 = __decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n    var Items_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(ItemVersion);\r\n        return _this;\r\n    }\r\n    ItemVersions = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    Files = Files_1 = __decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n    var Files_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    function Versions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(Version);\r\n        return _this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    Versions = Versions_1 = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n    var Versions_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    __extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.getById = _this._getById(NavigationNode);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = __decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = __decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = __decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    TimeZone = TimeZone_1 = __decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n    var TimeZone_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    TimeZones = TimeZones_1 = __decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n    var TimeZones_1;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\n// after: https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\r\nfunction toCamelCase(str) {\r\n    return str\r\n        .replace(/\\s(.)/g, function ($1) { return $1.toUpperCase(); })\r\n        .replace(/\\s/g, \"\")\r\n        .replace(/^(.)/, function ($1) { return $1.toLowerCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toCamelCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toCamelCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    Search = __decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = __decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.5-2\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    function Features() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Gets a list from the collection by guid id\r\n         *\r\n         * @param id The Id of the feature (GUID)\r\n         */\r\n        _this.getById = _this._getById(Feature);\r\n        return _this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    Features = Features_1 = __decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n    var Features_1;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = __decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n    var RelatedItemManagerImpl_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    Webs = Webs_1 = __decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n    var Webs_1;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = __decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    Web = Web_1 = __decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n    var Web_1;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    Site = Site_1 = __decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n    var Site_1;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    ProfileLoader = ProfileLoader_1 = __decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n    var ProfileLoader_1;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    __extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = __decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n    var ClientPeoplePickerQuery_1;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    SocialQuery = SocialQuery_1 = __decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n    var SocialQuery_1;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    MySocialQuery = MySocialQuery_1 = __decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n    var MySocialQuery_1;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (hOP(query, \"_query\")) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { odataUrlFrom, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, ContentType, ContentTypes, FieldLink, FieldLinks, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, RegionalSettings, InstalledLanguages, TimeZone, TimeZones, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, Site, UserProfileQuery, toAbsoluteUrl, extractWebUrl, UtilityMethod, View, Views, ViewFields, WebPartDefinitions, WebPartDefinition, WebPart, Web, PromotedState, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSidePart, ClientSideText, ClientSideWebpart, Comments, Comment, Replies, SocialQuery, MySocialQuery, SocialActorType, SocialActorTypes, SocialFollowResult, SocialStatusCode, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType, UrlZone };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 9\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.1.5-2 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { RuntimeConfig, dateAdd, PnPClientStorage, isFunc, hOP, extend, combine, mergeOptions, objectDefinedNotNull, getGUID } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, e));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    __extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    __extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    __extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    __extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ProcessHttpClientResponseException, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, LambdaParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, AlreadyInBatchException, Queryable, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 11\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { ClientSvcQueryable, MethodParams, property, } from \"@pnp/sp-clientsvc\";\r\nimport { stringIsNullOrEmpty } from \"@pnp/common\";\r\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(property(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = MethodParams.build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(ClientSvcQueryable));\r\nexport { Labels };\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(ClientSvcQueryable));\r\nexport { Label };\r\n//# sourceMappingURL=labels.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/labels.js\n// module id = 12\n// module chunks = 0","import { Session } from \"./session\";\r\n// export an existing session instance\r\nexport var taxonomy = new Session();\r\nexport * from \"./labels\";\r\nexport * from \"./session\";\r\nexport * from \"./termgroup\";\r\nexport * from \"./terms\";\r\nexport * from \"./termsets\";\r\nexport * from \"./termstores\";\r\nexport * from \"./types\";\r\n//# sourceMappingURL=taxonomy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/taxonomy.js\n// module id = 14\n// module chunks = 0","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adal-angular/dist/adal.min.js\n// module id = 15\n// module chunks = 0","export var StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nexport var ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nexport var ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\r\n//# sourceMappingURL=types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/types.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}