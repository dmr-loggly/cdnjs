{"version":3,"sources":["webpack://pnp.sp-taxonomy/webpack/universalModuleDefinition","webpack://pnp.sp-taxonomy/webpack/bootstrap","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/adalclient.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/collections.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/libconfig.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/storage.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/index.js","webpack://pnp.sp-taxonomy/./node_modules/tslib/tslib.es6.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/util.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/config/splibconfig.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/utils/toabsoluteurl.js","webpack://pnp.sp-taxonomy/./build/packages-es5/common/src/netutil.js","webpack://pnp.sp-taxonomy/(webpack)/buildin/global.js","webpack://pnp.sp-taxonomy/./node_modules/adal-angular/dist/adal.min.js","webpack://pnp.sp-taxonomy/./build/packages-es5/logging/src/loglevel.js","webpack://pnp.sp-taxonomy/./build/packages-es5/logging/src/logger.js","webpack://pnp.sp-taxonomy/./build/packages-es5/logging/src/listeners.js","webpack://pnp.sp-taxonomy/./build/packages-es5/odata/src/caching.js","webpack://pnp.sp-taxonomy/./build/packages-es5/odata/src/parsers.js","webpack://pnp.sp-taxonomy/./build/packages-es5/odata/src/pipeline.js","webpack://pnp.sp-taxonomy/./build/packages-es5/odata/src/queryable.js","webpack://pnp.sp-taxonomy/./build/packages-es5/odata/src/odatabatch.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/utils/extractweburl.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/odata.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/net/digestcache.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/net/sphttpclient.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/utils/metadata.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sharepointqueryable.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/siteusers.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sitegroups.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/types.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/roles.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sharepointqueryablesecurable.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/files.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sharepointqueryableshareable.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/webparts.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/folders.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/contenttypes.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/attachmentfiles.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/views.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/fields.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/forms.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/subscriptions.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/usercustomactions.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/lists.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/comments.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/items.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/appcatalog.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/clientsidepages.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/batch.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/navigation.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/regionalsettings.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/search.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/social.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/searchsuggest.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/features.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/relateditems.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/webs.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/site.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/userprofiles.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sitescripts.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/sitedesigns.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/utilities.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp/src/rest.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/opactionbuilders.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/opbuilders.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/utils.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/objectpath.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/types.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/parsers.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/clintsvcqueryable.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-clientsvc/src/batch.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/labels.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/terms.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/termsets.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/termgroup.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/termstores.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/session.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/utilities.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/src/taxonomy.js","webpack://pnp.sp-taxonomy/./build/packages-es5/sp-taxonomy/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getResource","url","parser","document","createElement","href","protocol","hostname","_super","AdalClient","clientId","tenant","redirectUri","_this","this","_displayCallback","_loginPromise","tslib_es6","fromSPFxContext","spfxContext","adalclient_SPFxAdalClient","fetch","options","util","Error","getToken","then","token","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","adal_min","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","undefined","clearInterval","URL","indexOf","handleWindowCallback","location","hash","close","e","_loginInProgress","netutil","SPFxAdalClient","context","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","map","k","RuntimeConfig","RuntimeConfigImpl","_v","Map","set","extend","config","target","maps","_i","arguments","length","forEach","v","mergeMaps","objectToMap","configurable","storage_PnPClientStorageWrapper","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","test","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","JSON","parse","Date","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","Array","from","data","PnPClientStorage","_local","_session","getStore","localStorage","sessionStorage","__webpack_exports__","__extends","__decorate","__awaiter","__generator","extendStatics","b","setPrototypeOf","__proto__","__","constructor","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","apply","body","f","y","g","label","sent","trys","ops","verb","throw","return","iterator","op","TypeError","pop","push","getCtxCallback","method","params","dateAdd","date","interval","units","ret","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","combine","paths","filter","path","stringIsNullOrEmpty","replace","join","getGUID","Math","random","floor","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","source","noOverwrite","check","getOwnPropertyNames","reduce","isUrlAbsolute","getAttrValueFromString","html","attrName","match","RegExp","exec","sanitizeGuid","guid","matches","jsS","stringify","hOP","getHashCode","charCodeAt","setup","SPRuntimeConfig","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","SPRuntimeConfigImpl","spPart","headers","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","global","toAbsoluteUrl","_config_splibconfig__WEBPACK_IMPORTED_MODULE_1__","candidateUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","substr","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","tslib__WEBPACK_IMPORTED_MODULE_0__","_util__WEBPACK_IMPORTED_MODULE_1__","Request","append","_token","Headers","Function","eval","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","instance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","split","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","level","log","info","_guid","state","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","encodeURIComponent","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","j","warn","_handlePopupError","_broadcast","encodeURI","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","userName","email","_getHash","substring","isCallback","_deserialize","getLoginError","getRequestInfo","valid","parameters","stateMatch","stateResponse","requestType","_matchState","parent","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","String","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","charAt","fromCharCode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","slice","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","parseInt","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","position","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","LogLevel","Logger","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","writeJSON","json","entry","err","subscribers","subscriber","ConsoleListener","msg","format","FunctionListener","caching_CachingOptions","CachingOptions","common","storeName","defaultCachingStore","storage","local","session","CachingParserWrapper","cacheOptions","response","cacheData","parsers_HttpRequestError","HttpRequestError","status","statusText","isHttpRequestError","init","clone","text","parsers_ODataParserBase","ODataParserBase","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","results","parsers_ODataDefaultParser","ODataDefaultParser","parsers_TextParser","TextParser","parsers_BlobParser","BlobParser","blob","parsers_JSONParser","JSONParser","parsers_BufferParser","BufferParser","arrayBuffer","buffer","LambdaParser","setResult","hasResult","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","pipeline_PipelineMethods","PipelineMethods","logStart","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","queryable_Queryable","Queryable","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","toUrl","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","_clone","_0","queryable_ODataQueryable","ODataQueryable","_batch","inBatch","addBatchDependency","addDependency","hasBatch","cloneSettings","includeBatch","odatabatch_ODataBatch","ODataBatch","_batchId","_reqs","_deps","_rDeps","id","toUpperCase","resolver","execute","all","executeImpl","extractWebUrl","odataUrlFrom","candidate","parts","__metadata","uri","odata_SPODataEntityParserImpl","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","CachedDigest","digests","digestcache_DigestCache","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","splibconfig","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","sphttpclient_SPHttpClient","SPHttpClient","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","attempts","retryCount","retryContext","post","patch","metadata","type","sharepointqueryable_SharePointQueryable","SharePointQueryable","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","labelName","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","toabsoluteurl","sharepointqueryable_SharePointQueryableCollection","SharePointQueryableCollection","orderBy","ascending","skip","top","sharepointqueryable_SharePointQueryableInstance","SharePointQueryableInstance","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","siteusers_SiteUsers","SiteUsers","SiteUsers_1","getById","siteusers_SiteUser","getByEmail","getByLoginName","loginName","su","removeById","removeByLoginName","LoginName","siteusers_UserBase","UserBase","sitegroups_SiteGroups","SiteUser","update","user","siteusers_CurrentUser","CurrentUser","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","types_PrincipalType","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","SiteGroups","SiteGroups_1","sg","sitegroups_SiteGroup","properties","postBody","group","Id","getByName","groupName","SiteGroup","retGroup","roles_RoleAssignments","RoleAssignments","RoleAssignments_1","ra","roles_RoleAssignment","principalId","roleDefId","remove","RoleAssignment","roles_RoleDefinitionBindings","roles_RoleDefinitions","RoleDefinitions","roles_RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","RoleDefinition","retDef","RoleDefinitionBindings","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","sharepointqueryablesecurable_SharePointQueryableSecurable","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","sharepointqueryableshareable_SharePointQueryableShareable","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","sharepointqueryableshareable_SharePointQueryableShareableWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","sharepointqueryableshareable_SharePointQueryableShareableItem","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","sharepointqueryableshareable_FileFolderShared","FileFolderShared","getShareable","shareable","sharepointqueryableshareable_SharePointQueryableShareableFile","SharePointQueryableShareableFile","sharepointqueryableshareable_SharePointQueryableShareableFolder","SharePointQueryableShareableFolder","shareEverything","webparts_LimitedWebPartManager","LimitedWebPartManager","webparts_WebPartDefinitions","export","webPartId","import","xml","webPartXml","WebPartDefinitions","webparts_WebPartDefinition","getByControlId","WebPartDefinition","webparts_WebPart","saveChanges","moveTo","zoneId","zoneIndex","WebPart","folders_Folders","Folders","Folders_1","folders_Folder","folder","Folder","files_Files","recycle","listItemAllFields","items_Item","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","contenttypes_ContentTypes","ContentTypes","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","contenttypes_ContentType","additionalSettings","assign","Group","StringValue","ContentType","contenttypes_FieldLinks","FieldLinks","fl","contenttypes_FieldLink","FieldLink","attachmentfiles_AttachmentFiles","AttachmentFiles","AttachmentFiles_1","attachmentfiles_AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","AttachmentFile","getText","getParsed","getBlob","getBuffer","getJSON","setContent","views_Views","Views","Views_1","views_View","getByTitle","title","personalView","PersonalView","Title","view","views_ViewFields","renderAsHtml","setViewXml","viewXml","ViewFields","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","fields_Fields","Fields","Fields_1","fields_Field","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","Field","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","forms_Forms","Forms","forms_Form","Form","subscriptions_Subscriptions","Subscriptions","subscriptionId","subscriptions_Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","Subscription","usercustomactions_UserCustomActions","UserCustomActions","UserCustomActions_1","uca","usercustomactions_UserCustomAction","action","UserCustomAction","lists_Lists","Lists","Lists_1","list","lists_List","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","List","items_Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","comments_Comments","Comments","Comments_1","comments_Comment","Comment","comments_Replies","like","unlike","Replies","Replies_1","Items","Items_1","getItemByStringId","stringId","reverse","getPaged","items_PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","Item","files_File","items_ItemVersions","items_ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","ItemVersions","versionId","items_ItemVersion","ItemVersion","PagedItemCollection","nextUrl","PagedItemCollectionParser","_parent","__next","ItemUpdatedParser","odata.etag","Files","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","File","files_Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions","Versions_1","files_Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","Version","PromotedState","appcatalog_AppCatalog","AppCatalog","getAppById","appcatalog_App","filename","App","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","batch_SPBatch","SPBatch","ParseResponse","responses","statusRegExp","lines","line","trim","Response","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","getNextOrder","collection","max","regexIndexOf","regex","startpos","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","clientsidepages_ClientSidePage","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","section","clientsidepages_CanvasSection","toHtml","fromHtml","control","clientsidepages_CanvasColumn","mergeColumnToTree","clientsidepages_ClientSideWebpart","mergePartToTree","clientsidepages_ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","on","column","controlData","sectionIndex","sectionFactor","addControl","CanvasSection","_memId","addColumn","factor","defaultColumn","clientsidepages_CanvasControl","CanvasControl","controlType","dataVersion","getControlData","CanvasColumn","getControl","jsonData","displayMode","clientsidepages_ClientSidePart","ClientSidePart","ClientSideText","_text","startsWith","editorType","controlIndex","ClientSideWebpart","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","navigation_NavigationNodes","NavigationNodes","node","navigation_NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","NavigationNode","navigation_Navigation","Navigation","navigation_NavigationService","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","regionalsettings_RegionalSettings","RegionalSettings","regionalsettings_InstalledLanguages","regionalsettings_TimeZone","regionalsettings_TimeZones","InstalledLanguages","TimeZone","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones","TimeZones_1","spODataEntity","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","search_Search","Search","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","search_SearchResults","prop","Querytext","toSearchQuery","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","searchsuggest_SearchSuggest","SearchSuggest","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","sp","setProp","features_Features","Features","Features_1","force","featdefScope","featureId","feature","features_Feature","Feature","deactivate","DefinitionId","relateditems_RelatedItemManagerImpl","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","webs_Webs","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","webs_Web","webs_WebInfos","WebInfos","Web","Web_1","fromUrl","getParentWeb","ParentWeb","site_Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","Site","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","joinHubSite","siteId","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","Classification","Lcid","ShareByEmailEnabled","SiteDesignId","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","userprofiles_UserProfileQuery","UserProfileQuery","clientPeoplePickerQuery","userprofiles_ClientPeoplePickerQuery","profileLoader","userprofiles_ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","social_SocialQuery","SocialQuery","SocialQuery_1","social_MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","sitescripts_SiteScripts","SiteScripts","methodName","getBaseUrl","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","updateInfo","sitedesigns_SiteDesigns","SiteDesigns","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","utilities_UtilityMethod","UtilityMethod","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","rest_sp","SPRest","_baseUrl","searchSuggest","finalQuery","searchWithCaching","fm","opQuery","selectProperties","childSelectProperties","builder","setProperty","objectProperties","actions","ObjectPath","staticMethod","typeId","objConstructor","MethodParams","_p","build","initValues","string","number","boolean","strArray","values","objectPath","inputIndex","toArray","opbuilders_method","arrParams","writeObjectPathBody","objectPaths","replaceAfter","opSetId","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","StringMatchOption","ChangedItemType","ChangedOperationType","objectpath_ObjectPathQueue","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","appendActionToLast","contextIndex","staticProperty","toBody","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","parsers_ProcessQueryParser","ProcessQueryParser","parsed","ErrorInfo","findResult","getParsedResultById","IsNull","ProcessQueryPath","clintsvcqueryable_ClientSvcQueryable","ClientSvcQueryable","_objectPaths","_selects","getSelects","getChild","getChildProperty","clientsvc_ObjectPaths","sendGet","sendGetCollection","invokeMethod","invokeMethodImpl","invokeMethodAction","invokeNonQuery","invokeMethodCollection","invokeUpdate","accept","content-type","queryAction","isAction","methodAction","batch_ObjectPathBatch","ObjectPathBatch","executor","batch_BatchExecutor","appendRequests","BatchExecutor","_requests","_builderIndex","pathQueue","indexMappingFunction","opActions","obPaths","batch_ProcessQueryCachingParserWrapper","batch_BatchParser","BatchParser","ProcessQueryCachingParserWrapper","wrapper","labels_Labels","Labels","getByValue","labels_Label","Label","setAsDefaultForLanguage","terms_Terms","Terms","terms_Term","Term","termsets_TermSet","termsets_TermSets","createLabel","isDefault","labels","deprecate","doDeprecate","getDescription","setDescription","setLocalCustomProperty","TermSets","TermSet","termgroup_TermGroup","addStakeholder","stakeholderName","deleteStakeholder","getTermById","addTerm","isAvailableForTagging","copy","TermGroup","termstores_TermStore","addContributor","principalName","addGroupManager","createTermSet","getTermSetById","termstores_TermStores","TermStores","TermStore","getTermSetsByName","getTermsById","ids","getTermInTermSet","termId","termSetId","getTermGroupById","getTerms","methodIndex","getSiteCollectionGroup","createIfMissing","methodParent","siteIndex","addLanguage","addGroup","commitAll","deleteLanguage","rollbackAll","updateCache","updateUsedTermsOnSite","session_Session","Session","getDefaultKeywordTermStore","getDefaultSiteCollectionTermStore","setItemMetaDataField","fieldName","term","postData","TermGuid","WssId","setItemMetaDataMultiField","terms","fields","InternalName","taxonomy"],"mappings":"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","file":"sp-taxonomy.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp.sp-taxonomy\"] = factory();\n\telse\n\t\troot[\"pnp.sp-taxonomy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as tslib_1 from \"tslib\";\r\nimport { BearerTokenFetchClient } from \"./netutil\";\r\nimport { isUrlAbsolute } from \"./util\";\r\n// @ts-ignore\r\nimport * as adal from \"adal-angular/dist/adal.min.js\";\r\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = adal.inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { AdalClient };\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\r\nexport { SPFxAdalClient };\r\n//# sourceMappingURL=adalclient.js.map","import { isFunc } from \"./util\";\r\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nexport function objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nexport function mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=collections.js.map","import { mergeMaps, objectToMap } from \"./collections\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nexport { RuntimeConfigImpl };\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nexport var RuntimeConfig = _runtimeConfig;\r\n//# sourceMappingURL=libconfig.js.map","import { dateAdd, getCtxCallback, jsS, objectDefinedNotNull } from \"./util\";\r\nimport { RuntimeConfig } from \"./libconfig\";\r\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\nexport { PnPClientStorageWrapper };\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\r\nexport { PnPClientStorage };\r\n//# sourceMappingURL=storage.js.map","export * from \"./src/common\";\r\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nexport function getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nexport function dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nexport function combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nexport function getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nexport function getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nexport function isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nexport function objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nexport function extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nexport function isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nexport function stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nexport function getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nexport function sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nexport function jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nexport function hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nexport function getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\r\n//# sourceMappingURL=util.js.map","import { RuntimeConfig, FetchClient, } from \"@pnp/common\";\r\nexport function setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nexport { SPRuntimeConfigImpl };\r\nexport var SPRuntimeConfig = new SPRuntimeConfigImpl();\r\n//# sourceMappingURL=splibconfig.js.map","import { combine, isUrlAbsolute, hOP } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nexport function toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global.location !== undefined) {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\r\n//# sourceMappingURL=toabsoluteurl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, objectDefinedNotNull } from \"./util\";\r\nexport function mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nexport function mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\nexport { FetchClient };\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\r\nexport { BearerTokenFetchClient };\r\n//# sourceMappingURL=netutil.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","/**\r\n * A set of logging levels\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=loglevel.js.map","/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\n//# sourceMappingURL=logger.js.map","/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\nexport { ConsoleListener };\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\r\nexport { FunctionListener };\r\n//# sourceMappingURL=listeners.js.map","import { RuntimeConfig, dateAdd, PnPClientStorage } from \"@pnp/common\";\r\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nexport { CachingOptions };\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\r\nexport { CachingParserWrapper };\r\n//# sourceMappingURL=caching.js.map","import * as tslib_1 from \"tslib\";\r\nimport { isFunc, hOP } from \"@pnp/common\";\r\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nexport { HttpRequestError };\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nexport { ODataParserBase };\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nexport { ODataDefaultParser };\r\nvar TextParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nexport { TextParser };\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nexport { BlobParser };\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nexport { JSONParser };\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nexport { BufferParser };\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\r\nexport { LambdaParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, isFunc, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingOptions, CachingParserWrapper } from \"./caching\";\r\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nexport function setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nexport function pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nexport function requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    tslib_1.__decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nexport { PipelineMethods };\r\nexport function getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\r\n//# sourceMappingURL=pipeline.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, RuntimeConfig, mergeOptions, objectDefinedNotNull, } from \"@pnp/common\";\r\nimport { ODataDefaultParser, JSONParser } from \"./parsers\";\r\nimport { getDefaultPipeline, pipe, } from \"./pipeline\";\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was clones was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    return Queryable;\r\n}());\r\nexport { Queryable };\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\r\nexport { ODataQueryable };\r\n//# sourceMappingURL=queryable.js.map","import { getGUID } from \"@pnp/common\";\r\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\r\nexport { ODataBatch };\r\n//# sourceMappingURL=odatabatch.js.map","import { stringIsNullOrEmpty } from \"@pnp/common\";\r\nexport function extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\r\n//# sourceMappingURL=extractweburl.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nexport function odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nexport function spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nexport function spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\r\n//# sourceMappingURL=odata.js.map","import { combine, extend } from \"@pnp/common\";\r\nimport { ODataDefaultParser } from \"@pnp/odata\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\nexport { CachedDigest };\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\r\nexport { DigestCache };\r\n//# sourceMappingURL=digestcache.js.map","import { DigestCache } from \"./digestcache\";\r\nimport { extend, mergeHeaders, getCtxCallback, } from \"@pnp/common\";\r\nimport { SPRuntimeConfig } from \"../config/splibconfig\";\r\nimport { extractWebUrl } from \"../utils/extractweburl\";\r\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.6\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\r\nexport { SPHttpClient };\r\n//# sourceMappingURL=sphttpclient.js.map","export function metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\r\n//# sourceMappingURL=metadata.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, isUrlAbsolute, mergeOptions, extend, getGUID, jsS, } from \"@pnp/common\";\r\nimport { ODataQueryable, } from \"@pnp/odata\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\nexport { SharePointQueryable };\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableCollection };\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableInstance };\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nexport function defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\r\n//# sourceMappingURL=sharepointqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = tslib_1.__decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\nexport { SiteUsers };\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\nexport { UserBase };\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\nexport { SiteUser };\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = tslib_1.__decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\r\nexport { CurrentUser };\r\n//# sourceMappingURL=siteusers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteUsers } from \"./siteusers\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = tslib_1.__decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\nexport { SiteGroups };\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\r\nexport { SiteGroup };\r\n//# sourceMappingURL=sitegroups.js.map","/**\r\n * Determines the display mode of the given control or view\r\n */\r\nexport var ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nexport var FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nexport var DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nexport var AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nexport var CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nexport var UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nexport var PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalType;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nexport var RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nexport var PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nexport var SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nexport var SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nexport var SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nexport var SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nexport var SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nexport var RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nexport var FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nexport var ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nexport var UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\r\n//# sourceMappingURL=types.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SiteGroups } from \"./sitegroups\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = tslib_1.__decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\nexport { RoleAssignments };\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\nexport { RoleAssignment };\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitions };\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { RoleDefinition };\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = tslib_1.__decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\r\nexport { RoleDefinitionBindings };\r\n//# sourceMappingURL=roles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { RoleAssignments } from \"./roles\";\r\nimport { PermissionKind } from \"./types\";\r\nimport { SharePointQueryable, SharePointQueryableInstance } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\r\nexport { SharePointQueryableSecurable };\r\n//# sourceMappingURL=sharepointqueryablesecurable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\nimport { extend, getGUID } from \"@pnp/common\";\r\nimport { LimitedWebPartManager } from \"./webparts\";\r\nimport { Item } from \"./items\";\r\nimport { SharePointQueryableShareableFile } from \"./sharepointqueryableshareable\";\r\nimport { odataUrlFrom } from \"./odata\";\r\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = tslib_1.__decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\nexport { Files };\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    tslib_1.__extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\nexport { File };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\nexport { Versions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nexport { Version };\r\nexport var CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nexport var WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nexport var MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nexport var TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\r\n//# sourceMappingURL=files.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, combine, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { RoleType, SharingLinkKind, SharingRole, } from \"./types\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nexport { SharePointQueryableShareable };\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableWeb };\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nexport { SharePointQueryableShareableItem };\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nexport { FileFolderShared };\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFile };\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\r\nexport { SharePointQueryableShareableFolder };\r\n//# sourceMappingURL=sharepointqueryableshareable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nexport { LimitedWebPartManager };\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nexport { WebPartDefinitions };\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nexport { WebPartDefinition };\r\nvar WebPart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = tslib_1.__decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\r\nexport { WebPart };\r\n//# sourceMappingURL=webparts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableFolder } from \"./sharepointqueryableshareable\";\r\nimport { Files } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Item } from \"./items\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = tslib_1.__decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\nexport { Folders };\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\r\nexport { Folder };\r\n//# sourceMappingURL=folders.js.map","import * as tslib_1 from \"tslib\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = tslib_1.__decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\nexport { ContentTypes };\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\nexport { ContentType };\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = tslib_1.__decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\nexport { FieldLinks };\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\r\nexport { FieldLink };\r\n//# sourceMappingURL=contenttypes.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { TextParser, BlobParser, JSONParser, BufferParser } from \"@pnp/odata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = tslib_1.__decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\nexport { AttachmentFiles };\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\r\nexport { AttachmentFile };\r\n//# sourceMappingURL=attachmentfiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = tslib_1.__decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\nexport { Views };\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    tslib_1.__extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nexport { View };\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = tslib_1.__decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\r\nexport { ViewFields };\r\n//# sourceMappingURL=views.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { DateTimeFieldFormatType, FieldTypes, CalendarType, UrlFieldFormatType, ChoiceFieldFormatType, } from \"./types\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = tslib_1.__decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\nexport { Fields };\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\r\nexport { Field };\r\n//# sourceMappingURL=fields.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = tslib_1.__decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\nexport { Forms };\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\r\nexport { Form };\r\n//# sourceMappingURL=forms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = tslib_1.__decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\nexport { Subscriptions };\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\r\nexport { Subscription };\r\n//# sourceMappingURL=subscriptions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = tslib_1.__decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\nexport { UserCustomActions };\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\r\nexport { UserCustomAction };\r\n//# sourceMappingURL=usercustomactions.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Items } from \"./items\";\r\nimport { Views, View } from \"./views\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { Fields } from \"./fields\";\r\nimport { Forms } from \"./forms\";\r\nimport { Subscriptions } from \"./subscriptions\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableSecurable } from \"./sharepointqueryablesecurable\";\r\nimport { extend, hOP, jsS } from \"@pnp/common\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { Folder } from \"./folders\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = tslib_1.__decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\nexport { Lists };\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    tslib_1.__extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\r\nexport { List };\r\n//# sourceMappingURL=lists.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = tslib_1.__decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\nexport { Comments };\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\nexport { Comment };\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = tslib_1.__decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\r\nexport { Replies };\r\n//# sourceMappingURL=comments.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableCollection, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableItem } from \"./sharepointqueryableshareable\";\r\nimport { Folder } from \"./folders\";\r\nimport { File } from \"./files\";\r\nimport { ContentType } from \"./contenttypes\";\r\nimport { extend, jsS, hOP } from \"@pnp/common\";\r\nimport { ODataParserBase } from \"@pnp/odata\";\r\nimport { AttachmentFiles } from \"./attachmentfiles\";\r\nimport { List } from \"./lists\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { Comments } from \"./comments\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = tslib_1.__decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\nexport { Items };\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\nexport { Item };\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = tslib_1.__decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\nexport { ItemVersions };\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\nexport { ItemVersion };\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nexport { PagedItemCollection };\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\r\n//# sourceMappingURL=items.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection } from \"./sharepointqueryable\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\nexport { AppCatalog };\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    tslib_1.__extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\r\nexport { App };\r\n//# sourceMappingURL=appcatalog.js.map","import * as tslib_1 from \"tslib\";\r\nimport { TemplateFileType, File } from \"./files\";\r\nimport { Item } from \"./items\";\r\nimport { extend, combine, getGUID, getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Page promotion state\r\n */\r\nexport var PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nexport { ClientSidePage };\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nexport { CanvasSection };\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nexport { CanvasControl };\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\nexport { CanvasColumn };\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nexport { ClientSidePart };\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nexport { ClientSideText };\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\r\nexport { ClientSideWebpart };\r\n//# sourceMappingURL=clientsidepages.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ODataBatch } from \"@pnp/odata\";\r\nimport { getGUID, isUrlAbsolute, combine, mergeHeaders, hOP } from \"@pnp/common\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\nimport { SPRuntimeConfig } from \"./config/splibconfig\";\r\nimport { toAbsoluteUrl } from \"./utils/toabsoluteurl\";\r\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\r\nexport { SPBatch };\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS, extend } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\nexport { NavigationNodes };\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\nexport { NavigationNode };\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = tslib_1.__decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\nexport { Navigation };\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\r\nexport { NavigationService };\r\n//# sourceMappingURL=navigation.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath, } from \"./sharepointqueryable\";\r\nimport { spODataEntity, } from \"./odata\";\r\nimport { dateAdd, hOP, } from \"@pnp/common\";\r\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = tslib_1.__decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\nexport { RegionalSettings };\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    tslib_1.__extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = tslib_1.__decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\nexport { InstalledLanguages };\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\nexport { TimeZone };\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = tslib_1.__decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\r\nexport { TimeZones };\r\n//# sourceMappingURL=regionalsettings.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS, hOP, getHashCode, objectDefinedNotNull, isArray } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nimport { CachingOptions } from \"@pnp/odata\";\r\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nexport function SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\nexport { Search };\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\nexport { SearchResults };\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nexport var SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nexport var ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nexport var QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\r\nexport { SearchBuiltInSourceId };\r\n//# sourceMappingURL=search.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath, } from \"./sharepointqueryable\";\r\nimport { jsS, hOP } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { SocialQuery };\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\nexport { MySocialQuery };\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nexport var SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nexport var SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nexport var SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nexport var SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\r\n//# sourceMappingURL=social.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { hOP } from \"@pnp/common\";\r\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = tslib_1.__decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nexport { SearchSuggest };\r\n//# sourceMappingURL=searchsuggest.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = tslib_1.__decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nexport { Features };\r\nvar Feature = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\r\nexport { Feature };\r\n//# sourceMappingURL=features.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, defaultPath } from \"./sharepointqueryable\";\r\nimport { jsS } from \"@pnp/common\";\r\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    tslib_1.__extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\r\nexport { RelatedItemManagerImpl };\r\n//# sourceMappingURL=relateditems.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { SharePointQueryableShareableWeb } from \"./sharepointqueryableshareable\";\r\nimport { Folders, Folder } from \"./folders\";\r\nimport { Lists, List } from \"./lists\";\r\nimport { Fields } from \"./fields\";\r\nimport { Site } from \"./site\";\r\nimport { Navigation } from \"./navigation\";\r\nimport { SiteGroups, SiteGroup } from \"./sitegroups\";\r\nimport { ContentTypes } from \"./contenttypes\";\r\nimport { RoleDefinitions } from \"./roles\";\r\nimport { File } from \"./files\";\r\nimport { extractWebUrl } from \"./utils/extractweburl\";\r\nimport { SiteUsers, SiteUser, CurrentUser } from \"./siteusers\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { RelatedItemManagerImpl } from \"./relateditems\";\r\nimport { AppCatalog } from \"./appcatalog\";\r\nimport { RegionalSettings } from \"./regionalsettings\";\r\nimport { ClientSidePage } from \"./clientsidepages\";\r\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = tslib_1.__decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\nexport { Webs };\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    tslib_1.__extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = tslib_1.__decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\nexport { WebInfos };\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get();\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\r\nexport { Web };\r\n//# sourceMappingURL=webs.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, defaultPath } from \"./sharepointqueryable\";\r\nimport { Web } from \"./webs\";\r\nimport { UserCustomActions } from \"./usercustomactions\";\r\nimport { SPBatch } from \"./batch\";\r\nimport { Features } from \"./features\";\r\nimport { hOP, jsS, extend } from \"@pnp/common\";\r\nimport { SPHttpClient } from \"./net/sphttpclient\";\r\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: null\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            Lcid: lcid,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        var postBody = jsS({\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        });\r\n        return this.getRootWeb().then(function (d) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\r\nexport { Site };\r\n//# sourceMappingURL=site.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, defaultPath } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { metadata } from \"./utils/metadata\";\r\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nexport { UserProfileQuery };\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = tslib_1.__decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\r\n//# sourceMappingURL=userprofiles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\r\nexport { SiteScripts };\r\n//# sourceMappingURL=sitescripts.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\r\nexport { SiteDesigns };\r\n//# sourceMappingURL=sitedesigns.js.map","import * as tslib_1 from \"tslib\";\r\nimport { SharePointQueryable } from \"./sharepointqueryable\";\r\nimport { extend, jsS } from \"@pnp/common\";\r\nimport { File } from \"./files\";\r\nimport { odataUrlFrom } from \"./odata\";\r\nimport { metadata } from \"./utils/metadata\";\r\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    tslib_1.__extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\r\nexport { UtilityMethod };\r\n//# sourceMappingURL=utilities.js.map","import { Search } from \"./search\";\r\nimport { SearchSuggest } from \"./searchsuggest\";\r\nimport { Site } from \"./site\";\r\nimport { Web } from \"./webs\";\r\nimport { UserProfileQuery } from \"./userprofiles\";\r\nimport { NavigationService } from \"./navigation\";\r\nimport { SocialQuery } from \"./social\";\r\nimport { SiteScripts } from \"./sitescripts\";\r\nimport { SiteDesigns } from \"./sitedesigns\";\r\nimport { UtilityMethod } from \"./utilities\";\r\nimport { setup as _setup, } from \"./config/splibconfig\";\r\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        _setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nexport { SPRest };\r\nexport var sp = new SPRest();\r\n//# sourceMappingURL=rest.js.map","export function objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nexport function opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nexport function setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nexport function objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\r\n//# sourceMappingURL=opactionbuilders.js.map","import { ObjectPath } from \"./objectpath\";\r\nexport function property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nexport function staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nexport function objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.strArray = function (values) {\r\n        return this.a(\"Array\", values.map(function (v) { return \"<Object Type=\\\"String\\\">\" + v + \"</Object>\"; }).join(\"\"));\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nexport { MethodParams };\r\nexport function method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\r\n//# sourceMappingURL=opbuilders.js.map","/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nexport function writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\r\n//# sourceMappingURL=utils.js.map","import { extend, objectDefinedNotNull } from \"@pnp/common\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { property, staticProperty } from \"./opbuilders\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\nexport { ObjectPath };\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nexport function opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nexport function opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\r\nexport { ObjectPathQueue };\r\n//# sourceMappingURL=objectpath.js.map","export var StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nexport var ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nexport var ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\r\n//# sourceMappingURL=types.js.map","import { getAttrValueFromString, jsS, hOP } from \"@pnp/common\";\r\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n            // this is an invokeMethodAction so the last method action corresponds to our result\r\n            if (i === (this.op.actions.length - 1) && /^<Method /i.test(a)) {\r\n                return Promise.resolve(this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10)));\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\r\nexport { ProcessQueryParser };\r\n//# sourceMappingURL=parsers.js.map","import * as tslib_1 from \"tslib\";\r\nimport { combine, extend, getGUID, mergeHeaders, mergeOptions, objectDefinedNotNull, hOP, getHashCode } from \"@pnp/common\";\r\nimport { CachingOptions, Queryable } from \"@pnp/odata\";\r\nimport { SPHttpClient, toAbsoluteUrl } from \"@pnp/sp\";\r\nimport { ObjectPathQueue } from \"./objectpath\";\r\nimport { methodAction, objectPath, objectProperties, opQuery } from \"./opactionbuilders\";\r\nimport { method, property } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes a method action that returns a single result and does not have an associated query (ex: GetDescription on Term)\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodAction = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + getHashCode(_this._objectPaths.toBody()) + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\r\nexport { ClientSvcQueryable };\r\n//# sourceMappingURL=clintsvcqueryable.js.map","import * as tslib_1 from \"tslib\";\r\nimport { Logger } from \"@pnp/logging\";\r\nimport { CachingParserWrapper, ODataBatch } from \"@pnp/odata\";\r\nimport { ClientSvcQueryable } from \"./clintsvcqueryable\";\r\nimport { ObjectPath, opSetId, opSetParentId, opSetPathId, opSetPathParamId } from \"./objectpath\";\r\nimport { objectPath } from \"./opactionbuilders\";\r\nimport { staticMethod } from \"./opbuilders\";\r\nimport { ProcessQueryParser } from \"./parsers\";\r\nimport { writeObjectPathBody } from \"./utils\";\r\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nexport { ObjectPathBatch };\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method.path = opSetId(\"0\", method.path);\r\n        method.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\r\n//# sourceMappingURL=batch.js.map","import * as tslib_1 from \"tslib\";\r\nimport { ClientSvcQueryable, MethodParams, property, } from \"@pnp/sp-clientsvc\";\r\nimport { stringIsNullOrEmpty } from \"@pnp/common\";\r\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(property(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = MethodParams.build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(ClientSvcQueryable));\r\nexport { Labels };\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(ClientSvcQueryable));\r\nexport { Label };\r\n//# sourceMappingURL=labels.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, } from \"@pnp/sp-clientsvc\";\r\nimport { Labels } from \"./labels\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\nvar Terms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(ClientSvcQueryable));\r\nexport { Terms };\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new Labels(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return extend(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = MethodParams.build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Gets the appropriate description for a term\r\n     *\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.getDescription = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeMethodAction(\"GetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = MethodParams.build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = MethodParams.build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(ClientSvcQueryable));\r\nexport { Term };\r\n//# sourceMappingURL=terms.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, setProperty } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nvar TermSets = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(ClientSvcQueryable));\r\nexport { TermSets };\r\nvar TermSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(Terms, \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, setProperty(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return extend(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(ClientSvcQueryable));\r\nexport { TermSet };\r\n//# sourceMappingURL=termsets.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams } from \"@pnp/sp-clientsvc\";\r\nimport { TermSets } from \"./termsets\";\r\nimport { TermStore } from \"./termstores\";\r\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof TermStore ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return extend(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(ClientSvcQueryable));\r\nexport { TermGroup };\r\n//# sourceMappingURL=termgroup.js.map","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, method, objConstructor, objectPath, objectProperties, opQuery, property } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(property(\"TermStores\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", MethodParams.build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", MethodParams.build().string(sanitizeGuid(id)));\r\n    };\r\n    return TermStores;\r\n}(ClientSvcQueryable));\r\nexport { TermStores };\r\nvar TermStore = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(TermSets, \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermsById = function () {\r\n        var ids = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ids[_i] = arguments[_i];\r\n        }\r\n        var params = MethodParams.build().strArray(ids.map(function (id) { return sanitizeGuid(id); }));\r\n        return this.getChild(Terms, \"GetTermsById\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = MethodParams.build().string(sanitizeGuid(termId)).string(sanitizeGuid(termSetId));\r\n        return this.getChild(Term, \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermGroup, \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = objConstructor.apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(method(\"GetTerms\", params, \r\n        // actions\r\n        objectPath()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new Terms(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(method(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        objectPath()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new TermGroup(this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return extend(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(method(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(objConstructor.apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info))));\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(method(\"GetChanges\", params, \r\n        // actions\r\n        objectPath(), opQuery([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(ClientSvcQueryable));\r\nexport { TermStore };\r\n//# sourceMappingURL=termstores.js.map","import * as tslib_1 from \"tslib\";\r\nimport { sp } from \"@pnp/sp\";\r\nimport { ClientSvcQueryable, ObjectPathBatch, objectPath, staticMethod } from \"@pnp/sp-clientsvc\";\r\nimport { TermStore, TermStores } from \"./termstores\";\r\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new TermStores(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        sp.setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new ObjectPathBatch(this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(ClientSvcQueryable));\r\nexport { Session };\r\n//# sourceMappingURL=session.js.map","import { sanitizeGuid, objectDefinedNotNull } from \"@pnp/common\";\r\nexport function setItemMetaDataField(item, fieldName, term) {\r\n    if (!objectDefinedNotNull(term)) {\r\n        return Promise.resolve(null);\r\n    }\r\n    var postData = {};\r\n    postData[fieldName] = {\r\n        \"Label\": term.Name,\r\n        \"TermGuid\": sanitizeGuid(term.Id),\r\n        \"WssId\": \"-1\",\r\n        \"__metadata\": { \"type\": \"SP.Taxonomy.TaxonomyFieldValue\" },\r\n    };\r\n    return item.update(postData);\r\n}\r\nexport function setItemMetaDataMultiField(item, fieldName) {\r\n    var terms = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        terms[_i - 2] = arguments[_i];\r\n    }\r\n    if (terms.length < 1) {\r\n        return Promise.resolve(null);\r\n    }\r\n    return item.list.fields.getByTitle(fieldName + \"_0\").select(\"InternalName\").get().then(function (i) {\r\n        var postData = {};\r\n        postData[i.InternalName] = terms.map(function (term) { return \"-1;#\" + term.Name + \"|\" + sanitizeGuid(term.Id) + \";#\"; }).join(\"\");\r\n        return item.update(postData);\r\n    });\r\n}\r\n//# sourceMappingURL=utilities.js.map","import { Session } from \"./session\";\r\n// export an existing session instance\r\nexport var taxonomy = new Session();\r\nexport * from \"./labels\";\r\nexport * from \"./session\";\r\nexport * from \"./termgroup\";\r\nexport * from \"./terms\";\r\nexport * from \"./termsets\";\r\nexport * from \"./termstores\";\r\nexport * from \"./types\";\r\nexport * from \"./utilities\";\r\n//# sourceMappingURL=taxonomy.js.map","export * from \"./src/taxonomy\";\r\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}