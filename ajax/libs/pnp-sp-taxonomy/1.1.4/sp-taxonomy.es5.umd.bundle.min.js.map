{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sp-taxonomy.es5.umd.bundle.min.js","webpack:///webpack/bootstrap 8027b9ffbb448d244a92","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./dist/packages/common/dist/common.es5.js","webpack:///./dist/packages/sp-clientsvc/dist/sp-clientsvc.es5.js","webpack:///./dist/packages/logging/dist/logging.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/termsets.js","webpack:///./dist/packages/sp/dist/sp.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/termstores.js","webpack:///./build/packages/sp-taxonomy/es5/src/termgroup.js","webpack:///./build/packages/sp-taxonomy/es5/src/terms.js","webpack:///./build/packages/sp-taxonomy/es5/src/session.js","webpack:///(webpack)/buildin/global.js","webpack:///./dist/packages/odata/dist/odata.es5.js","webpack:///./build/packages/sp-taxonomy/es5/src/labels.js","webpack:///./build/packages/sp-taxonomy/es5/src/taxonomy.js","webpack:///./node_modules/adal-angular/lib/adal.js","webpack:///./build/packages/sp-taxonomy/es5/src/types.js"],"names":["root","factory","exports","module","define","amd","self","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","setPrototypeOf","__proto__","Array","global","getCtxCallback","context","method","params","_i","apply","dateAdd","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","combinePaths","paths","filter","path","stringIsNullOrEmpty","map","replace","join","getRandomString","chars","text","possible","charAt","Math","floor","random","getGUID","toString","isFunc","cf","objectDefinedNotNull","obj","isArray","array","extend","source","noOverwrite","check","check2","f","v","getOwnPropertyNames","reduce","t","isUrlAbsolute","url","test","getAttrValueFromString","html","attrName","reg","RegExp","match","exec","sanitizeGuid","guid","matches","mergeHeaders","Request","headers","forEach","value","append","mergeOptions","readBlobAsArrayBuffer","blob","readBlobAs","mode","Promise","resolve","reject","reader","FileReader","onload","e","result","readAsText","readAsArrayBuffer","Dictionary","RuntimeConfig","FetchClient","PnPClientStorage","__WEBPACK_IMPORTED_MODULE_0__pnp_logging__","__WEBPACK_IMPORTED_MODULE_1_tslib__","__WEBPACK_IMPORTED_MODULE_2_adal_angular__","Util","fetch","options","BearerTokenFetchClient","_super","_token","_this","set","token","Headers","AdalClient","clientId","tenant","redirectUri","fromSPFxContext","spfxContext","cliendId","pageContext","aadInfo","tenantId","window","location","origin","Error","getToken","getResource","then","resource","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","displayCall","_displayCallback","navigateToLoginRequestUrl","_loginPromise","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","clearInterval","document","URL","indexOf","handleWindowCallback","hash","close","_loginInProgress","parser","createElement","href","protocol","hostname","keys","values","index","add","remove","push","merge","sourceAsDictionary_1","getKeys","sourceAsHash","val","splice","getValues","clear","RuntimeConfigImpl","UrlException","msg","log","data","level","_v","config","_runtimeConfig","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","write","cacheExpirationHandler","getItem","persistable","JSON","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","stringify","pnp","setTimeout","cacheExpirationIntervalMilliseconds","MemoryStorage","_store","count","_local","_session","localStorage","sessionStorage","objectPath","opQuery","selectProperties","childSelectProperties","builder","setProperty","type","methodAction","arrParams","toArray","objectProperties","actions","ObjectPath","staticMethod","typeId","staticProperty","objConstructor","writeObjectPathBody","objectPaths","op","opSetId","id","xml","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","parseInt","regex","ObjectPathBatch","ClientSvcQueryable","MethodParams","__WEBPACK_IMPORTED_MODULE_0__pnp_common__","__WEBPACK_IMPORTED_MODULE_2__pnp_odata__","__WEBPACK_IMPORTED_MODULE_3__pnp_sp__","__WEBPACK_IMPORTED_MODULE_4__pnp_logging__","_p","build","initValues","string","a","number","boolean","inputIndex","replaceAfter","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","getChildRelationship","getChildRelationships","appendAction","action","appendActionToLast","last","clone","slice","contextIndex","toBody","charCodeAt","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","arr","opId","ProcessQueryParser","ok","parsed","ErrorInfo","findResult","json","getParsedResultById","IsNull","ProcessQueryPath","parent","_objectPaths","_selects","_parentUrl","_url","configureFrom","select","selects","inBatch","batch","_batch","toUrlAndQuery","toUrl","_query","getSelects","getChild","methodName","getChildProperty","propertyName","send","hasBatch","clientsvc_ObjectPaths","body","postCore","sendGet","ops","sendGetCollection","invokeMethod","invokeMethodImpl","invokeNonQuery","_useCaching","invokeMethodCollection","invokeUpdate","properties","toRequestContext","verb","pipeline","_options","accept","content-type","cacheKey","_cachingOptions","dependencyDispose","addBatchDependency","batchDependency","cachingOptions","clientFactory","isBatched","isCached","requestAbsoluteUrl","requestId","addDependency","queryAction","isAction","concat","parentUrl","_batchId","executeImpl","requests","executor","BatchExecutor","batchId","appendRequests","execute","_requests","_builderIndex","method$$1","request","pathQueue","indexMappingFunction","opActions","obPaths","ProcessQueryCachingParserWrapper","BatchParser","rawResponse","chain","wrapper","cacheOptions","cacheData","Logger","LogLevel","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","entry","error","err","subscribers","subscriber","ConsoleListener","format","console","warn","FunctionListener","TermSets","TermSet","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__pnp_common__","__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__","__WEBPACK_IMPORTED_MODULE_3__termgroup__","__WEBPACK_IMPORTED_MODULE_4__terms__","Name","getByName","Id","getById","addStakeholder","stakeholderName","deleteStakeholder","getTermById","addTerm","lcid","isAvailableForTagging","copy","update","extractWebUrl","candidateUrl","substr","spExtractODataId$1","candidate","__metadata","uri","__WEBPACK_IMPORTED_MODULE_2__pnp_logging__","spODataEntity","SPODataEntityParserImpl","setup","toAbsoluteUrl","SPRuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","getNextOrder","collection","max","order","regexIndexOf","startpos","substring","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","trim","reindex","columns","controls","SPHttpClient","sp","PrincipalType","__WEBPACK_IMPORTED_MODULE_3__pnp_odata__","__WEBPACK_IMPORTED_MODULE_4____","hydrate","SPRuntimeConfigImpl","SPODataEntityArrayParserImpl","spPart","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","Accept","Content-Type","fetchRaw","cache","credentials","response","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","_impl","_digestCache","opts","has","toUpperCase","digest","rawHeaders","retry","ctx","status","delay","attempts","retryCount","retryContext","post","patch","SharePointQueryable","lastIndexOf","as","aliasedParams","labelName","getParent","configure","query","additionalPath","includeBatch","SharePointQueryableCollection","expand","expands","orderBy","ascending","k","skip","top","SharePointQueryableInstance","SiteUsers","getByEmail","email","SiteUser","getByLoginName","loginName","su","encodeURIComponent","removeById","removeByLoginName","LoginName","SiteGroups","postBody","X-HTTP-Method","user","CurrentUser","ControlMode","group","groupName","SiteGroup","sg","retGroup","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","basePermissions","BasePermissions","Description","Order","definition","retDef","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","CheckinType","SharePointQueryableSecurable","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SharePointQueryableShareable","getShareLink","kind","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","g","Guest","getShareObjectWeb","SharePointQueryableShareableWeb","View","dependency","shareObjectRaw","SharePointQueryableShareableItem","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","shareEverything","SPBatchParseException","MaxCommentLengthException","NotSupportedInBatchException","operation","LimitedWebPartManager","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","getByControlId","WebPart","saveChanges","moveTo","zoneId","zoneIndex","Folders","Folder","folder","Files","eTag","IF-Match","recycle","listItemAllFields","Item","destUrl","_a","srcUrl","ServerRelativeUrl","client","webBaseUrl","split","hostUrl","methodUrl","ContentTypes","ct","ContentType","addAvailableContentType","contentTypeId","contentType","additionalSettings","Group","StringValue","FieldLinks","fl","FieldLink","AttachmentFiles","AttachmentFile","content","file","addMultiple","files","deleteMultiple","getText","getParsed","getBlob","getBuffer","getJSON","setContent","Views","getByTitle","title","personalView","PersonalView","Title","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields","Field","getByInternalNameOrTitle","createFieldAsXml","info","SchemaXml","parameters","fieldType","addText","maxLength","props","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","results","EditFormat","FillInChoice","addMultiChoice","addBoolean","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","patchCore","deleteCore","UserCustomActions","uca","UserCustomAction","Lists","List","list","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Items","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","ListData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","Comments","Comment","Replies","like","unlike","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","items","itemsCollector","gatherer","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","promise","item","candidatelistItemEntityTypeFullName","File","ItemVersions","ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","versionId","ItemVersion","PagedItemCollection","nextUrl","_parent","handleError","__next","parseODataJSON","odata.etag","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","moveOperations","MoveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","size","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","StartUpload","parseFloat","fileOffset","ContinueUpload","Version","deleteAll","deleteById","recycleByID","deleteByLabel","label","recycleByLabel","restoreByLabel","TemplateFileType","PromotedState","AppCatalog","getAppById","App","filename","deploy","retract","install","uninstall","upgrade","SortDirection","ClientSidePage","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","addSection","section","CanvasSection","toHtml","fromHtml","controlType","control","CanvasColumn","mergeColumnToTree","ClientSideWebpart","mergePartToTree","ClientSideText","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","j","on","column","controlData","position","sectionIndex","sectionFactor","addControl","_memId","addColumn","factor","defaultColumn","CanvasControl","dataVersion","getControlData","getControl","jsonData","displayMode","ClientSidePart","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","Navigation","NavigationService","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","trimDuplicatesIncludeId","TrimDuplicatesIncludeId","EnableNicknames","EnableFQL","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","SelectProperties","culture","Culture","timeZoneId","TimeZoneId","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HitHighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsUrl","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UILanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","Search","formattedBody","fixupProp","HithighlightedProperties","SearchResults","prop","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","ReorderingRuleMatchType","QueryPropertyValueType","SocialActorType","SearchSuggest","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","SPBatch","ParseResponse","statusText","responses","statusRegExp","lines","state","line","parts","Response","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","Features","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","RelatedItemManagerImpl","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","webPath","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","Web","WebInfos","fromUrl","getParentWeb","ParentWeb","Site","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","UserProfileQuery","clientPeoplePickerQuery","ClientPeoplePickerQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","buffer","String","fromCharCode","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","emailIDs","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","SocialQuery","MySocialQuery","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","SocialActorTypes","SocialFollowResult","SocialStatusCode","UtilityMethod","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","SPRest","_baseUrl","searchSuggest","finalQuery","fm","TermStores","TermStore","__WEBPACK_IMPORTED_MODULE_5__termsets__","getTermSetsByName","getTermSetById","getTermInTermSet","termId","termSetId","getTermGroupById","getTerms","methodIndex","getSiteCollectionGroup","createIfMissing","methodParent","siteIndex","addLanguage","addGroup","commitAll","deleteLanguage","rollbackAll","updateCache","updateUsedTermsOnSite","TermGroup","__WEBPACK_IMPORTED_MODULE_3__termsets__","__WEBPACK_IMPORTED_MODULE_4__termstores__","addContributor","principalName","addGroupManager","createTermSet","Terms","Term","__WEBPACK_IMPORTED_MODULE_3__labels__","__WEBPACK_IMPORTED_MODULE_4__termsets__","createLabel","isDefault","labels","getByValue","deprecate","doDeprecate","setDescription","setLocalCustomProperty","Session","__WEBPACK_IMPORTED_MODULE_1__pnp_sp__","__WEBPACK_IMPORTED_MODULE_3__termstores__","getDefaultKeywordTermStore","getDefaultSiteCollectionTermStore","Function","eval","returnResult","setResult","hasResult","next","shift","pipe","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","getDefaultPipeline","PipelineMethods","logStart","caching","logEnd","CachingOptions","CachingParserWrapper","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","AlreadyInBatchException","Queryable","ODataQueryable","ODataBatch","storeName","defaultCachingStore","storage","local","session","ProcessHttpClientResponseException","parseImpl","txt","responseBody","responseHeaders","arrayBuffer","LambdaParser","pathPart","usingCaching","globalCacheDisable","getCore","putCore","_dependencies","_resolveBatchDependencies","resolver","all","Labels","Label","__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__","__WEBPACK_IMPORTED_MODULE_2__pnp_common__","setAsDefaultForLanguage","__WEBPACK_IMPORTED_MODULE_0__src_taxonomy__","taxonomy","__WEBPACK_IMPORTED_MODULE_0__session__","__WEBPACK_IMPORTED_MODULE_1__labels__","__WEBPACK_IMPORTED_MODULE_2__termgroup__","__WEBPACK_IMPORTED_MODULE_3__terms__","__WEBPACK_IMPORTED_MODULE_5__termstores__","__WEBPACK_IMPORTED_MODULE_6__types__","AuthenticationContext","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","expectedState","_guid","_idTokenNonce","loginStartPage","_getItem","_saveItem","verbose","urlNavigate","_getNavigateUrl","registerCallback","_loginPopup","promptUser","_openPopup","popUpWidth","popUpHeight","winLeft","screenLeft","screenX","winTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","left","_handlePopupError","loginCallback","errorDesc","loginError","registeredRedirectUri","that","_broadcast","popUpWindowLocation","encodeURI","eventName","CustomEvent","event","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expiry","offset","expireOffsetSeconds","_now","idtoken","_createUser","tokenType","_renewToken","responseType","frameHandle","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","urlNavigation","frameName","_loadFrame","frameCheck","extraQueryParameter","acquireTokenPopup","extraQueryParameters","claims","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","logout","str","getUser","profile","sid","upn","idToken","parsedJson","_extractIdToken","aud","userName","_getHash","isCallback","_deserialize","getLoginError","getRequestInfo","requestInfo","valid","stateMatch","stateResponse","requestType","_matchState","statesInParentContext","_matchNonce","requestNonce","nonce","loginStates","acquireTokenStates","_getResourceFromState","splitIndex","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoint","endpoints","configEndpoint","_getHostFromUri","extractedUri","isPopup","opener","tokenReceivedCallback","_serialize","_addLibMetadata","encodedIdToken","decodedToken","_decodeJwt","base64IdToken","JWSPayload","base64Decoded","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","codes","h1","h2","h3","h4","bits","c1","c2","c3","decoded","jwtToken","idTokenPartsRegex","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","correlationId","pl","decode","_decimalToHex","hex","cryptoObj","crypto","msCrypto","getRandomValues","Uint8Array","guidHolder","guidResponse","expires","round","iframeId","adalFrame","getElementById","opera","navigator","userAgent","ifr","setAttribute","style","visibility","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","preserve","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","attr","_libVersion","containsPii","timestamp","toUTCString","formattedMessage","stack","errorPii","warnPii","inject","conf","StringMatchOption","ChangedItemType","ChangedOperationType"],"mappings":"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","file":"sp-taxonomy.es5.umd.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pnp\"] = factory();\n\telse\n\t\troot[\"pnp\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = __extends;\n/* unused harmony export __assign */\n/* unused harmony export __rest */\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = __decorate;\n/* unused harmony export __param */\n/* unused harmony export __metadata */\n/* unused harmony export __awaiter */\n/* unused harmony export __generator */\n/* unused harmony export __exportStar */\n/* unused harmony export __values */\n/* unused harmony export __read */\n/* unused harmony export __spread */\n/* unused harmony export __await */\n/* unused harmony export __asyncGenerator */\n/* unused harmony export __asyncDelegator */\n/* unused harmony export __asyncValues */\n/* unused harmony export __makeTemplateObject */\n/* unused harmony export __importStar */\n/* unused harmony export __importDefault */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export AdalClient */\n/* unused harmony export readBlobAsText */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return readBlobAsArrayBuffer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Dictionary; });\n/* unused harmony export deprecatedClass */\n/* unused harmony export deprecated */\n/* unused harmony export beta */\n/* unused harmony export UrlException */\n/* unused harmony export setup */\n/* unused harmony export RuntimeConfigImpl */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return RuntimeConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return mergeHeaders; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return mergeOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FetchClient; });\n/* unused harmony export BearerTokenFetchClient */\n/* unused harmony export PnPClientStorageWrapper */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return PnPClientStorage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return getCtxCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return dateAdd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return combinePaths; });\n/* unused harmony export getRandomString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return getGUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return isFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return objectDefinedNotNull; });\n/* unused harmony export isArray */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return isUrlAbsolute; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return stringIsNullOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return getAttrValueFromString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return sanitizeGuid; });\n/* unused harmony export Util */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_logging__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_adal_angular__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_adal_angular___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_adal_angular__);\n/**\n@license\n * @pnp/common v1.1.4 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\nfunction deprecatedClass(deprecationVersion, message) {\r\n    return function (target) {\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n            data: {\r\n                target: target,\r\n            },\r\n            level: 2 /* Warning */,\r\n            message: \"(\" + deprecationVersion + \") \" + message,\r\n        });\r\n    };\r\n}\r\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // allow filtering of copied properties\r\n    var check2 = isFunc(filter) ? filter : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && check2(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    /**\r\n     * Gets an attribute value from an html/xml string block\r\n     *\r\n     * @param html HTML to search\r\n     * @param attrName The name of the attribute to find\r\n     */\r\n    Util.getAttrValueFromString = getAttrValueFromString;\r\n    /**\r\n     * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n     *\r\n     * @param guid The candidate guid id\r\n     */\r\n    Util.sanitizeGuid = sanitizeGuid;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combinePaths(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = Object(__WEBPACK_IMPORTED_MODULE_2_adal_angular__[\"inject\"])({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nvar UrlException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            __WEBPACK_IMPORTED_MODULE_0__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\n\n//# sourceMappingURL=common.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(10)))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ObjectPathBatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ClientSvcQueryable; });\n/* unused harmony export ObjectPath */\n/* unused harmony export opSetId */\n/* unused harmony export opSetPathId */\n/* unused harmony export opSetParentId */\n/* unused harmony export opSetPathParamId */\n/* unused harmony export ObjectPathQueue */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return objectPath; });\n/* unused harmony export identityQuery */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return opQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return setProperty; });\n/* unused harmony export methodAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return objectProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return staticMethod; });\n/* unused harmony export staticProperty */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return objConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return MethodParams; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return method; });\n/* unused harmony export ProcessQueryParser */\n/* unused harmony export writeObjectPathBody */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_odata__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_sp__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pnp_logging__ = __webpack_require__(3);\n/**\n@license\n * @pnp/sp-clientsvc v1.1.4 - pnp - Provides core functionality to interact with the legacy client.svc SharePoint endpoint\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\n\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\n\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\n\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\n\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\n\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && parsed[0].hasOwnProperty(\"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(JSON.stringify(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(a, \"Id\"), 10));\r\n                if (result && result.hasOwnProperty(\"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\n\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(parent._parentUrl, ProcessQueryPath);\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"a\" /* AlreadyInBatchException */]();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        var _this = this;\r\n        return _super.prototype.toUrl.call(this) + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!Object.hasOwnProperty(\"body\")) {\r\n                options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return Object(__WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"d\" /* toAbsoluteUrl */])(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeOptions */])(options, _this._options);\r\n            var headers = new Headers();\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, options.headers);\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"d\" /* CachingOptions */](cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new __WEBPACK_IMPORTED_MODULE_3__pnp_sp__[\"a\" /* SPHttpClient */](); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"k\" /* Queryable */]));\n\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"g\" /* ODataBatch */]));\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method$$1 = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method$$1.path = opSetId(\"0\", method$$1.path);\r\n        method$$1.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method$$1);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof __WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                __WEBPACK_IMPORTED_MODULE_4__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_odata__[\"e\" /* CachingParserWrapper */]));\n\n\n//# sourceMappingURL=sp-clientsvc.es5.js.map\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/* unused harmony export LogLevel */\n/* unused harmony export ConsoleListener */\n/* unused harmony export FunctionListener */\n/**\n@license\n * @pnp/logging v1.1.4 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\n\n//# sourceMappingURL=logging.es5.js.map\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TermSets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermSet; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termgroup__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__terms__ = __webpack_require__(8);\n\r\n\r\n\r\n\r\n\r\nvar TermSets = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\nvar TermSet = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"b\" /* Terms */], \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"j\" /* setProperty */])(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\" /* extend */])(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termsets.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return spExtractODataId$1; });\n/* unused harmony export spODataEntity */\n/* unused harmony export spODataEntityArray */\n/* unused harmony export SharePointQueryable */\n/* unused harmony export SharePointQueryableInstance */\n/* unused harmony export SharePointQueryableCollection */\n/* unused harmony export SharePointQueryableSecurable */\n/* unused harmony export FileFolderShared */\n/* unused harmony export SharePointQueryableShareable */\n/* unused harmony export SharePointQueryableShareableFile */\n/* unused harmony export SharePointQueryableShareableFolder */\n/* unused harmony export SharePointQueryableShareableItem */\n/* unused harmony export SharePointQueryableShareableWeb */\n/* unused harmony export AppCatalog */\n/* unused harmony export App */\n/* unused harmony export ContentType */\n/* unused harmony export ContentTypes */\n/* unused harmony export FieldLink */\n/* unused harmony export FieldLinks */\n/* unused harmony export Field */\n/* unused harmony export Fields */\n/* unused harmony export CheckinType */\n/* unused harmony export WebPartsPersonalizationScope */\n/* unused harmony export MoveOperations */\n/* unused harmony export TemplateFileType */\n/* unused harmony export File */\n/* unused harmony export Files */\n/* unused harmony export Folder */\n/* unused harmony export Folders */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SPHttpClient; });\n/* unused harmony export Item */\n/* unused harmony export Items */\n/* unused harmony export ItemVersion */\n/* unused harmony export ItemVersions */\n/* unused harmony export PagedItemCollection */\n/* unused harmony export NavigationNodes */\n/* unused harmony export NavigationNode */\n/* unused harmony export NavigationService */\n/* unused harmony export List */\n/* unused harmony export Lists */\n/* unused harmony export RegionalSettings */\n/* unused harmony export InstalledLanguages */\n/* unused harmony export TimeZone */\n/* unused harmony export TimeZones */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return sp; });\n/* unused harmony export SPRest */\n/* unused harmony export RoleDefinitionBindings */\n/* unused harmony export Search */\n/* unused harmony export SearchQueryBuilder */\n/* unused harmony export SearchResults */\n/* unused harmony export SortDirection */\n/* unused harmony export ReorderingRuleMatchType */\n/* unused harmony export QueryPropertyValueType */\n/* unused harmony export SearchBuiltInSourceId */\n/* unused harmony export SearchSuggest */\n/* unused harmony export SearchSuggestResult */\n/* unused harmony export Site */\n/* unused harmony export UserProfileQuery */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return toAbsoluteUrl; });\n/* unused harmony export extractWebUrl */\n/* unused harmony export UtilityMethod */\n/* unused harmony export View */\n/* unused harmony export Views */\n/* unused harmony export ViewFields */\n/* unused harmony export WebPartDefinitions */\n/* unused harmony export WebPartDefinition */\n/* unused harmony export WebPart */\n/* unused harmony export Web */\n/* unused harmony export PromotedState */\n/* unused harmony export ClientSidePage */\n/* unused harmony export CanvasSection */\n/* unused harmony export CanvasControl */\n/* unused harmony export CanvasColumn */\n/* unused harmony export ClientSidePart */\n/* unused harmony export ClientSideText */\n/* unused harmony export ClientSideWebpart */\n/* unused harmony export Comments */\n/* unused harmony export Comment */\n/* unused harmony export Replies */\n/* unused harmony export SocialQuery */\n/* unused harmony export MySocialQuery */\n/* unused harmony export SocialActorType */\n/* unused harmony export SocialActorTypes */\n/* unused harmony export SocialFollowResult */\n/* unused harmony export SocialStatusCode */\n/* unused harmony export ControlMode */\n/* unused harmony export FieldTypes */\n/* unused harmony export DateTimeFieldFormatType */\n/* unused harmony export AddFieldOptions */\n/* unused harmony export CalendarType */\n/* unused harmony export UrlFieldFormatType */\n/* unused harmony export PermissionKind */\n/* unused harmony export PrincipalType */\n/* unused harmony export PrincipalSource */\n/* unused harmony export RoleType */\n/* unused harmony export PageType */\n/* unused harmony export SharingLinkKind */\n/* unused harmony export SharingRole */\n/* unused harmony export SharingOperationStatusCode */\n/* unused harmony export SPSharedObjectType */\n/* unused harmony export SharingDomainRestrictionMode */\n/* unused harmony export RenderListDataOptions */\n/* unused harmony export FieldUserSelectionMode */\n/* unused harmony export ChoiceFieldFormatType */\n/* unused harmony export UrlZone */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pnp_odata__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4____ = __webpack_require__(5);\n/**\n@license\n * @pnp/sp v1.1.4 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\n\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction spExtractODataId$1(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.metadata\") && candidate.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(extractWebUrl(candidate[\"odata.metadata\"]), \"_api\", candidate[\"odata.editLink\"]);\r\n    }\r\n    else if (candidate.hasOwnProperty(\"odata.editLink\")) {\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(\"_api\", candidate[\"odata.editLink\"]);\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return candidate.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(spExtractODataId$1(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spExtractODataId$1(d), null);\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spExtractODataId$1(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spExtractODataId$1(v), null);\r\n                return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== null && typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].spfxContext !== null) {\r\n                return __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"b\" /* FetchClient */](); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* Dictionary */]();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"h\" /* ODataDefaultParser */]();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.4\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.4\");\r\n        }\r\n        opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(rawHeaders, options.headers);\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"i\" /* getCtxCallback */])(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(baseUrl.slice(index), path);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* Dictionary */]();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeOptions */])(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"j\" /* ODataQueryable */]));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spExtractODataId$1(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(new Item(spExtractODataId$1(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: JSON.stringify({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */]());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */]());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\r\n            }, properties),\r\n        });\r\n        return this.clone(Fields, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId$1(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId$1(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: JSON.stringify({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comments, _super);\r\n    /**\r\n     * Creates a new instance of the Comments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Comments(baseUrl, path) {\r\n        if (path === void 0) { path = \"comments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"Microsoft.SharePoint.Comments.comment\" },\r\n        }, info));\r\n        return this.clone(Comments, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments, \"DeleteAll\").postCore();\r\n    };\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Replies, _super);\r\n    /**\r\n     * Creates a new instance of the Comments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Replies(baseUrl, path) {\r\n        if (path === void 0) { path = \"replies\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"Microsoft.SharePoint.Comments.comment\" },\r\n        }, info));\r\n        return this.clone(Replies, null).postCore({ body: postBody }).then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(new Comment(Object(__WEBPACK_IMPORTED_MODULE_4____[\"c\" /* spExtractODataId */])(d)), d);\r\n        });\r\n    };\r\n    return Replies;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     */\r\n    Items.prototype.getAll = function (requestSize) {\r\n        var _this = this;\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": \"application/json;odata=nometadata\",\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.getKeys()\r\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$|^\\$expand$/.test(k.toLowerCase()); })\r\n            .reduce(function (i, k) {\r\n            i.query.add(k, _this.query.get(k));\r\n            return i;\r\n        }, items);\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function ItemVersions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    ItemVersion.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"i\" /* ODataParserBase */]));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"l\" /* TextParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"b\" /* BlobParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"c\" /* BufferParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new __WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"f\" /* JSONParser */](), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(new Item(spExtractODataId$1(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(spExtractODataId$1(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        var _this = this;\r\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\r\n        var candidateUrl = \"\";\r\n        if (typeof baseUrl === \"string\") {\r\n            candidateUrl = baseUrl;\r\n        }\r\n        else if (typeof baseUrl !== \"undefined\") {\r\n            candidateUrl = baseUrl.toUrl();\r\n        }\r\n        _this = _super.call(this, extractWebUrl(candidateUrl), path) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId$1(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (typeof html === \"undefined\" || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (collection[i].hasOwnProperty(\"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (collection[i].hasOwnProperty(\"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return JSON.stringify(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"h\" /* getAttrValueFromString */])(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\r\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (typeof props.properties !== \"undefined\") {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: JSON.stringify({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: JSON.stringify({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RegionalSettings, _super);\r\n    /**\r\n     * Creates a new instance of the RegionalSettings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\r\n     */\r\n    function RegionalSettings(baseUrl, path) {\r\n        if (path === void 0) { path = \"regionalsettings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(InstalledLanguages, _super);\r\n    function InstalledLanguages(baseUrl, path) {\r\n        if (path === void 0) { path = \"installedlanguages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZone, _super);\r\n    function TimeZone(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezone\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* dateAdd */])(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TimeZones, _super);\r\n    function TimeZones(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezones\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"l\" /* isUrlAbsolute */])(reqInfo.url) ? reqInfo.url : Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(absoluteRequestUrl, reqInfo.url);\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"m\" /* mergeHeaders */])(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.4\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(__WEBPACK_IMPORTED_MODULE_3__pnp_odata__[\"g\" /* ODataBatch */]));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId$1(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId$1(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId$1(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web, \"setStorageEntity\").postCore({\r\n            body: JSON.stringify({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId$1(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"p\" /* readBlobAsArrayBuffer */])(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ClientPeoplePickerQuery, _super);\r\n    /**\r\n     * Creates a new instance of the PeoplePickerQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this people picker query\r\n     */\r\n    function ClientPeoplePickerQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return JSON.stringify({\r\n            \"queryParams\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                \"__metadata\": { \"type\": \"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\" },\r\n            }, queryParams),\r\n        });\r\n    };\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(SocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function SocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/social.following\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return JSON.stringify({\r\n            \"actor\": Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])({\r\n                Id: null,\r\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(MySocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function MySocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"my\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId$1(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\n\n//# sourceMappingURL=sp.es5.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(10)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return TermStores; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermStore; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termgroup__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__terms__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__termsets__ = __webpack_require__(4);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"i\" /* property */])(\"TermStores\", \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id)));\r\n    };\r\n    return TermStores;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\nvar TermStore = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"b\" /* TermSets */], \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_5__termsets__[\"a\" /* TermSet */], \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(termId)).string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(termSetId));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_4__terms__[\"a\" /* Term */], \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */], \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"e\" /* objConstructor */].apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()].concat(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"g\" /* objectProperties */])(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetTerms\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new __WEBPACK_IMPORTED_MODULE_4__terms__[\"b\" /* Terms */](this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new __WEBPACK_IMPORTED_MODULE_3__termgroup__[\"a\" /* TermGroup */](this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\" /* extend */])(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"e\" /* objConstructor */].apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()].concat(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"g\" /* objectProperties */])(info))));\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"d\" /* method */])(\"GetChanges\", params, \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])(), Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"h\" /* opQuery */])([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termstores.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TermGroup; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termsets__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termstores__ = __webpack_require__(6);\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof __WEBPACK_IMPORTED_MODULE_4__termstores__[\"a\" /* TermStore */] ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_3__termsets__[\"b\" /* TermSets */], \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"j\" /* getGUID */])(); }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\" /* extend */])(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=termgroup.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Terms; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Term; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__labels__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termsets__ = __webpack_require__(4);\n\r\n\r\n\r\n\r\n\r\nvar Terms = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"q\" /* sanitizeGuid */])(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new __WEBPACK_IMPORTED_MODULE_3__labels__[\"b\" /* Labels */](this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\" /* TermSet */], \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\" /* TermSet */], \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(__WEBPACK_IMPORTED_MODULE_4__termsets__[\"b\" /* TermSets */], \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return Object(__WEBPACK_IMPORTED_MODULE_1__pnp_common__[\"g\" /* extend */])(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=terms.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Session; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__termstores__ = __webpack_require__(6);\n\r\n\r\n\r\n\r\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"k\" /* staticMethod */])(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        Object(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"f\" /* objectPath */])()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new __WEBPACK_IMPORTED_MODULE_3__termstores__[\"b\" /* TermStores */](this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        __WEBPACK_IMPORTED_MODULE_1__pnp_sp__[\"b\" /* sp */].setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new __WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"c\" /* ObjectPathBatch */](this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termstores__[\"a\" /* TermStore */], \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(__WEBPACK_IMPORTED_MODULE_3__termstores__[\"a\" /* TermStore */], \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(__WEBPACK_IMPORTED_MODULE_2__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=session.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CachingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CachingParserWrapper; });\n/* unused harmony export ProcessHttpClientResponseException */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return ODataParserBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ODataDefaultParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return TextParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BlobParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return JSONParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BufferParser; });\n/* unused harmony export LambdaParser */\n/* unused harmony export setResult */\n/* unused harmony export pipe */\n/* unused harmony export requestPipelineMethod */\n/* unused harmony export PipelineMethods */\n/* unused harmony export getDefaultPipeline */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AlreadyInBatchException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return Queryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return ODataQueryable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return ODataBatch; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__pnp_common__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_logging__ = __webpack_require__(3);\n/**\n@license\n * @pnp/odata v1.1.4 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n\n\n\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"f\" /* dateAdd */])(new Date(), \"second\", __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].defaultCachingTimeoutSeconds);\r\n        this.storeName = __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"c\" /* PnPClientStorage */]();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error without parsing the body if anyone needs it for debugging\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: e,\r\n                    level: 2 /* Warning */,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n        data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                            data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"k\" /* isFunc */])(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"g\" /* extend */])(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].log({\r\n                    data: __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"a\" /* __decorate */])([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        __WEBPACK_IMPORTED_MODULE_2__pnp_logging__[\"a\" /* Logger */].error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new __WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"a\" /* Dictionary */]();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeOptions */])(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"n\" /* mergeOptions */])(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"d\" /* RuntimeConfig */].globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"e\" /* combinePaths */])(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    Object(__WEBPACK_IMPORTED_MODULE_1_tslib__[\"b\" /* __extends */])(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"o\" /* objectDefinedNotNull */])(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = Object(__WEBPACK_IMPORTED_MODULE_0__pnp_common__[\"j\" /* getGUID */])(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n        this._resolveBatchDependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, requestId) {\r\n        var info = {\r\n            id: requestId,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._resolveBatchDependencies.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._dependencies)\r\n            .then(function () { return Promise.all(_this._dependencies); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._resolveBatchDependencies); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\n\n//# sourceMappingURL=odata.es5.js.map\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Labels; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Label; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pnp_common__ = __webpack_require__(1);\n\r\n\r\n\r\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(Object(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"i\" /* property */])(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = __WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"b\" /* MethodParams */].build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!Object(__WEBPACK_IMPORTED_MODULE_2__pnp_common__[\"r\" /* stringIsNullOrEmpty */])(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __extends */](Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(__WEBPACK_IMPORTED_MODULE_1__pnp_sp_clientsvc__[\"a\" /* ClientSvcQueryable */]));\r\n\r\n//# sourceMappingURL=labels.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__ = __webpack_require__(14);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"taxonomy\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Labels\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Label\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Session\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermGroup\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Terms\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Term\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermSets\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermSet\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermStores\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TermStore\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"StringMatchOption\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ChangedItemType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ChangedOperationType\", function() { return __WEBPACK_IMPORTED_MODULE_0__src_taxonomy__[\"b\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return taxonomy; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__session__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__labels__ = __webpack_require__(12);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__labels__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_1__labels__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_0__session__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__termgroup__ = __webpack_require__(7);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_2__termgroup__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__terms__ = __webpack_require__(8);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_3__terms__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_3__terms__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__termsets__ = __webpack_require__(4);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_4__termsets__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_4__termsets__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__termstores__ = __webpack_require__(6);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_5__termstores__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_5__termstores__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__types__ = __webpack_require__(16);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_6__types__[\"c\"]; });\n\r\n// export an existing session instance\r\nvar taxonomy = new __WEBPACK_IMPORTED_MODULE_0__session__[\"a\" /* Session */]();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=taxonomy.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n//----------------------------------------------------------------------\r\n// AdalJS v1.0.17\r\n// @preserve Copyright (c) Microsoft Open Technologies, Inc.\r\n// All Rights Reserved\r\n// Apache License 2.0\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//id\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//----------------------------------------------------------------------\r\n\r\nvar AuthenticationContext = (function () {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Configuration options for Authentication Context.\r\n     * @class config\r\n     *  @property {string} tenant - Your target tenant.\r\n     *  @property {string} clientId - Client ID assigned to your app by Azure Active Directory.\r\n     *  @property {string} redirectUri - Endpoint at which you expect to receive tokens.Defaults to `window.location.href`.\r\n     *  @property {string} instance - Azure Active Directory Instance.Defaults to `https://login.microsoftonline.com/`.\r\n     *  @property {Array} endpoints - Collection of {Endpoint-ResourceId} used for automatically attaching tokens in webApi calls.\r\n     *  @property {Boolean} popUp - Set this to true to enable login in a popup winodow instead of a full redirect.Defaults to `false`.\r\n     *  @property {string} localLoginUrl - Set this to redirect the user to a custom login page.\r\n     *  @property {function} displayCall - User defined function of handling the navigation to Azure AD authorization endpoint in case of login. Defaults to 'null'.\r\n     *  @property {string} postLogoutRedirectUri - Redirects the user to postLogoutRedirectUri after logout. Defaults is 'redirectUri'.\r\n     *  @property {string} cacheLocation - Sets browser storage to either 'localStorage' or sessionStorage'. Defaults to 'sessionStorage'.\r\n     *  @property {Array.<string>} anonymousEndpoints Array of keywords or URI's. Adal will not attach a token to outgoing requests that have these keywords or uri. Defaults to 'null'.\r\n     *  @property {number} expireOffsetSeconds If the cached token is about to be expired in the expireOffsetSeconds (in seconds), Adal will renew the token instead of using the cached token. Defaults to 300 seconds.\r\n     *  @property {string} correlationId Unique identifier used to map the request with the response. Defaults to RFC4122 version 4 guid (128 bits).\r\n     *  @property {number} loadFrameTimeout The number of milliseconds of inactivity before a token renewal response from AAD should be considered timed out.\r\n     */\r\n\r\n    /**\r\n     * Creates a new AuthenticationContext object.\r\n     * @constructor\r\n     * @param {config}  config               Configuration options for AuthenticationContext\r\n     */\r\n\r\n    AuthenticationContext = function (config) {\r\n        /**\r\n         * Enum for request type\r\n         * @enum {string}\r\n         */\r\n        this.REQUEST_TYPE = {\r\n            LOGIN: 'LOGIN',\r\n            RENEW_TOKEN: 'RENEW_TOKEN',\r\n            UNKNOWN: 'UNKNOWN'\r\n        };\r\n\r\n        this.RESPONSE_TYPE = {\r\n            ID_TOKEN_TOKEN: 'id_token token',\r\n            TOKEN: 'token'\r\n        };\r\n\r\n        /**\r\n         * Enum for storage constants\r\n         * @enum {string}\r\n         */\r\n        this.CONSTANTS = {\r\n            ACCESS_TOKEN: 'access_token',\r\n            EXPIRES_IN: 'expires_in',\r\n            ID_TOKEN: 'id_token',\r\n            ERROR_DESCRIPTION: 'error_description',\r\n            SESSION_STATE: 'session_state',\r\n            ERROR: 'error',\r\n            STORAGE: {\r\n                TOKEN_KEYS: 'adal.token.keys',\r\n                ACCESS_TOKEN_KEY: 'adal.access.token.key',\r\n                EXPIRATION_KEY: 'adal.expiration.key',\r\n                STATE_LOGIN: 'adal.state.login',\r\n                STATE_RENEW: 'adal.state.renew',\r\n                NONCE_IDTOKEN: 'adal.nonce.idtoken',\r\n                SESSION_STATE: 'adal.session.state',\r\n                USERNAME: 'adal.username',\r\n                IDTOKEN: 'adal.idtoken',\r\n                ERROR: 'adal.error',\r\n                ERROR_DESCRIPTION: 'adal.error.description',\r\n                LOGIN_REQUEST: 'adal.login.request',\r\n                LOGIN_ERROR: 'adal.login.error',\r\n                RENEW_STATUS: 'adal.token.renew.status',\r\n                ANGULAR_LOGIN_REQUEST: 'adal.angular.login.request'\r\n            },\r\n            RESOURCE_DELIMETER: '|',\r\n            CACHE_DELIMETER: '||',\r\n            LOADFRAME_TIMEOUT: 6000,\r\n            TOKEN_RENEW_STATUS_CANCELED: 'Canceled',\r\n            TOKEN_RENEW_STATUS_COMPLETED: 'Completed',\r\n            TOKEN_RENEW_STATUS_IN_PROGRESS: 'In Progress',\r\n            LOGGING_LEVEL: {\r\n                ERROR: 0,\r\n                WARN: 1,\r\n                INFO: 2,\r\n                VERBOSE: 3\r\n            },\r\n            LEVEL_STRING_MAP: {\r\n                0: 'ERROR:',\r\n                1: 'WARNING:',\r\n                2: 'INFO:',\r\n                3: 'VERBOSE:'\r\n            },\r\n            POPUP_WIDTH: 483,\r\n            POPUP_HEIGHT: 600\r\n        };\r\n\r\n        if (AuthenticationContext.prototype._singletonInstance) {\r\n            return AuthenticationContext.prototype._singletonInstance;\r\n        }\r\n        AuthenticationContext.prototype._singletonInstance = this;\r\n\r\n        // public\r\n        this.instance = 'https://login.microsoftonline.com/';\r\n        this.config = {};\r\n        this.callback = null;\r\n        this.popUp = false;\r\n        this.isAngular = false;\r\n\r\n        // private\r\n        this._user = null;\r\n        this._activeRenewals = {};\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n        this._renewStates = [];\r\n        this._callBackMappedToRenewStates = {};\r\n        this._callBacksMappedToRenewStates = {};\r\n        this._openedWindows = [];\r\n        this._requestType = this.REQUEST_TYPE.LOGIN;\r\n        window._adalInstance = this;\r\n\r\n        // validate before constructor assignments\r\n        if (config.displayCall && typeof config.displayCall !== 'function') {\r\n            throw new Error('displayCall is not a function');\r\n        }\r\n\r\n        if (!config.clientId) {\r\n            throw new Error('clientId is required');\r\n        }\r\n\r\n        this.config = this._cloneConfig(config);\r\n\r\n        if (this.config.navigateToLoginRequestUrl === undefined)\r\n            this.config.navigateToLoginRequestUrl = true;\r\n\r\n        if (this.config.popUp)\r\n            this.popUp = true;\r\n\r\n        if (this.config.callback && typeof this.config.callback === 'function')\r\n            this.callback = this.config.callback;\r\n\r\n        if (this.config.instance) {\r\n            this.instance = this.config.instance;\r\n        }\r\n\r\n        // App can request idtoken for itself using clientid as resource\r\n        if (!this.config.loginResource) {\r\n            this.config.loginResource = this.config.clientId;\r\n        }\r\n\r\n        // redirect and logout_redirect are set to current location by default\r\n        if (!this.config.redirectUri) {\r\n            // strip off query parameters or hashes from the redirect uri as AAD does not allow those.\r\n            this.config.redirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.postLogoutRedirectUri) {\r\n            // strip off query parameters or hashes from the post logout redirect uri as AAD does not allow those.\r\n            this.config.postLogoutRedirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.anonymousEndpoints) {\r\n            this.config.anonymousEndpoints = [];\r\n        }\r\n\r\n        if (this.config.isAngular) {\r\n            this.isAngular = this.config.isAngular;\r\n        }\r\n\r\n        if (this.config.loadFrameTimeout) {\r\n            this.CONSTANTS.LOADFRAME_TIMEOUT = this.config.loadFrameTimeout;\r\n        }\r\n    };\r\n\r\n    if (typeof window !== 'undefined') {\r\n        window.Logging = {\r\n            piiLoggingEnabled: false,\r\n            level: 0,\r\n            log: function (message) { }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initiates the login process by redirecting the user to Azure AD authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.login = function () {\r\n        if (this._loginInProgress) {\r\n            this.info(\"Login in progress\");\r\n            return;\r\n        }\r\n\r\n        this._loginInProgress = true;\r\n\r\n        // Token is not present and user needs to login\r\n        var expectedState = this._guid();\r\n        this.config.state = expectedState;\r\n        this._idTokenNonce = this._guid();\r\n        var loginStartPage = this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);\r\n\r\n        if (!loginStartPage || loginStartPage === \"\") {\r\n            loginStartPage = window.location.href;\r\n        }\r\n        else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, \"\")\r\n        }\r\n\r\n        this.verbose('Expected state: ' + expectedState + ' startPage:' + loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, expectedState, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        var urlNavigate = this._getNavigateUrl('id_token', null) + '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n\r\n        if (this.config.displayCall) {\r\n            // User defined way of handling the navigation\r\n            this.config.displayCall(urlNavigate);\r\n        }\r\n        else if (this.popUp) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');// so requestInfo does not match redirect case\r\n            this._renewStates.push(expectedState);\r\n            this.registerCallback(expectedState, this.config.clientId, this.callback);\r\n            this._loginPopup(urlNavigate);\r\n        }\r\n        else {\r\n            this.promptUser(urlNavigate);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Configures popup window for login.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n            * adding winLeft and winTop to account for dual monitor\r\n            * using screenLeft and screenTop for IE8 and earlier\r\n            */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n            * window.innerWidth displays browser window's height and width excluding toolbars\r\n            * using document.documentElement.clientWidth for IE8 and earlier\r\n            */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n            var popupWindow = window.open(urlNavigate, title, 'width=' + popUpWidth + ', height=' + popUpHeight + ', top=' + top + ', left=' + left);\r\n\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.warn('Error opening popup, ' + e.message);\r\n            this._loginInProgress = false;\r\n            this._acquireTokenInProgress = false;\r\n            return null;\r\n        }\r\n    }\r\n\r\n    AuthenticationContext.prototype._handlePopupError = function (loginCallback, resource, error, errorDesc, loginError) {\r\n        this.warn(errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, error);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, loginError);\r\n\r\n        if (resource && this._activeRenewals[resource]) {\r\n            this._activeRenewals[resource] = null;\r\n        }\r\n\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n\r\n        if (loginCallback) {\r\n            loginCallback(errorDesc, null, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After authorization, the user will be sent to your specified redirect_uri with the user's bearer token\r\n     * attached to the URI fragment as an id_token field. It closes popup window after redirection.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loginPopup = function (urlNavigate, resource, callback) {\r\n        var popupWindow = this._openPopup(urlNavigate, \"login\", this.CONSTANTS.POPUP_WIDTH, this.CONSTANTS.POPUP_HEIGHT);\r\n        var loginCallback = callback || this.callback;\r\n\r\n        if (popupWindow == null) {\r\n            var error = 'Error opening popup';\r\n            var errorDesc = 'Popup Window is null. This can happen if you are using IE';\r\n            this._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n            return;\r\n        }\r\n\r\n        this._openedWindows.push(popupWindow);\r\n\r\n        if (this.config.redirectUri.indexOf('#') != -1) {\r\n            var registeredRedirectUri = this.config.redirectUri.split(\"#\")[0];\r\n        }\r\n\r\n        else {\r\n            var registeredRedirectUri = this.config.redirectUri;\r\n        }\r\n\r\n        var that = this;\r\n\r\n        var pollTimer = window.setInterval(function () {\r\n            if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                var error = 'Popup Window closed';\r\n                var errorDesc = 'Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge'\r\n\r\n                if (that.isAngular) {\r\n                    that._broadcast('adal:popUpClosed', errorDesc + that.CONSTANTS.RESOURCE_DELIMETER + error);\r\n                }\r\n\r\n                that._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n                window.clearInterval(pollTimer);\r\n                return;\r\n            }\r\n            try {\r\n                var popUpWindowLocation = popupWindow.location;\r\n                if (encodeURI(popUpWindowLocation.href).indexOf(encodeURI(registeredRedirectUri)) != -1) {\r\n                    if (that.isAngular) {\r\n                        that._broadcast('adal:popUpHashChanged', popUpWindowLocation.hash);\r\n                    }\r\n                    else {\r\n                        that.handleWindowCallback(popUpWindowLocation.hash);\r\n                    }\r\n\r\n                    window.clearInterval(pollTimer);\r\n                    that._loginInProgress = false;\r\n                    that._acquireTokenInProgress = false;\r\n                    that.info(\"Closing popup window\");\r\n                    that._openedWindows = [];\r\n                    popupWindow.close();\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }, 1);\r\n    };\r\n\r\n    AuthenticationContext.prototype._broadcast = function (eventName, data) {\r\n        // Custom Event is not supported in IE, below IIFE will polyfill the CustomEvent() constructor functionality in Internet Explorer 9 and higher\r\n        (function () {\r\n\r\n            if (typeof window.CustomEvent === \"function\") {\r\n                return false;\r\n            }\r\n\r\n            function CustomEvent(event, params) {\r\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n                var evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n\r\n    AuthenticationContext.prototype.loginInProgress = function () {\r\n        return this._loginInProgress;\r\n    };\r\n\r\n    /**\r\n     * Checks for the resource in the cache. By default, cache location is Session Storage\r\n     * @ignore\r\n     * @returns {Boolean} 'true' if login is in progress, else returns 'false'.\r\n     */\r\n    AuthenticationContext.prototype._hasResource = function (key) {\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n        return keys && !this._isEmpty(keys) && (keys.indexOf(key + this.CONSTANTS.RESOURCE_DELIMETER) > -1);\r\n    };\r\n\r\n    /**\r\n     * Gets token for the specified resource from the cache.\r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @returns {string} token if if it exists and not expired, otherwise null.\r\n     */\r\n    AuthenticationContext.prototype.getCachedToken = function (resource) {\r\n        if (!this._hasResource(resource)) {\r\n            return null;\r\n        }\r\n\r\n        var token = this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource);\r\n        var expiry = this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource);\r\n\r\n        // If expiration is within offset, it will force renew\r\n        var offset = this.config.expireOffsetSeconds || 300;\r\n\r\n        if (expiry && (expiry > this._now() + offset)) {\r\n            return token;\r\n        } else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n    * User information from idtoken.\r\n    *  @class User\r\n    *  @property {string} userName - username assigned from upn or email.\r\n    *  @property {object} profile - properties parsed from idtoken.\r\n    */\r\n\r\n    /**\r\n     * If user object exists, returns it. Else creates a new user object by decoding id_token from the cache.\r\n     * @returns {User} user object\r\n     */\r\n    AuthenticationContext.prototype.getCachedUser = function () {\r\n        if (this._user) {\r\n            return this._user;\r\n        }\r\n\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n        this._user = this._createUser(idtoken);\r\n        return this._user;\r\n    };\r\n\r\n    /**\r\n     * Adds the passed callback to the array of callbacks for the specified resource and puts the array on the window object. \r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @param {string}   expectedState A unique identifier (guid).\r\n     * @param {tokenCallback} callback - The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.registerCallback = function (expectedState, resource, callback) {\r\n        this._activeRenewals[resource] = expectedState;\r\n\r\n        if (!this._callBacksMappedToRenewStates[expectedState]) {\r\n            this._callBacksMappedToRenewStates[expectedState] = [];\r\n        }\r\n\r\n        var self = this;\r\n        this._callBacksMappedToRenewStates[expectedState].push(callback);\r\n\r\n        if (!this._callBackMappedToRenewStates[expectedState]) {\r\n            this._callBackMappedToRenewStates[expectedState] = function (errorDesc, token, error, tokenType) {\r\n                self._activeRenewals[resource] = null;\r\n\r\n                for (var i = 0; i < self._callBacksMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        self._callBacksMappedToRenewStates[expectedState][i](errorDesc, token, error, tokenType);\r\n                    }\r\n                    catch (error) {\r\n                        self.warn(error);\r\n                    }\r\n                }\r\n\r\n                self._callBacksMappedToRenewStates[expectedState] = null;\r\n                self._callBackMappedToRenewStates[expectedState] = null;\r\n            };\r\n        }\r\n    };\r\n\r\n    // var errorResponse = {error:'', error_description:''};\r\n    // var token = 'string token';\r\n    // callback(errorResponse, token)\r\n    // with callback\r\n    /**\r\n     * Acquires access token with hidden iframe\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewToken = function (resource, callback, responseType) {\r\n        // use iframe to try to renew token\r\n        // use given resource to create new authz url\r\n        this.info('renewToken is called for resource:' + resource);\r\n        var frameHandle = this._addAdalFrame('adalRenewFrame' + resource);\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        responseType = responseType || 'token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n\r\n        if (responseType === this.RESPONSE_TYPE.ID_TOKEN_TOKEN) {\r\n            this._idTokenNonce = this._guid();\r\n            this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n            urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        }\r\n\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalRenewFrame' + resource, resource);\r\n\r\n    };\r\n\r\n    /**\r\n     * Renews idtoken for app's own backend when resource is clientId and calls the callback with token/error\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewIdToken = function (callback, responseType) {\r\n        // use iframe to try to renew token\r\n        this.info('renewIdToken is called');\r\n        var frameHandle = this._addAdalFrame('adalIdTokenFrame');\r\n        var expectedState = this._guid() + '|' + this.config.clientId;\r\n        this._idTokenNonce = this._guid();\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew Idtoken Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        var resource = responseType === null || typeof (responseType) === \"undefined\" ? null : this.config.clientId;\r\n        var responseType = responseType || 'id_token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        this.registerCallback(expectedState, this.config.clientId, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalIdTokenFrame', this.config.clientId);\r\n    };\r\n\r\n    /**\r\n     * Checks if the authorization endpoint URL contains query string parameters\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlContainsQueryStringParameter = function (name, url) {\r\n        // regex to detect pattern of a ? or & followed by the name parameter and an equals character\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=\");\r\n        return regex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Removes the query string parameter from the authorization endpoint URL if it exists\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlRemoveQueryStringParameter = function (url, name) {\r\n        // we remove &name=value, name=value& and name=value\r\n        // &name=value\r\n        var regex = new RegExp('(\\\\&' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        // name=value&\r\n        regex = new RegExp('(' + name + '=)[^\\&]+&');\r\n        url = url.replace(regex, '');\r\n        // name=value\r\n        regex = new RegExp('(' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        return url;\r\n    }\r\n\r\n    // Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left\r\n    // registered when network errors occur and subsequent token requests for same resource are registered to the pending request\r\n    /**\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrameTimeout = function (urlNavigation, frameName, resource) {\r\n        //set iframe session to pending\r\n        this.verbose('Set loading state to pending for: ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS);\r\n        this._loadFrame(urlNavigation, frameName);\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self._getItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource) === self.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS) {\r\n                // fail the iframe session if it's in pending state\r\n                self.verbose('Loading frame has timed out after: ' + (self.CONSTANTS.LOADFRAME_TIMEOUT / 1000) + ' seconds for resource ' + resource);\r\n                var expectedState = self._activeRenewals[resource];\r\n\r\n                if (expectedState && self._callBackMappedToRenewStates[expectedState]) {\r\n                    self._callBackMappedToRenewStates[expectedState]('Token renewal operation failed due to timeout', null, 'Token Renewal Failed');\r\n                }\r\n\r\n                self._saveItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource, self.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED);\r\n            }\r\n        }, self.CONSTANTS.LOADFRAME_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrame = function (urlNavigate, frameName) {\r\n        // This trick overcomes iframe navigation in IE\r\n        // IE does not load the page consistently in iframe\r\n        var self = this;\r\n        self.info('LoadFrame: ' + frameName);\r\n        var frameCheck = frameName;\r\n        setTimeout(function () {\r\n            var frameHandle = self._addAdalFrame(frameCheck);\r\n\r\n            if (frameHandle.src === '' || frameHandle.src === 'about:blank') {\r\n                frameHandle.src = urlNavigate;\r\n                self._loadFrame(urlNavigate, frameCheck);\r\n            }\r\n\r\n        }, 500);\r\n    };\r\n\r\n    /**\r\n     * @callback tokenCallback\r\n     * @param {string} error_description error description returned from AAD if token request fails.\r\n     * @param {string} token token returned from AAD if token request is successful.\r\n     * @param {string} error error message returned from AAD if token request fails.\r\n     */\r\n\r\n    /**\r\n     * Acquires token from the cache if it is not expired. Otherwise sends request to AAD to obtain a new token.\r\n     * @param {string}   resource  ResourceUri identifying the target resource\r\n     * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.acquireToken = function (resource, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var token = this.getCachedToken(resource);\r\n\r\n        if (token) {\r\n            this.info('Token is already in cache for resource:' + resource);\r\n            callback(null, token, null);\r\n            return;\r\n        }\r\n\r\n        if (!this._user && !(this.config.extraQueryParameter && this.config.extraQueryParameter.indexOf('login_hint') !== -1)) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        // renew attempt with iframe\r\n        // Already renewing for this resource, callback when we get the token.\r\n        if (this._activeRenewals[resource]) {\r\n            // Active renewals contains the state for each renewal.\r\n            this.registerCallback(this._activeRenewals[resource], resource, callback);\r\n        }\r\n        else {\r\n            this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n            if (resource === this.config.clientId) {\r\n                // App uses idtoken to send to api endpoints\r\n                // Default resource is tracked as clientid to store this token\r\n                if (this._user) {\r\n                    this.verbose('renewing idtoken');\r\n                    this._renewIdToken(callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewIdToken(callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            } else {\r\n                if (this._user) {\r\n                    this.verbose('renewing access_token');\r\n                    this._renewToken(resource, callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewToken(resource, callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n  * Acquires token (interactive flow using a popUp window) by sending request to AAD to obtain a new token.\r\n  * @param {string}   resource  ResourceUri identifying the target resource\r\n  * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n  * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n  */\r\n    AuthenticationContext.prototype.acquireTokenPopup = function (resource, extraQueryParameters, claims, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this._renewStates.push(expectedState);\r\n        this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this._loginPopup(urlNavigate, resource, callback);\r\n\r\n    };\r\n\r\n    /**\r\n      * Acquires token (interactive flow using a redirect) by sending request to AAD to obtain a new token. In this case the callback passed in the Authentication\r\n      * request constructor will be called.\r\n      * @param {string}   resource  ResourceUri identifying the target resource\r\n      * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n      */\r\n    AuthenticationContext.prototype.acquireTokenRedirect = function (resource, extraQueryParameters, claims) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var callback = this.callback;\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, window.location.href);\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, expectedState, true);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n    /**\r\n     * Redirects the browser to Azure AD authorization endpoint.\r\n     * @param {string}   urlNavigate  Url of the authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.promptUser = function (urlNavigate) {\r\n        if (urlNavigate) {\r\n            this.infoPii('Navigate to:' + urlNavigate);\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            this.info('Navigate url is empty');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears cache items.\r\n     */\r\n    AuthenticationContext.prototype.clearCache = function () {\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._renewStates = [];\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n\r\n        if (!this._isEmpty(keys)) {\r\n            keys = keys.split(this.CONSTANTS.RESOURCE_DELIMETER);\r\n            for (var i = 0; i < keys.length && keys[i] !== \"\"; i++) {\r\n                this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + keys[i], '');\r\n                this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + keys[i], 0);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, '');\r\n    };\r\n\r\n    /**\r\n     * Clears cache items for a given resource.\r\n     * @param {string}  resource a URI that identifies the resource.\r\n     */\r\n    AuthenticationContext.prototype.clearCacheForResource = function (resource) {\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        if (this._hasResource(resource)) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Redirects user to logout endpoint.\r\n     * After logout, it will redirect to postLogoutRedirectUri if added as a property on the config object.\r\n     */\r\n    AuthenticationContext.prototype.logOut = function () {\r\n        this.clearCache();\r\n        this._user = null;\r\n        var urlNavigate;\r\n\r\n        if (this.config.logOutUri) {\r\n            urlNavigate = this.config.logOutUri;\r\n        } else {\r\n            var tenant = 'common';\r\n            var logout = '';\r\n\r\n            if (this.config.tenant) {\r\n                tenant = this.config.tenant;\r\n            }\r\n\r\n            if (this.config.postLogoutRedirectUri) {\r\n                logout = 'post_logout_redirect_uri=' + encodeURIComponent(this.config.postLogoutRedirectUri);\r\n            }\r\n\r\n            urlNavigate = this.instance + tenant + '/oauth2/logout?' + logout;\r\n        }\r\n\r\n        this.infoPii('Logout navigate to: ' + urlNavigate);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n\r\n    AuthenticationContext.prototype._isEmpty = function (str) {\r\n        return (typeof str === 'undefined' || !str || 0 === str.length);\r\n    };\r\n\r\n    /**\r\n     * @callback userCallback\r\n     * @param {string} error error message if user info is not available.\r\n     * @param {User} user user object retrieved from the cache.\r\n     */\r\n\r\n    /**\r\n     * Calls the passed in callback with the user object or error message related to the user.\r\n     * @param {userCallback} callback - The callback provided by the caller. It will be called with user or error.\r\n     */\r\n    AuthenticationContext.prototype.getUser = function (callback) {\r\n        // IDToken is first call\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('callback is not a function');\r\n        }\r\n\r\n        // user in memory\r\n        if (this._user) {\r\n            callback(null, this._user);\r\n            return;\r\n        }\r\n\r\n        // frame is used to get idtoken\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n\r\n        if (!this._isEmpty(idtoken)) {\r\n            this.info('User exists in cache: ');\r\n            this._user = this._createUser(idtoken);\r\n            callback(null, this._user);\r\n        } else {\r\n            this.warn('User information is not available');\r\n            callback('User information is not available', null);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time.\r\n     * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addHintParameters = function (urlNavigate) {\r\n        //If you don�t use prompt=none, then if the session does not exist, there will be a failure.\r\n        //If sid is sent alongside domain or login hints, there will be a failure since request is ambiguous.\r\n        //If sid is sent with a prompt value other than none or attempt_none, there will be a failure since the request is ambiguous.\r\n\r\n        if (this._user && this._user.profile) {\r\n            if (this._user.profile.sid && urlNavigate.indexOf('&prompt=none') !== -1) {\r\n                // don't add sid twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"sid\", urlNavigate)) {\r\n                    // add sid\r\n                    urlNavigate += '&sid=' + encodeURIComponent(this._user.profile.sid);\r\n                }\r\n            }\r\n            else if (this._user.profile.upn) {\r\n                // don't add login_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"login_hint\", urlNavigate)) {\r\n                    // add login_hint\r\n                    urlNavigate += '&login_hint=' + encodeURIComponent(this._user.profile.upn);\r\n                }\r\n                // don't add domain_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"domain_hint\", urlNavigate) && this._user.profile.upn.indexOf('@') > -1) {\r\n                    var parts = this._user.profile.upn.split('@');\r\n                    // local part can include @ in quotes. Sending last part handles that.\r\n                    urlNavigate += '&domain_hint=' + encodeURIComponent(parts[parts.length - 1]);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return urlNavigate;\r\n    }\r\n\r\n    /**\r\n     * Creates a user object by decoding the id_token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._createUser = function (idToken) {\r\n        var user = null;\r\n        var parsedJson = this._extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === this.config.clientId.toLowerCase()) {\r\n\r\n                user = {\r\n                    userName: '',\r\n                    profile: parsedJson\r\n                };\r\n\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.userName = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.userName = parsedJson.email;\r\n                }\r\n            } else {\r\n                this.warn('IdToken has invalid aud field');\r\n            }\r\n\r\n        }\r\n\r\n        return user;\r\n    };\r\n\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHash = function (hash) {\r\n        if (hash.indexOf('#/') > -1) {\r\n            hash = hash.substring(hash.indexOf('#/') + 2);\r\n        } else if (hash.indexOf('#') > -1) {\r\n            hash = hash.substring(1);\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    /**\r\n     * Checks if the URL fragment contains access token, id token or error_description.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {Boolean} true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    AuthenticationContext.prototype.isCallback = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        return (\r\n            parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets login error\r\n     * @returns {string} error message related to login.\r\n     */\r\n    AuthenticationContext.prototype.getLoginError = function () {\r\n        return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR);\r\n    };\r\n\r\n    /**\r\n     * Request info object created from the response received from AAD.\r\n     *  @class RequestInfo\r\n     *  @property {object} parameters - object comprising of fields such as id_token/error, session_state, state, e.t.c.\r\n     *  @property {REQUEST_TYPE} requestType - either LOGIN, RENEW_TOKEN or UNKNOWN.\r\n     *  @property {boolean} stateMatch - true if state is valid, false otherwise.\r\n     *  @property {string} stateResponse - unique guid used to match the response with the request.\r\n     *  @property {boolean} valid - true if requestType contains id_token, access_token or error, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Creates a requestInfo object from the URL fragment and returns it.\r\n     * @returns {RequestInfo} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     */\r\n    AuthenticationContext.prototype.getRequestInfo = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        var requestInfo = {\r\n            valid: false,\r\n            parameters: {},\r\n            stateMatch: false,\r\n            stateResponse: '',\r\n            requestType: this.REQUEST_TYPE.UNKNOWN,\r\n        };\r\n\r\n        if (parameters) {\r\n            requestInfo.parameters = parameters;\r\n            if (parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n\r\n                requestInfo.valid = true;\r\n\r\n                // which call\r\n                var stateResponse = '';\r\n                if (parameters.hasOwnProperty('state')) {\r\n                    this.verbose('State: ' + parameters.state);\r\n                    stateResponse = parameters.state;\r\n                } else {\r\n                    this.warn('No state returned');\r\n                    return requestInfo;\r\n                }\r\n\r\n                requestInfo.stateResponse = stateResponse;\r\n\r\n                // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n                // incoming callback needs to be looked up to find the request type\r\n                if (this._matchState(requestInfo)) { // loginRedirect or acquireTokenRedirect\r\n                    return requestInfo;\r\n                }\r\n\r\n                // external api requests may have many renewtoken requests for different resource\r\n                if (!requestInfo.stateMatch && window.parent) {\r\n                    requestInfo.requestType = this._requestType;\r\n                    var statesInParentContext = this._renewStates;\r\n                    for (var i = 0; i < statesInParentContext.length; i++) {\r\n                        if (statesInParentContext[i] === requestInfo.stateResponse) {\r\n                            requestInfo.stateMatch = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return requestInfo;\r\n    };\r\n\r\n    /**\r\n    * Matches nonce from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchNonce = function (user) {\r\n        var requestNonce = this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);\r\n\r\n        if (requestNonce) {\r\n            requestNonce = requestNonce.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < requestNonce.length; i++) {\r\n                if (requestNonce[i] === user.profile.nonce) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n    * Matches state from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchState = function (requestInfo) {\r\n        var loginStates = this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);\r\n\r\n        if (loginStates) {\r\n            loginStates = loginStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < loginStates.length; i++) {\r\n                if (loginStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.LOGIN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        var acquireTokenStates = this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);\r\n\r\n        if (acquireTokenStates) {\r\n            acquireTokenStates = acquireTokenStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < acquireTokenStates.length; i++) {\r\n                if (acquireTokenStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Extracts resource value from state.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getResourceFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf('|');\r\n\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    /**\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.\r\n     */\r\n    AuthenticationContext.prototype.saveTokenFromHash = function (requestInfo) {\r\n        this.info('State status:' + requestInfo.stateMatch + '; Request type:' + requestInfo.requestType);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        var resource = this._getResourceFromState(requestInfo.stateResponse);\r\n\r\n        // Record error\r\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)) {\r\n            this.infoPii('Error :' + requestInfo.parameters.error + '; Error description:' + requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR, requestInfo.parameters.error);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n\r\n            if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                this._loginInProgress = false;\r\n                this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, requestInfo.parameters.error_description);\r\n            }\r\n        } else {\r\n            // It must verify the state from redirect\r\n            if (requestInfo.stateMatch) {\r\n                // record tokens to storage if exists\r\n                this.info('State is right');\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)) {\r\n                    this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, requestInfo.parameters[this.CONSTANTS.SESSION_STATE]);\r\n                }\r\n\r\n                var keys;\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)) {\r\n                    this.info('Fragment has access token');\r\n\r\n                    if (!this._hasResource(resource)) {\r\n                        keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                    }\r\n\r\n                    // save token with related resource\r\n                    this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN]);\r\n                    this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._expiresIn(requestInfo.parameters[this.CONSTANTS.EXPIRES_IN]));\r\n                }\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n                    this.info('Fragment has id token');\r\n                    this._loginInProgress = false;\r\n                    this._user = this._createUser(requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    if (this._user && this._user.profile) {\r\n                        if (!this._matchNonce(this._user)) {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Nonce received: ' + this._user.profile.nonce + ' is not same as requested: ' +\r\n                                this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN));\r\n                            this._user = null;\r\n                        } else {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n\r\n                            // Save idtoken as access token for app itself\r\n                            resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\r\n\r\n                            if (!this._hasResource(resource)) {\r\n                                keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                            }\r\n\r\n                            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);\r\n                        }\r\n                    }\r\n                    else {\r\n                        requestInfo.parameters['error'] = 'invalid id_token';\r\n                        requestInfo.parameters['error_description'] = 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN];\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'invalid id_token');\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    }\r\n                }\r\n            } else {\r\n                requestInfo.parameters['error'] = 'Invalid_state';\r\n                requestInfo.parameters['error_description'] = 'Invalid_state. state: ' + requestInfo.stateResponse;\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Invalid_state');\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid_state. state: ' + requestInfo.stateResponse);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED);\r\n    };\r\n\r\n    /**\r\n     * Gets resource for given endpoint if mapping is provided with config.\r\n     * @param {string} endpoint  -  The URI for which the resource Id is requested.\r\n     * @returns {string} resource for this API endpoint.\r\n     */\r\n    AuthenticationContext.prototype.getResourceForEndpoint = function (endpoint) {\r\n\r\n        // if user specified list of anonymous endpoints, no need to send token to these endpoints, return null.\r\n        if (this.config && this.config.anonymousEndpoints) {\r\n            for (var i = 0; i < this.config.anonymousEndpoints.length; i++) {\r\n                if (endpoint.indexOf(this.config.anonymousEndpoints[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config && this.config.endpoints) {\r\n            for (var configEndpoint in this.config.endpoints) {\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(configEndpoint) > -1) {\r\n                    return this.config.endpoints[configEndpoint];\r\n                }\r\n            }\r\n        }\r\n\r\n        // default resource will be clientid if nothing specified\r\n        // App will use idtoken for calls to itself\r\n        // check if it's staring from http or https, needs to match with app host\r\n        if (endpoint.indexOf('http://') > -1 || endpoint.indexOf('https://') > -1) {\r\n            if (this._getHostFromUri(endpoint) === this._getHostFromUri(this.config.redirectUri)) {\r\n                return this.config.loginResource;\r\n            }\r\n        }\r\n        else {\r\n            // in angular level, the url for $http interceptor call could be relative url,\r\n            // if it's relative call, we'll treat it as app backend call.            \r\n            return this.config.loginResource;\r\n        }\r\n\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Strips the protocol part of the URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHostFromUri = function (uri) {\r\n        // remove http:// or https:// from uri\r\n        var extractedUri = String(uri).replace(/^(https?:)\\/\\//, '');\r\n        extractedUri = extractedUri.split('/')[0];\r\n        return extractedUri;\r\n    };\r\n\r\n    /**\r\n     * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    AuthenticationContext.prototype.handleWindowCallback = function (hash) {\r\n        // This is for regular javascript usage for redirect handling\r\n        // need to make sure this is for callback\r\n        if (hash == null) {\r\n            hash = window.location.hash;\r\n        }\r\n\r\n        if (this.isCallback(hash)) {\r\n            var self = null;\r\n            var isPopup = false;\r\n\r\n            if (this._openedWindows.length > 0 && this._openedWindows[this._openedWindows.length - 1].opener\r\n                && this._openedWindows[this._openedWindows.length - 1].opener._adalInstance) {\r\n                self = this._openedWindows[this._openedWindows.length - 1].opener._adalInstance;\r\n                isPopup = true;\r\n            }\r\n            else if (window.parent && window.parent._adalInstance) {\r\n                self = window.parent._adalInstance;\r\n            }\r\n\r\n            var requestInfo = self.getRequestInfo(hash);\r\n            var token, tokenReceivedCallback, tokenType = null;\r\n\r\n            if (isPopup || window.parent !== window) {\r\n                tokenReceivedCallback = self._callBackMappedToRenewStates[requestInfo.stateResponse];\r\n            }\r\n            else {\r\n                tokenReceivedCallback = self.callback;\r\n            }\r\n\r\n            self.info(\"Returned from redirect url\");\r\n            self.saveTokenFromHash(requestInfo);\r\n\r\n            if ((requestInfo.requestType === this.REQUEST_TYPE.RENEW_TOKEN) && window.parent) {\r\n                if (window.parent !== window) {\r\n                    self.verbose(\"Window is in iframe, acquiring token silently\");\r\n                } else {\r\n                    self.verbose(\"acquiring token interactive in progress\");\r\n                }\r\n\r\n                token = requestInfo.parameters[self.CONSTANTS.ACCESS_TOKEN] || requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ACCESS_TOKEN;\r\n            } else if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                token = requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ID_TOKEN;\r\n            }\r\n\r\n            var errorDesc = requestInfo.parameters[self.CONSTANTS.ERROR_DESCRIPTION];\r\n            var error = requestInfo.parameters[self.CONSTANTS.ERROR];\r\n            try {\r\n                if (tokenReceivedCallback) {\r\n                    tokenReceivedCallback(errorDesc, token, error, tokenType);\r\n                }\r\n\r\n            } catch (err) {\r\n                self.error(\"Error occurred in user defined callback function: \" + err);\r\n            }\r\n\r\n            if (window.parent === window && !isPopup) {\r\n                if (self.config.navigateToLoginRequestUrl) {\r\n                    window.location.href = self._getItem(self.CONSTANTS.STORAGE.LOGIN_REQUEST);\r\n                } else window.location.hash = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Constructs the authorization endpoint URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getNavigateUrl = function (responseType, resource) {\r\n        var tenant = 'common';\r\n        if (this.config.tenant) {\r\n            tenant = this.config.tenant;\r\n        }\r\n\r\n        var urlNavigate = this.instance + tenant + '/oauth2/authorize' + this._serialize(responseType, this.config, resource) + this._addLibMetadata();\r\n        this.info('Navigate url:' + urlNavigate);\r\n        return urlNavigate;\r\n    };\r\n\r\n    /**\r\n     * Returns the decoded id_token.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this._decodeJwt(encodedIdToken);\r\n\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = this._base64DecodeStringUrlSafe(base64IdToken);\r\n\r\n            if (!base64Decoded) {\r\n                this.info('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            this.error('The returned id_token could not be decoded', err);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Decodes a string of data which has been encoded using base-64 encoding.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._base64DecodeStringUrlSafe = function (base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken))); // jshint ignore:line\r\n        }\r\n        else {\r\n            return decodeURIComponent(escape(this._decode(base64IdToken)));\r\n        }\r\n    };\r\n\r\n    //Take https://cdnjs.cloudflare.com/ajax/libs/Base64/0.3.0/base64.js and https://en.wikipedia.org/wiki/Base64 as reference. \r\n    AuthenticationContext.prototype._decode = function (base64IdToken) {\r\n        var codes = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        base64IdToken = String(base64IdToken).replace(/=+$/, '');\r\n\r\n        var length = base64IdToken.length;\r\n\r\n        if (length % 4 === 1) {\r\n            throw new Error('The token to be decoded is not correctly encoded.');\r\n        }\r\n\r\n        var h1, h2, h3, h4, bits, c1, c2, c3, decoded = '';\r\n\r\n        for (var i = 0; i < length; i += 4) {\r\n            //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n            // then 6 bits per base64 encoded character\r\n            h1 = codes.indexOf(base64IdToken.charAt(i));\r\n            h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n            h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n            h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n\r\n            // For padding, if last two are '='\r\n            if (i + 2 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n                c1 = bits >> 16 & 255;\r\n                c2 = bits >> 8 & 255;\r\n                decoded += String.fromCharCode(c1, c2);\r\n                break;\r\n            }\r\n            // if last one is '='\r\n            else if (i + 1 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12\r\n                c1 = bits >> 16 & 255;\r\n                decoded += String.fromCharCode(c1);\r\n                break;\r\n            }\r\n\r\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n\r\n            // then convert to 3 byte chars\r\n            c1 = bits >> 16 & 255;\r\n            c2 = bits >> 8 & 255;\r\n            c3 = bits & 255;\r\n\r\n            decoded += String.fromCharCode(c1, c2, c3);\r\n        }\r\n\r\n        return decoded;\r\n    };\r\n\r\n    /**\r\n     * Decodes an id token into an object with header, payload and signature fields.\r\n     * @ignore\r\n     */\r\n    // Adal.node js crack function\r\n    AuthenticationContext.prototype._decodeJwt = function (jwtToken) {\r\n        if (this._isEmpty(jwtToken)) {\r\n            return null;\r\n        };\r\n\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n\r\n        if (!matches || matches.length < 4) {\r\n            this.warn('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n\r\n        return crackedToken;\r\n    };\r\n\r\n    /**\r\n     * Converts string to represent binary data in ASCII string format by translating it into a radix-64 representation and returns it\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString = function (str) {\r\n        return str.replace('-', '+').replace('_', '/');\r\n    };\r\n\r\n    /**\r\n     * Serializes the parameters for the authorization endpoint URL and returns the serialized uri string.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._serialize = function (responseType, obj, resource) {\r\n        var str = [];\r\n\r\n        if (obj !== null) {\r\n            str.push('?response_type=' + responseType);\r\n            str.push('client_id=' + encodeURIComponent(obj.clientId));\r\n            if (resource) {\r\n                str.push('resource=' + encodeURIComponent(resource));\r\n            }\r\n\r\n            str.push('redirect_uri=' + encodeURIComponent(obj.redirectUri));\r\n            str.push('state=' + encodeURIComponent(obj.state));\r\n\r\n            if (obj.hasOwnProperty('slice')) {\r\n                str.push('slice=' + encodeURIComponent(obj.slice));\r\n            }\r\n\r\n            if (obj.hasOwnProperty('extraQueryParameter')) {\r\n                str.push(obj.extraQueryParameter);\r\n            }\r\n\r\n            var correlationId = obj.correlationId ? obj.correlationId : this._guid();\r\n            str.push('client-request-id=' + encodeURIComponent(correlationId));\r\n        }\r\n\r\n        return str.join('&');\r\n    };\r\n\r\n    /**\r\n     * Parses the query string parameters into a key-value pair object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._deserialize = function (query) {\r\n        var match,\r\n            pl = /\\+/g,  // Regex for replacing addition symbol with a space\r\n            search = /([^&=]+)=([^&]*)/g,\r\n            decode = function (s) {\r\n                return decodeURIComponent(s.replace(pl, ' '));\r\n            },\r\n            obj = {};\r\n        match = search.exec(query);\r\n\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Converts decimal value to hex equivalent\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._decimalToHex = function (number) {\r\n        var hex = number.toString(16);\r\n\r\n        while (hex.length < 2) {\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n\r\n    /**\r\n     * Generates RFC4122 version 4 guid (128 bits)\r\n     * @ignore\r\n     */\r\n    /* jshint ignore:start */\r\n    AuthenticationContext.prototype._guid = function () {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n        var cryptoObj = window.crypto || window.msCrypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return this._decimalToHex(buffer[0]) + this._decimalToHex(buffer[1]) + this._decimalToHex(buffer[2]) + this._decimalToHex(buffer[3]) + '-' + this._decimalToHex(buffer[4]) + this._decimalToHex(buffer[5]) + '-' + this._decimalToHex(buffer[6]) + this._decimalToHex(buffer[7]) + '-' +\r\n                this._decimalToHex(buffer[8]) + this._decimalToHex(buffer[9]) + '-' + this._decimalToHex(buffer[10]) + this._decimalToHex(buffer[11]) + this._decimalToHex(buffer[12]) + this._decimalToHex(buffer[13]) + this._decimalToHex(buffer[14]) + this._decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n            var hex = '0123456789abcdef';\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== '-' && guidHolder[i] !== '4') {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === 'x') {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === 'y') {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * Calculates the expires in value in milliseconds for the acquired token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._expiresIn = function (expires) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expires) expires = 3599;\r\n        return this._now() + parseInt(expires, 10);\r\n    };\r\n\r\n    /**\r\n     * Return the number of milliseconds since 1970/01/01\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n\r\n    /**\r\n     * Adds the hidden iframe for silent token renewal\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addAdalFrame = function (iframeId) {\r\n        if (typeof iframeId === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.info('Add adal frame to document:' + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n\r\n        if (!adalFrame) {\r\n            if (document.createElement && document.documentElement &&\r\n                (window.opera || window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {\r\n                var ifr = document.createElement('iframe');\r\n                ifr.setAttribute('id', iframeId);\r\n                ifr.setAttribute('aria-hidden', 'true');\r\n                ifr.style.visibility = 'hidden';\r\n                ifr.style.position = 'absolute';\r\n                ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';\r\n\r\n                adalFrame = document.getElementsByTagName('body')[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML('beforeEnd', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                adalFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n\r\n        return adalFrame;\r\n    };\r\n\r\n    /**\r\n     * Saves the key-value pair in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._saveItem = function (key, obj, preserve) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return false;\r\n            }\r\n\r\n            if (preserve) {\r\n                var value = this._getItem(key) || '';\r\n                localStorage.setItem(key, value + obj + this.CONSTANTS.CACHE_DELIMETER);\r\n            }\r\n            else {\r\n                localStorage.setItem(key, obj);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return false;\r\n        }\r\n\r\n        sessionStorage.setItem(key, obj);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Searches the value for the given key in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getItem = function (key) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return null;\r\n            }\r\n\r\n            return localStorage.getItem(key);\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return null;\r\n        }\r\n\r\n        return sessionStorage.getItem(key);\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports localStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsLocalStorage = function () {\r\n        try {\r\n            if (!window.localStorage) return false; // Test availability\r\n            window.localStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.localStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.localStorage.removeItem('storageTest'); // Try delete\r\n            if (window.localStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports sessionStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsSessionStorage = function () {\r\n        try {\r\n            if (!window.sessionStorage) return false; // Test availability\r\n            window.sessionStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.sessionStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.sessionStorage.removeItem('storageTest'); // Try delete\r\n            if (window.sessionStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a cloned copy of the passed object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._cloneConfig = function (obj) {\r\n        if (null === obj || 'object' !== typeof obj) {\r\n            return obj;\r\n        }\r\n\r\n        var copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = obj[attr];\r\n            }\r\n        }\r\n        return copy;\r\n    };\r\n\r\n    /**\r\n     * Adds the library version and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addLibMetadata = function () {\r\n        // x-client-SKU\r\n        // x-client-Ver\r\n        return '&x-client-SKU=Js&x-client-Ver=' + this._libVersion();\r\n    };\r\n\r\n    /**\r\n     * Checks the Logging Level, constructs the Log message and logs it. Users need to implement/override this method to turn on Logging. \r\n     * @param {number} level  -  Level can be set 0,1,2 and 3 which turns on 'error', 'warning', 'info' or 'verbose' level logging respectively.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.log = function (level, message, error, containsPii) {\r\n\r\n        if (level <= Logging.level) {\r\n\r\n            if (!Logging.piiLoggingEnabled && containsPii)\r\n                return;\r\n\r\n            var timestamp = new Date().toUTCString();\r\n            var formattedMessage = '';\r\n\r\n            if (this.config.correlationId)\r\n                formattedMessage = timestamp + ':' + this.config.correlationId + '-' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n            else\r\n                formattedMessage = timestamp + ':' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n\r\n            if (error) {\r\n                formattedMessage += '\\nstack:\\n' + error.stack;\r\n            }\r\n\r\n            Logging.log(formattedMessage);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 0.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.error = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 1.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warn = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.info = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbose = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null);\r\n    };\r\n\r\n    /**\r\n    * Logs Pii messages when Logging Level is set to 0 and window.piiLoggingEnabled is set to true.\r\n    * @param {string} message  -  Message to log.\r\n    * @param {string} error  -  Error to log.\r\n    */\r\n    AuthenticationContext.prototype.errorPii = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error, true);\r\n    };\r\n\r\n    /**\r\n     * Logs  Pii messages when Logging Level is set to 1 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warnPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.infoPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbosePii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null, true);\r\n    };\r\n    /**\r\n     * Returns the library version.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._libVersion = function () {\r\n        return '1.0.17';\r\n    };\r\n\r\n    /**\r\n     * Returns a reference of Authentication Context as a result of a require call.\r\n     * @ignore\r\n     */\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = AuthenticationContext;\r\n        module.exports.inject = function (conf) {\r\n            return new AuthenticationContext(conf);\r\n        };\r\n    }\r\n\r\n    return AuthenticationContext;\r\n\r\n}());\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return StringMatchOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ChangedItemType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ChangedOperationType; });\nvar StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nvar ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nvar ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\r\n//# sourceMappingURL=types.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// sp-taxonomy.es5.umd.bundle.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8027b9ffbb448d244a92","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 0\n// module chunks = 0","/**\n@license\n * @pnp/common v1.1.4 - pnp - provides shared functionality across all pnp libraries\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { Logger } from '@pnp/logging';\nimport { __extends } from 'tslib';\nimport { inject } from 'adal-angular';\n\nfunction deprecatedClass(deprecationVersion, message) {\r\n    return function (target) {\r\n        Logger.log({\r\n            data: {\r\n                target: target,\r\n            },\r\n            level: 2 /* Warning */,\r\n            message: \"(\" + deprecationVersion + \") \" + message,\r\n        });\r\n    };\r\n}\r\nfunction deprecated(deprecationVersion, message) {\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: \"(\" + deprecationVersion + \") \" + message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\r\nfunction beta(message) {\r\n    if (message === void 0) { message = \"This feature is flagged as beta and is subject to change.\"; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            Logger.log({\r\n                data: {\r\n                    descriptor: descriptor,\r\n                    propertyKey: propertyKey,\r\n                    target: target,\r\n                },\r\n                level: 2 /* Warning */,\r\n                message: message,\r\n            });\r\n            return method.apply(this, args);\r\n        };\r\n    };\r\n}\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combinePaths() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // allow filtering of copied properties\r\n    var check2 = isFunc(filter) ? filter : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && check2(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return typeof s === \"undefined\" || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    /**\r\n     * Gets a callback function which will maintain context across async calls.\r\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n     *\r\n     * @param context The object that will be the 'this' value in the callback\r\n     * @param method The method to which we will apply the context and parameters\r\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n     */\r\n    Util.getCtxCallback = getCtxCallback;\r\n    /**\r\n     * Adds a value to a date\r\n     *\r\n     * @param date The date to which we will add units, done in local time\r\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n     * @param units The amount to add to date of the given interval\r\n     *\r\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n     */\r\n    Util.dateAdd = dateAdd;\r\n    /**\r\n     * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n     *\r\n     * @param paths 0 to n path parts to combine\r\n     */\r\n    Util.combinePaths = combinePaths;\r\n    /**\r\n     * Gets a random string of chars length\r\n     *\r\n     * @param chars The length of the random string to generate\r\n     */\r\n    Util.getRandomString = getRandomString;\r\n    /**\r\n     * Gets a random GUID value\r\n     *\r\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n     */\r\n    Util.getGUID = getGUID;\r\n    /**\r\n     * Determines if a given value is a function\r\n     *\r\n     * @param cf The thing to test for functionness\r\n     */\r\n    Util.isFunc = isFunc;\r\n    /**\r\n     * Determines if an object is both defined and not null\r\n     * @param obj Object to test\r\n     */\r\n    Util.objectDefinedNotNull = objectDefinedNotNull;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n    */\r\n    Util.isArray = isArray;\r\n    /**\r\n     * Provides functionality to extend the given object by doing a shallow copy\r\n     *\r\n     * @param target The object to which properties will be copied\r\n     * @param source The source object from which properties will be copied\r\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n     *\r\n     */\r\n    Util.extend = extend;\r\n    /**\r\n     * Determines if a given url is absolute\r\n     *\r\n     * @param url The url to check to see if it is absolute\r\n     */\r\n    Util.isUrlAbsolute = isUrlAbsolute;\r\n    /**\r\n     * Determines if a string is null or empty or undefined\r\n     *\r\n     * @param s The string to test\r\n     */\r\n    Util.stringIsNullOrEmpty = stringIsNullOrEmpty;\r\n    /**\r\n     * Gets an attribute value from an html/xml string block\r\n     *\r\n     * @param html HTML to search\r\n     * @param attrName The name of the attribute to find\r\n     */\r\n    Util.getAttrValueFromString = getAttrValueFromString;\r\n    /**\r\n     * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n     *\r\n     * @param guid The candidate guid id\r\n     */\r\n    Util.sanitizeGuid = sanitizeGuid;\r\n    return Util;\r\n}());\n\nfunction mergeHeaders(target, source) {\r\n    if (typeof source !== \"undefined\" && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token;\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    __extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @param clientId Optional client id to use instead of the built-in SPFx id\r\n     * @description Using this method and the default clientId requires that the features described in\r\n     * this article https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant. If not you can\r\n     * creat your own app, grant permissions and use that clientId here along with the SPFx context\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext, cliendId) {\r\n        if (cliendId === void 0) { cliendId = \"c58637bb-e2e1-4312-8a00-04b5ffcd3403\"; }\r\n        // this \"magic\" client id is the one to which permissions are granted behind the scenes\r\n        // this redirectUrl is the page as used by spfx\r\n        return new AdalClient(cliendId, spfxContext.pageContext.aadInfo.tenantId.toString(), combinePaths(window.location.origin, \"/_forms/spfxsinglesignon.aspx\"));\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw new Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(this.getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(new Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(new Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Parses out the root of the request url to use as the resource when getting the token\r\n     *\r\n     * After: https://gist.github.com/jlong/2428561\r\n     * @param url The url to parse\r\n     */\r\n    AdalClient.prototype.getResource = function (url) {\r\n        var parser = document.createElement(\"a\");\r\n        parser.href = url;\r\n        return parser.protocol + \"//\" + parser.hostname;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Reads a blob as text\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsText(blob) {\r\n    return readBlobAs(blob, \"string\");\r\n}\r\n/**\r\n * Reads a blob into an array buffer\r\n *\r\n * @param blob The data to read\r\n */\r\nfunction readBlobAsArrayBuffer(blob) {\r\n    return readBlobAs(blob, \"buffer\");\r\n}\r\n/**\r\n * Generic method to read blob's content\r\n *\r\n * @param blob The data to read\r\n * @param mode The read mode\r\n */\r\nfunction readBlobAs(blob, mode) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) {\r\n                resolve(e.target.result);\r\n            };\r\n            switch (mode) {\r\n                case \"string\":\r\n                    reader.readAsText(blob);\r\n                    break;\r\n                case \"buffer\":\r\n                    reader.readAsArrayBuffer(blob);\r\n                    break;\r\n            }\r\n        }\r\n        catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n}\n\n/**\r\n * Generic dictionary\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the Dictionary<T> class\r\n     *\r\n     * @constructor\r\n     */\r\n    function Dictionary(keys, values) {\r\n        if (keys === void 0) { keys = []; }\r\n        if (values === void 0) { values = []; }\r\n        this.keys = keys;\r\n        this.values = values;\r\n    }\r\n    /**\r\n     * Gets a value from the collection using the specified key\r\n     *\r\n     * @param key The key whose value we want to return, returns null if the key does not exist\r\n     */\r\n    Dictionary.prototype.get = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        return this.values[index];\r\n    };\r\n    /**\r\n     * Adds the supplied key and value to the dictionary\r\n     *\r\n     * @param key The key to add\r\n     * @param o The value to add\r\n     */\r\n    Dictionary.prototype.add = function (key, o) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index > -1) {\r\n            if (o === null) {\r\n                this.remove(key);\r\n            }\r\n            else {\r\n                this.values[index] = o;\r\n            }\r\n        }\r\n        else {\r\n            if (o !== null) {\r\n                this.keys.push(key);\r\n                this.values.push(o);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\r\n     */\r\n    Dictionary.prototype.merge = function (source) {\r\n        var _this = this;\r\n        if (\"getKeys\" in source) {\r\n            var sourceAsDictionary_1 = source;\r\n            sourceAsDictionary_1.getKeys().map(function (key) {\r\n                _this.add(key, sourceAsDictionary_1.get(key));\r\n            });\r\n        }\r\n        else {\r\n            var sourceAsHash = source;\r\n            for (var key in sourceAsHash) {\r\n                if (sourceAsHash.hasOwnProperty(key)) {\r\n                    this.add(key, sourceAsHash[key]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value from the dictionary\r\n     *\r\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\r\n     */\r\n    Dictionary.prototype.remove = function (key) {\r\n        var index = this.keys.indexOf(key);\r\n        if (index < 0) {\r\n            return null;\r\n        }\r\n        var val = this.values[index];\r\n        this.keys.splice(index, 1);\r\n        this.values.splice(index, 1);\r\n        return val;\r\n    };\r\n    /**\r\n     * Returns all the keys currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getKeys = function () {\r\n        return this.keys;\r\n    };\r\n    /**\r\n     * Returns all the values currently in the dictionary as an array\r\n     */\r\n    Dictionary.prototype.getValues = function () {\r\n        return this.values;\r\n    };\r\n    /**\r\n     * Clears the current dictionary\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        this.keys = [];\r\n        this.values = [];\r\n    };\r\n    Object.defineProperty(Dictionary.prototype, \"count\", {\r\n        /**\r\n         * Gets a count of the items currently in the dictionary\r\n         */\r\n        get: function () {\r\n            return this.keys.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Dictionary;\r\n}());\n\nvar UrlException = /** @class */ (function (_super) {\r\n    __extends(UrlException, _super);\r\n    function UrlException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"UrlException\";\r\n        Logger.log({ data: {}, level: 3 /* Error */, message: \"[\" + _this.name + \"]::\" + _this.message });\r\n        return _this;\r\n    }\r\n    return UrlException;\r\n}(Error));\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl() {\r\n        this._v = new Dictionary();\r\n        // setup defaults\r\n        this._v.add(\"defaultCachingStore\", \"session\");\r\n        this._v.add(\"defaultCachingTimeoutSeconds\", 60);\r\n        this._v.add(\"globalCacheDisable\", false);\r\n        this._v.add(\"enableCacheExpiration\", false);\r\n        this._v.add(\"cacheExpirationIntervalMilliseconds\", 750);\r\n        this._v.add(\"spfxContext\", null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        var _this = this;\r\n        Object.keys(config).forEach(function (key) {\r\n            _this._v.add(key, config[key]);\r\n        });\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingStore\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(\"defaultCachingTimeoutSeconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(\"globalCacheDisable\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(\"enableCacheExpiration\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(\"cacheExpirationIntervalMilliseconds\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(\"spfxContext\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            Logger.write(\"Enabling cache expiration.\", 1 /* Info */);\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (o == null) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            Logger.write(\"Removing item with key '\" + key + \"' from cache due to expiration.\", 1 /* Info */);\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"test\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (typeof expire === \"undefined\") {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return JSON.stringify({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        Logger.write(\"Called cache expiration handler.\", 0 /* Verbose */);\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            // we've got some error - so just stop the loop and report the error\r\n            Logger.log({\r\n                data: e,\r\n                level: 3 /* Error */,\r\n                message: \"Error deleting expired cache entries, see data for details. Timeout not reset.\",\r\n            });\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Dictionary(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return this._store.getKeys()[index];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.remove(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.add(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PnPClientStorage;\r\n}());\n\nexport { AdalClient, readBlobAsText, readBlobAsArrayBuffer, Dictionary, deprecatedClass, deprecated, beta, UrlException, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combinePaths, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, Util };\n//# sourceMappingURL=common.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/common/dist/common.es5.js\n// module id = 1\n// module chunks = 0","/**\n@license\n * @pnp/sp-clientsvc v1.1.4 - pnp - Provides core functionality to interact with the legacy client.svc SharePoint endpoint\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { extend, objectDefinedNotNull, getAttrValueFromString, combinePaths, getGUID, mergeHeaders, mergeOptions } from '@pnp/common';\nimport { __extends } from 'tslib';\nimport { AlreadyInBatchException, CachingOptions, Queryable, CachingParserWrapper, ODataBatch } from '@pnp/odata';\nimport { SPHttpClient, toAbsoluteUrl } from '@pnp/sp';\nimport { Logger } from '@pnp/logging';\n\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\n\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\n\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\n\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        this.dirty();\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates a ~unique hash code for this ObjectPathQueue\r\n     *\r\n     * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n     */\r\n    // tslint:disable:no-bitwise\r\n    ObjectPathQueue.prototype.hash = function () {\r\n        var s = this.toBody();\r\n        var hash = 0;\r\n        if (s.length === 0) {\r\n            return hash;\r\n        }\r\n        for (var i = 0; i < s.length; i++) {\r\n            var chr = s.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    };\r\n    // tslint:enable:no-bitwise\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\n\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw new Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw new Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && parsed[0].hasOwnProperty(\"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw new Error(JSON.stringify(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query/i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && result.hasOwnProperty(\"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\n\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    __extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combinePaths(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combinePaths(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        var _this = this;\r\n        return _super.prototype.toUrl.call(this) + (\"?\" + this._query.getKeys().map(function (key) { return key + \"=\" + _this._query.get(key); }).join(\"&\"));\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!Object.hasOwnProperty(\"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + _this._objectPaths.hash() + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\n\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    __extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    __extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method$$1 = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method$$1.path = opSetId(\"0\", method$$1.path);\r\n        method$$1.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method$$1);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    __extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    __extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\n\nexport { ObjectPathBatch, ClientSvcQueryable, ObjectPath, opSetId, opSetPathId, opSetParentId, opSetPathParamId, ObjectPathQueue, objectPath, identityQuery, opQuery, setProperty, methodAction, objectProperties, property, staticMethod, staticProperty, objConstructor, MethodParams, method, ProcessQueryParser, writeObjectPathBody };\n//# sourceMappingURL=sp-clientsvc.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp-clientsvc/dist/sp-clientsvc.es5.js\n// module id = 2\n// module chunks = 0","/**\n@license\n * @pnp/logging v1.1.4 - pnp - light-weight, subscribable logging framework\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (typeof entry !== \"undefined\" && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (typeof entry.data !== \"undefined\") {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/logging/dist/logging.es5.js\n// module id = 3\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, setProperty } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nvar TermSets = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(ClientSvcQueryable));\r\nexport { TermSets };\r\nvar TermSet = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(Terms, \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, setProperty(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return extend(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(ClientSvcQueryable));\r\nexport { TermSet };\r\n//# sourceMappingURL=termsets.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termsets.js\n// module id = 4\n// module chunks = 0","/**\n@license\n * @pnp/sp v1.1.4 - pnp - provides a fluent api for working with SharePoint REST\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { stringIsNullOrEmpty, extend, combinePaths, RuntimeConfig, FetchClient, Dictionary, mergeHeaders, getCtxCallback, isUrlAbsolute, mergeOptions, getGUID, getAttrValueFromString, dateAdd, readBlobAsArrayBuffer } from '@pnp/common';\nimport { __extends } from 'tslib';\nimport { Logger } from '@pnp/logging';\nimport { ODataParserBase, ODataDefaultParser, ODataQueryable, TextParser, BlobParser, JSONParser, BufferParser, ODataBatch } from '@pnp/odata';\nimport { spExtractODataId } from '..';\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction spExtractODataId$1(candidate) {\r\n    if (candidate.hasOwnProperty(\"odata.metadata\") && candidate.hasOwnProperty(\"odata.editLink\")) {\r\n        // we are dealign with minimal metadata (default)\r\n        return combinePaths(extractWebUrl(candidate[\"odata.metadata\"]), \"_api\", candidate[\"odata.editLink\"]);\r\n    }\r\n    else if (candidate.hasOwnProperty(\"odata.editLink\")) {\r\n        return combinePaths(\"_api\", candidate[\"odata.editLink\"]);\r\n    }\r\n    else if (candidate.hasOwnProperty(\"__metadata\")) {\r\n        // we are dealing with verbose, which has an absolute uri\r\n        return candidate.__metadata.uri;\r\n    }\r\n    else {\r\n        // we are likely dealing with nometadata, so don't error but we won't be able to\r\n        // chain off these objects\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(spExtractODataId$1(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(spExtractODataId$1(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spExtractODataId$1(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(spExtractODataId$1(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== null && typeof spPart !== \"undefined\" && typeof spPart.headers !== \"undefined\") {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== null && typeof spPart.baseUrl !== \"undefined\") {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            // use a configured factory firt\r\n            if (spPart !== null && typeof spPart.fetchClientFactory !== \"undefined\") {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Dictionary();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== null) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combinePaths(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.add(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient() {\r\n        this._impl = SPRuntimeConfig.fetchClientFactory();\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.4\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.1.4\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\r\n                // Check if request was throttled - http status code 429\r\n                // Check if request failed due to server unavailable - http status code 503\r\n                if (response.status !== 429 && response.status !== 503) {\r\n                    ctx.reject(response);\r\n                }\r\n                // grab our current delay\r\n                var delay = ctx.delay;\r\n                // Increment our counters.\r\n                ctx.delay *= 2;\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(response);\r\n                }\r\n                // Set our retry timeout for {delay} milliseconds.\r\n                setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combinePaths(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (typeof global._spPageContextInfo !== \"undefined\") {\r\n            // operating in classic pages\r\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\r\n                return resolve(combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\r\n                return resolve(combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (typeof global.location !== \"undefined\") {\r\n            var baseUrl_1 = global.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combinePaths(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combinePaths(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combinePaths(baseUrl.slice(index), path);\r\n                _this._url = combinePaths(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combinePaths(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl._query.get(\"@target\");\r\n            if (target !== null) {\r\n                _this._query.add(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Dictionary();\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        // inlude our explicitly set query string params\r\n        aliasedParams.merge(this._query);\r\n        if (aliasedParams.count > 0) {\r\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path);\r\n        parent.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            parent.query.add(\"@target\", target);\r\n        }\r\n        if (typeof batch !== \"undefined\") {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = new factory(this, additionalPath);\r\n        clone.configure(this._options);\r\n        var target = this.query.get(\"@target\");\r\n        if (target !== null) {\r\n            clone.query.add(\"@target\", target);\r\n        }\r\n        if (includeBatch && this.hasBatch) {\r\n            clone = clone.inBatch(this.batch);\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: /^get$/i.test(verb) && _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this._query.add(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableCollection.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableCollection.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        var _this = this;\r\n        if (ascending === void 0) { ascending = true; }\r\n        var query = this._query.getKeys().filter(function (k) { return k === \"$orderby\"; }).map(function (k) { return _this._query.get(k); });\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this._query.add(\"$orderby\", query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this._query.add(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this._query.add(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryableInstance.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this._query.add(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryableInstance.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this._query.add(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    /**\r\n     * Creates a new instance of the SiteUsers class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user collection\r\n     */\r\n    function SiteUsers(baseUrl, path) {\r\n        if (path === void 0) { path = \"siteusers\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"(@v)\");\r\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\");\r\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers, null).postCore({\r\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this user instance with the supplied properties\r\n    *\r\n    * @param properties A plain object of property names and values to update for the user\r\n    */\r\n    SiteUser.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this user\r\n     *\r\n     */\r\n    SiteUser.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SiteUser;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser(baseUrl, path) {\r\n        if (path === void 0) { path = \"currentuser\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return CurrentUser;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    /**\r\n     * Creates a new instance of the SiteGroups class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this group collection\r\n     */\r\n    function SiteGroups(baseUrl, path) {\r\n        if (path === void 0) { path = \"sitegroups\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Updates this group instance with the supplied properties\r\n    *\r\n    * @param properties A GroupWriteableProperties object of property names and values to update for the group\r\n    */\r\n    /* tslint:disable no-string-literal */\r\n    SiteGroup.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\r\n        return this.postCore({\r\n            body: JSON.stringify(postBody),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retGroup = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                group: retGroup,\r\n            };\r\n        });\r\n    };\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    /**\r\n     * Creates a new instance of the RoleAssignments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role assignments collection\r\n     */\r\n    function RoleAssignments(baseUrl, path) {\r\n        if (path === void 0) { path = \"roleassignments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this role assignment\r\n     *\r\n     */\r\n    RoleAssignment.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definitions collection\r\n     *\r\n     */\r\n    function RoleDefinitions(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\r\n            properties[\"BasePermissions\"] = extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\r\n        }\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (properties.hasOwnProperty(\"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Deletes this role definition\r\n     *\r\n     */\r\n    RoleDefinition.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    /**\r\n     * Creates a new instance of the RoleDefinitionBindings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this role definition bindings collection\r\n     */\r\n    function RoleDefinitionBindings(baseUrl, path) {\r\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return r.hasOwnProperty(\"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: JSON.stringify({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (typeof emailData !== \"undefined\") {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: JSON.stringify(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: JSON.stringify({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, \"getSharingInformation\").postCore({\r\n            body: JSON.stringify({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: JSON.stringify({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: JSON.stringify({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (typeof group !== \"undefined\" && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: JSON.stringify(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(spExtractODataId$1(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar SPBatchParseException = /** @class */ (function (_super) {\r\n    __extends(SPBatchParseException, _super);\r\n    function SPBatchParseException(msg) {\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"BatchParseException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return SPBatchParseException;\r\n}(Error));\r\nvar MaxCommentLengthException = /** @class */ (function (_super) {\r\n    __extends(MaxCommentLengthException, _super);\r\n    function MaxCommentLengthException(msg) {\r\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"MaxCommentLengthException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return MaxCommentLengthException;\r\n}(Error));\r\nvar NotSupportedInBatchException = /** @class */ (function (_super) {\r\n    __extends(NotSupportedInBatchException, _super);\r\n    function NotSupportedInBatchException(operation) {\r\n        if (operation === void 0) { operation = \"This operation\"; }\r\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\r\n        _this.name = \"NotSupportedInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return NotSupportedInBatchException;\r\n}(Error));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: JSON.stringify({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    /**\r\n     * Creates a new instance of the WebPart class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\r\n     */\r\n    function WebPart(baseUrl, path) {\r\n        if (path === void 0) { path = \"webpart\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    /**\r\n     * Creates a new instance of the Folders class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Folders(baseUrl, path) {\r\n        if (path === void 0) { path = \"folders\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Folder.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.Folder\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                folder: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(spExtractODataId$1(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: JSON.stringify({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    /**\r\n     * Creates a new instance of the ContentTypes class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content types collection\r\n     */\r\n    function ContentTypes(baseUrl, path) {\r\n        if (path === void 0) { path = \"contenttypes\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(extend({\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Delete this content type\r\n     */\r\n    ContentType.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    /**\r\n     * Creates a new instance of the ContentType class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this content type instance\r\n     */\r\n    function FieldLinks(baseUrl, path) {\r\n        if (path === void 0) { path = \"fieldlinks\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    /**\r\n     * Creates a new instance of the AttachmentFiles class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this attachments collection\r\n     */\r\n    function AttachmentFiles(baseUrl, path) {\r\n        if (path === void 0) { path = \"AttachmentFiles\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @files name The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    /**\r\n     * Creates a new instance of the Views class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Views(baseUrl, path) {\r\n        if (path === void 0) { path = \"views\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = JSON.stringify(extend({\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, additionalSettings));\r\n        return this.clone(Views, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this view intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the view\r\n     */\r\n    View.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.View\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this view\r\n     *\r\n     */\r\n    View.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields(baseUrl, path) {\r\n        if (path === void 0) { path = \"viewfields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields, \"moveviewfieldto\").postCore({\r\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Fields(baseUrl, path) {\r\n        if (path === void 0) { path = \"fields\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param title The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": extend({\r\n                \"__metadata\": {\r\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\r\n                },\r\n            }, info),\r\n        });\r\n        return this.clone(Fields, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.clone(Fields, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (typeof minValue !== \"undefined\") {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (typeof maxValue !== \"undefined\") {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            parameters: extend({\r\n                FieldTypeKind: 7,\r\n                LookupFieldName: lookupFieldName,\r\n                LookupListId: lookupListId,\r\n                Title: title,\r\n                \"__metadata\": { \"type\": \"SP.FieldCreationInformation\" },\r\n            }, properties),\r\n        });\r\n        return this.clone(Fields, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": fieldType },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Delete this fields\r\n     *\r\n     */\r\n    Field.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    /**\r\n     * Creates a new instance of the Fields class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Forms(baseUrl, path) {\r\n        if (path === void 0) { path = \"forms\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    /**\r\n     * Creates a new instance of the Subscriptions class\r\n     *\r\n     * @param baseUrl - The url or SharePointQueryable which forms the parent of this webhook subscriptions collection\r\n     */\r\n    function Subscriptions(baseUrl, path) {\r\n        if (path === void 0) { path = \"subscriptions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var subscription = new Subscription(this);\r\n        subscription.concat(\"('\" + subscriptionId + \"')\");\r\n        return subscription;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    /**\r\n     * Creates a new instance of the UserCustomActions class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user custom actions collection\r\n     */\r\n    function UserCustomActions(baseUrl, path) {\r\n        if (path === void 0) { path = \"usercustomactions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions, \"clear\").postCore();\r\n    };\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Updates this user custom action with the supplied properties\r\n    *\r\n    * @param properties An information object of property names and values to update for this user custom action\r\n    */\r\n    UserCustomAction.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                action: _this,\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Lists(baseUrl, path) {\r\n        if (path === void 0) { path = \"lists\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: JSON.stringify(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw new NotSupportedInBatchException(\"The ensure list method\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId$1(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(spExtractODataId$1(json));\r\n        });\r\n    };\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (properties.hasOwnProperty(\"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: JSON.stringify({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: JSON.stringify({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: JSON.stringify({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"RenderListData\")) {\r\n                return data.RenderListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataOverrideParameters\" },\r\n            }, overrideParameters),\r\n            parameters: extend({\r\n                \"__metadata\": { \"type\": \"SP.RenderListDataParameters\" },\r\n            }, parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: JSON.stringify(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            data = JSON.parse(data);\r\n            if (data.hasOwnProperty(\"ListData\")) {\r\n                return data.ListData;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: JSON.stringify({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    __extends(Comments, _super);\r\n    /**\r\n     * Creates a new instance of the Comments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Comments(baseUrl, path) {\r\n        if (path === void 0) { path = \"comments\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"Microsoft.SharePoint.Comments.comment\" },\r\n        }, info));\r\n        return this.clone(Comments, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments, \"DeleteAll\").postCore();\r\n    };\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    __extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    __extends(Replies, _super);\r\n    /**\r\n     * Creates a new instance of the Comments class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Replies(baseUrl, path) {\r\n        if (path === void 0) { path = \"replies\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"Microsoft.SharePoint.Comments.comment\" },\r\n        }, info));\r\n        return this.clone(Replies, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(spExtractODataId(d)), d);\r\n        });\r\n    };\r\n    return Replies;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    /**\r\n     * Creates a new instance of the Items class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Items(baseUrl, path) {\r\n        if (path === void 0) { path = \"items\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Item by id\r\n     *\r\n     * @param id The integer id of the item to retrieve\r\n     */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     */\r\n    Items.prototype.getAll = function (requestSize) {\r\n        var _this = this;\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": \"application/json;odata=nometadata\",\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.getKeys()\r\n            .filter(function (k) { return /^\\$select$|^\\$filter$|^\\$top$|^\\$expand$/.test(k.toLowerCase()); })\r\n            .reduce(function (i, k) {\r\n            i.query.add(k, _this.query.get(k));\r\n            return i;\r\n        }, items);\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = JSON.stringify(extend({\r\n                \"__metadata\": { \"type\": listItemEntityType },\r\n            }, properties));\r\n            var promise = _this.clone(Items, null).postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = JSON.stringify(extend({\r\n                    \"__metadata\": { \"type\": listItemEntityType },\r\n                }, properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Delete this item\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    Item.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i._query.add(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (data.hasOwnProperty(\"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\"))).getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function ItemVersions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    ItemVersion.prototype.delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    /**\r\n     * Creates a new instance of the Files class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Files(baseUrl, path) {\r\n        if (path === void 0) { path = \"files\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw new MaxCommentLengthException();\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(spExtractODataId$1(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (typeof progress === \"undefined\") {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(spExtractODataId$1(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    /**\r\n     * Creates a new instance of the File class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Versions(baseUrl, path) {\r\n        if (path === void 0) { path = \"versions\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n    * Delete a specific version of a file.\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Version.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        var _this = this;\r\n        // we need to handle the case of getting created from something that already has \"_api/...\" or does not\r\n        var candidateUrl = \"\";\r\n        if (typeof baseUrl === \"string\") {\r\n            candidateUrl = baseUrl;\r\n        }\r\n        else if (typeof baseUrl !== \"undefined\") {\r\n            candidateUrl = baseUrl.toUrl();\r\n        }\r\n        _this = _super.call(this, extractWebUrl(candidateUrl), path) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId$1(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.deploy = function () {\r\n        return this.clone(App, \"Deploy\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (typeof html === \"undefined\" || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw new Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (collection[i].hasOwnProperty(\"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (collection[i].hasOwnProperty(\"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw new Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combinePaths(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return JSON.stringify(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    __extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (typeof webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (typeof this.serverProcessedContent === \"undefined\" || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (typeof this.serverProcessedContent !== \"undefined\") {\r\n            if (typeof this.serverProcessedContent.searchablePlainTexts !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.imageSources !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (typeof this.serverProcessedContent.links !== \"undefined\") {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (typeof props.serverProcessedContent !== \"undefined\") {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (typeof props.webPartData !== \"undefined\" && typeof props.webPartData.properties !== \"undefined\") {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (typeof props.properties !== \"undefined\") {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = JSON.stringify({\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        });\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = JSON.stringify({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    /**\r\n     * Creates a new instance of the Navigation class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of these navigation components\r\n     */\r\n    function Navigation(baseUrl, path) {\r\n        if (path === void 0) { path = \"navigation\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: JSON.stringify({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: JSON.stringify({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    /**\r\n     * Creates a new instance of the RegionalSettings class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this regional settings collection\r\n     */\r\n    function RegionalSettings(baseUrl, path) {\r\n        if (path === void 0) { path = \"regionalsettings\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages(baseUrl, path) {\r\n        if (path === void 0) { path = \"installedlanguages\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezone\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return res.hasOwnProperty(\"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones(baseUrl, path) {\r\n        if (path === void 0) { path = \"timezones\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Allows for the fluent construction of search queries\r\n */\r\nvar SearchQueryBuilder = /** @class */ (function () {\r\n    function SearchQueryBuilder(queryText, _query) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (_query === void 0) { _query = {}; }\r\n        this._query = _query;\r\n        if (typeof queryText === \"string\" && queryText.length > 0) {\r\n            this.extendQuery({ Querytext: queryText });\r\n        }\r\n    }\r\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\r\n        if (queryText === void 0) { queryText = \"\"; }\r\n        if (queryTemplate === void 0) { queryTemplate = {}; }\r\n        return new SearchQueryBuilder(queryText, queryTemplate);\r\n    };\r\n    SearchQueryBuilder.prototype.text = function (queryText) {\r\n        return this.extendQuery({ Querytext: queryText });\r\n    };\r\n    SearchQueryBuilder.prototype.template = function (template) {\r\n        return this.extendQuery({ QueryTemplate: template });\r\n    };\r\n    SearchQueryBuilder.prototype.sourceId = function (id) {\r\n        return this.extendQuery({ SourceId: id });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableInterleaving: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableStemming: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\r\n        get: function () {\r\n            return this.extendQuery({ TrimDuplicates: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.trimDuplicatesIncludeId = function (n) {\r\n        return this.extendQuery({ TrimDuplicatesIncludeId: n });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableNicknames: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableFQL: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnablePhonetic: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\r\n        get: function () {\r\n            return this.extendQuery({ BypassResultTypes: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessBestBets: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableQueryRules: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableSorting: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\r\n        get: function () {\r\n            return this.extendQuery({ GenerateBlockRankLog: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\r\n        return this.extendQuery({ RankingModelId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.startRow = function (n) {\r\n        return this.extendQuery({ StartRow: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowLimit = function (n) {\r\n        return this.extendQuery({ RowLimit: n });\r\n    };\r\n    SearchQueryBuilder.prototype.rowsPerPage = function (n) {\r\n        return this.extendQuery({ RowsPerPage: n });\r\n    };\r\n    SearchQueryBuilder.prototype.selectProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SelectProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.culture = function (culture) {\r\n        return this.extendQuery({ Culture: culture });\r\n    };\r\n    SearchQueryBuilder.prototype.timeZoneId = function (id) {\r\n        return this.extendQuery({ TimeZoneId: id });\r\n    };\r\n    SearchQueryBuilder.prototype.refinementFilters = function () {\r\n        var filters = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filters[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ RefinementFilters: filters });\r\n    };\r\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\r\n        return this.extendQuery({ Refiners: refiners });\r\n    };\r\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\r\n        return this.extendQuery({ HiddenConstraints: constraints });\r\n    };\r\n    SearchQueryBuilder.prototype.sortList = function () {\r\n        var sorts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            sorts[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ SortList: sorts });\r\n    };\r\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\r\n        return this.extendQuery({ Timeout: milliseconds });\r\n    };\r\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ HitHighlightedProperties: properties });\r\n    };\r\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\r\n        return this.extendQuery({ ClientType: clientType });\r\n    };\r\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\r\n        return this.extendQuery({ PersonalizationData: data });\r\n    };\r\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\r\n        return this.extendQuery({ ResultsUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.queryTag = function () {\r\n        var tags = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tags[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ QueryTag: tags });\r\n    };\r\n    SearchQueryBuilder.prototype.properties = function () {\r\n        var properties = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            properties[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ Properties: properties });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\r\n        get: function () {\r\n            return this.extendQuery({ ProcessPersonalFavorites: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\r\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\r\n    };\r\n    SearchQueryBuilder.prototype.reorderingRules = function () {\r\n        var rules = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            rules[_i] = arguments[_i];\r\n        }\r\n        return this.extendQuery({ ReorderingRules: rules });\r\n    };\r\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\r\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\r\n    };\r\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\r\n        get: function () {\r\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\r\n        return this.extendQuery({ CollapseSpecification: spec });\r\n    };\r\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\r\n        return this.extendQuery({ UILanguage: lang });\r\n    };\r\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\r\n        return this.extendQuery({ DesiredSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\r\n        return this.extendQuery({ MaxSnippetLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\r\n        return this.extendQuery({ SummaryLength: len });\r\n    };\r\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\r\n        return this._query;\r\n    };\r\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\r\n        this._query = extend(this._query, part);\r\n        return this;\r\n    };\r\n    return SearchQueryBuilder;\r\n}());\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    /**\r\n     * Creates a new instance of the Search class\r\n     *\r\n     * @param baseUrl The url for the search context\r\n     * @param query The SearchQuery object to execute\r\n     */\r\n    function Search(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/postquery\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * .......\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (query) {\r\n        var _this = this;\r\n        var formattedBody;\r\n        formattedBody = query;\r\n        if (formattedBody.SelectProperties) {\r\n            formattedBody.SelectProperties = this.fixupProp(query.SelectProperties);\r\n        }\r\n        if (formattedBody.RefinementFilters) {\r\n            formattedBody.RefinementFilters = this.fixupProp(query.RefinementFilters);\r\n        }\r\n        if (formattedBody.SortList) {\r\n            formattedBody.SortList = this.fixupProp(query.SortList);\r\n        }\r\n        if (formattedBody.HithighlightedProperties) {\r\n            formattedBody.HithighlightedProperties = this.fixupProp(query.HitHighlightedProperties);\r\n        }\r\n        if (formattedBody.ReorderingRules) {\r\n            formattedBody.ReorderingRules = this.fixupProp(query.ReorderingRules);\r\n        }\r\n        if (formattedBody.Properties) {\r\n            formattedBody.Properties = this.fixupProp(query.Properties);\r\n        }\r\n        var postBody = JSON.stringify({\r\n            request: extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\r\n            }, formattedBody),\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fixes up properties that expect to consist of a \"results\" collection when needed\r\n     *\r\n     * @param prop property to fixup for container struct\r\n     */\r\n    Search.prototype.fixupProp = function (prop) {\r\n        if (prop.hasOwnProperty(\"results\")) {\r\n            return prop;\r\n        }\r\n        return { results: prop };\r\n    };\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/search/suggest\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        if (query.hasOwnProperty(\"count\")) {\r\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"personalCount\")) {\r\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"preQuery\")) {\r\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\r\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"capitalize\")) {\r\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"culture\")) {\r\n            this.query.add(\"culture\", query.culture.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"stemming\")) {\r\n            this.query.add(\"enablestemming\", query.stemming.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"includePeople\")) {\r\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"queryRules\")) {\r\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\r\n        }\r\n        if (query.hasOwnProperty(\"prefixMatch\")) {\r\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\r\n        }\r\n    };\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\r\nvar SearchSuggestResult = /** @class */ (function () {\r\n    function SearchSuggestResult(json) {\r\n        if (json.hasOwnProperty(\"suggest\")) {\r\n            // verbose\r\n            this.PeopleNames = json.suggest.PeopleNames.results;\r\n            this.PersonalResults = json.suggest.PersonalResults.results;\r\n            this.Queries = json.suggest.Queries.results;\r\n        }\r\n        else {\r\n            this.PeopleNames = json.PeopleNames;\r\n            this.PersonalResults = json.PersonalResults;\r\n            this.Queries = json.Queries;\r\n        }\r\n    }\r\n    return SearchSuggestResult;\r\n}());\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw new SPBatchParseException(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw new SPBatchParseException(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(new SPBatchParseException(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combinePaths(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof castHeaders[\"X-HTTP-Method\"] !== \"undefined\") {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.1.4\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw new SPBatchParseException(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    /**\r\n     * Creates a new instance of the Lists class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this fields collection\r\n     */\r\n    function Features(baseUrl, path) {\r\n        if (path === void 0) { path = \"features\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"add\").postCore({\r\n            body: JSON.stringify({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features, \"remove\").postCore({\r\n            body: JSON.stringify({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: JSON.stringify({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    /**\r\n     * Creates a new instance of the Webs class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     */\r\n    function Webs(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webs\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = JSON.stringify({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(spExtractODataId$1(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    /**\r\n     * Creates a new instance of the WebInfos class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web infos collection\r\n     */\r\n    function WebInfos(baseUrl, webPath) {\r\n        if (webPath === void 0) { webPath = \"webinfos\"; }\r\n        return _super.call(this, baseUrl, webPath) || this;\r\n    }\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    /**\r\n     * Creates a new instance of the Web class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web\r\n     */\r\n    function Web(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = JSON.stringify(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = JSON.stringify({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.add(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = JSON.stringify({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(spExtractODataId$1(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(spExtractODataId$1(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = JSON.stringify({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web, \"setStorageEntity\").postCore({\r\n            body: JSON.stringify({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    /**\r\n     * Creates a new instance of the Site class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this site collection\r\n     */\r\n    function Site(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/site\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site, \"openWebById('\" + webId + \"')\").postCore().then(function (d) {\r\n            return {\r\n                data: d,\r\n                web: Web.fromUrl(spExtractODataId$1(d)),\r\n            };\r\n        });\r\n    };\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = new ClientPeoplePickerQuery(baseUrl);\r\n        _this.profileLoader = new ProfileLoader(baseUrl);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\r\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n                request.postCore({\r\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n                }).then(function (_) { return resolve(); });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = JSON.stringify({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    /**\r\n   * Creates a new instance of the ProfileLoader class\r\n   *\r\n   * @param baseUrl The url or SharePointQueryable which forms the parent of this profile loader\r\n   */\r\n    function ProfileLoader(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: JSON.stringify({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    __extends(ClientPeoplePickerQuery, _super);\r\n    /**\r\n     * Creates a new instance of the PeoplePickerQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this people picker query\r\n     */\r\n    function ClientPeoplePickerQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return JSON.stringify({\r\n            \"queryParams\": extend({\r\n                \"__metadata\": { \"type\": \"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\" },\r\n            }, queryParams),\r\n        });\r\n    };\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function SocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/social.following\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return JSON.stringify({\r\n            \"actor\": extend({\r\n                Id: null,\r\n                \"__metadata\": { \"type\": \"SP.Social.SocialActorInfo\" },\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    /**\r\n     * Creates a new instance of the SocialQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this social query\r\n     */\r\n    function MySocialQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"my\"; }\r\n        return _super.call(this, baseUrl, path) || this;\r\n    }\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery, \"followers\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery, \"suggestions\").get().then(function (r) {\r\n            return r.hasOwnProperty(\"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\r\n            },\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(spExtractODataId$1(r)),\r\n            };\r\n        });\r\n    };\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query instanceof SearchQueryBuilder) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(Search).execute(finalQuery);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { spExtractODataId$1 as spExtractODataId, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, ContentType, ContentTypes, FieldLink, FieldLinks, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, RegionalSettings, InstalledLanguages, TimeZone, TimeZones, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, SearchSuggestResult, Site, UserProfileQuery, toAbsoluteUrl, extractWebUrl, UtilityMethod, View, Views, ViewFields, WebPartDefinitions, WebPartDefinition, WebPart, Web, PromotedState, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSidePart, ClientSideText, ClientSideWebpart, Comments, Comment, Replies, SocialQuery, MySocialQuery, SocialActorType, SocialActorTypes, SocialFollowResult, SocialStatusCode, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType, UrlZone };\n//# sourceMappingURL=sp.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/sp/dist/sp.es5.js\n// module id = 5\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, method, objConstructor, objectPath, objectProperties, opQuery, property } from \"@pnp/sp-clientsvc\";\r\nimport { TermGroup } from \"./termgroup\";\r\nimport { Term, Terms } from \"./terms\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(property(\"TermStores\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", MethodParams.build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", MethodParams.build().string(sanitizeGuid(id)));\r\n    };\r\n    return TermStores;\r\n}(ClientSvcQueryable));\r\nexport { TermStores };\r\nvar TermStore = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(TermSets, \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = MethodParams.build().string(sanitizeGuid(termId)).string(sanitizeGuid(termSetId));\r\n        return this.getChild(Term, \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermGroup, \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = objConstructor.apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(method(\"GetTerms\", params, \r\n        // actions\r\n        objectPath()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new Terms(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(method(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        objectPath()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new TermGroup(this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return extend(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(method(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(objConstructor.apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info))));\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(method(\"GetChanges\", params, \r\n        // actions\r\n        objectPath(), opQuery([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(ClientSvcQueryable));\r\nexport { TermStore };\r\n//# sourceMappingURL=termstores.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termstores.js\n// module id = 6\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, getGUID, sanitizeGuid } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams } from \"@pnp/sp-clientsvc\";\r\nimport { TermSets } from \"./termsets\";\r\nimport { TermStore } from \"./termstores\";\r\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof TermStore ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return extend(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(ClientSvcQueryable));\r\nexport { TermGroup };\r\n//# sourceMappingURL=termgroup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/termgroup.js\n// module id = 7\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { extend, sanitizeGuid, stringIsNullOrEmpty } from \"@pnp/common\";\r\nimport { ClientSvcQueryable, MethodParams, } from \"@pnp/sp-clientsvc\";\r\nimport { Labels } from \"./labels\";\r\nimport { TermSet, TermSets } from \"./termsets\";\r\nvar Terms = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw new Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(ClientSvcQueryable));\r\nexport { Terms };\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new Labels(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return extend(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = MethodParams.build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = MethodParams.build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = MethodParams.build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(ClientSvcQueryable));\r\nexport { Term };\r\n//# sourceMappingURL=terms.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/terms.js\n// module id = 8\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { sp } from \"@pnp/sp\";\r\nimport { ClientSvcQueryable, ObjectPathBatch, objectPath, staticMethod } from \"@pnp/sp-clientsvc\";\r\nimport { TermStore, TermStores } from \"./termstores\";\r\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new TermStores(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        sp.setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new ObjectPathBatch(this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(ClientSvcQueryable));\r\nexport { Session };\r\n//# sourceMappingURL=session.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/session.js\n// module id = 9\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 10\n// module chunks = 0","/**\n@license\n * @pnp/odata v1.1.4 - pnp - provides shared odata functionality and base classes\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https:github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { RuntimeConfig, dateAdd, PnPClientStorage, isFunc, extend, combinePaths, Dictionary, mergeOptions, objectDefinedNotNull, getGUID } from '@pnp/common';\nimport { __extends, __decorate } from 'tslib';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/**\r\n * Represents an exception with an HttpClient request\r\n *\r\n */\r\nvar ProcessHttpClientResponseException = /** @class */ (function (_super) {\r\n    __extends(ProcessHttpClientResponseException, _super);\r\n    function ProcessHttpClientResponseException(status, statusText, data) {\r\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.data = data;\r\n        _this.name = \"ProcessHttpClientResponseException\";\r\n        Logger.log({ data: _this.data, level: 3 /* Error */, message: _this.message });\r\n        return _this;\r\n    }\r\n    return ProcessHttpClientResponseException;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            // read the response as text, it may not be valid json\r\n            r.json().then(function (json) {\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: json,\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            }).catch(function (e) {\r\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\r\n                // the request to fail and log the error without parsing the body if anyone needs it for debugging\r\n                Logger.log({\r\n                    data: e,\r\n                    level: 2 /* Warning */,\r\n                    message: \"There was an error parsing the error response body. See data for details.\",\r\n                });\r\n                // include the headers as they contain diagnostic information\r\n                var data = {\r\n                    responseBody: \"[[body not available]]\",\r\n                    responseHeaders: r.headers,\r\n                };\r\n                reject(new ProcessHttpClientResponseException(r.status, r.statusText, data));\r\n            });\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (json.hasOwnProperty(\"d\")) {\r\n            if (json.d.hasOwnProperty(\"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (json.hasOwnProperty(\"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    __extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    __extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    __extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function () {\r\n    function LambdaParser(parser) {\r\n        this.parser = parser;\r\n    }\r\n    LambdaParser.prototype.parse = function (r) {\r\n        return this.parser(r);\r\n    };\r\n    return LambdaParser;\r\n}());\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result || null);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (typeof context.cachingOptions !== \"undefined\") {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (context.parser.hasOwnProperty(\"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar AlreadyInBatchException = /** @class */ (function (_super) {\r\n    __extends(AlreadyInBatchException, _super);\r\n    function AlreadyInBatchException(msg) {\r\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\r\n        var _this = _super.call(this, msg) || this;\r\n        _this.name = \"AlreadyInBatchException\";\r\n        Logger.error(_this);\r\n        return _this;\r\n    }\r\n    return AlreadyInBatchException;\r\n}(Error));\r\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Dictionary();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (typeof options !== \"undefined\") {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combinePaths(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combinePaths(this._parentUrl, path);\r\n        this.configureFrom(parent);\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    __extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw new AlreadyInBatchException();\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._requests = [];\r\n        this._dependencies = [];\r\n        this._resolveBatchDependencies = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._requests;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, requestId) {\r\n        var info = {\r\n            id: requestId,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._requests.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        var promise = new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        });\r\n        this._dependencies.push(promise);\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._resolveBatchDependencies.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._dependencies)\r\n            .then(function () { return Promise.all(_this._dependencies); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._resolveBatchDependencies); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, ProcessHttpClientResponseException, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, LambdaParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, AlreadyInBatchException, Queryable, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/packages/odata/dist/odata.es5.js\n// module id = 11\n// module chunks = 0","import * as tslib_1 from \"tslib\";\r\nimport { ClientSvcQueryable, MethodParams, property, } from \"@pnp/sp-clientsvc\";\r\nimport { stringIsNullOrEmpty } from \"@pnp/common\";\r\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(property(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = MethodParams.build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw new Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(ClientSvcQueryable));\r\nexport { Labels };\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(ClientSvcQueryable));\r\nexport { Label };\r\n//# sourceMappingURL=labels.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/labels.js\n// module id = 12\n// module chunks = 0","import { Session } from \"./session\";\r\n// export an existing session instance\r\nexport var taxonomy = new Session();\r\nexport * from \"./labels\";\r\nexport * from \"./session\";\r\nexport * from \"./termgroup\";\r\nexport * from \"./terms\";\r\nexport * from \"./termsets\";\r\nexport * from \"./termstores\";\r\nexport * from \"./types\";\r\n//# sourceMappingURL=taxonomy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/taxonomy.js\n// module id = 14\n// module chunks = 0","//----------------------------------------------------------------------\r\n// AdalJS v1.0.17\r\n// @preserve Copyright (c) Microsoft Open Technologies, Inc.\r\n// All Rights Reserved\r\n// Apache License 2.0\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.apache.org/licenses/LICENSE-2.0\r\n//id\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n//----------------------------------------------------------------------\r\n\r\nvar AuthenticationContext = (function () {\r\n\r\n    'use strict';\r\n\r\n    /**\r\n     * Configuration options for Authentication Context.\r\n     * @class config\r\n     *  @property {string} tenant - Your target tenant.\r\n     *  @property {string} clientId - Client ID assigned to your app by Azure Active Directory.\r\n     *  @property {string} redirectUri - Endpoint at which you expect to receive tokens.Defaults to `window.location.href`.\r\n     *  @property {string} instance - Azure Active Directory Instance.Defaults to `https://login.microsoftonline.com/`.\r\n     *  @property {Array} endpoints - Collection of {Endpoint-ResourceId} used for automatically attaching tokens in webApi calls.\r\n     *  @property {Boolean} popUp - Set this to true to enable login in a popup winodow instead of a full redirect.Defaults to `false`.\r\n     *  @property {string} localLoginUrl - Set this to redirect the user to a custom login page.\r\n     *  @property {function} displayCall - User defined function of handling the navigation to Azure AD authorization endpoint in case of login. Defaults to 'null'.\r\n     *  @property {string} postLogoutRedirectUri - Redirects the user to postLogoutRedirectUri after logout. Defaults is 'redirectUri'.\r\n     *  @property {string} cacheLocation - Sets browser storage to either 'localStorage' or sessionStorage'. Defaults to 'sessionStorage'.\r\n     *  @property {Array.<string>} anonymousEndpoints Array of keywords or URI's. Adal will not attach a token to outgoing requests that have these keywords or uri. Defaults to 'null'.\r\n     *  @property {number} expireOffsetSeconds If the cached token is about to be expired in the expireOffsetSeconds (in seconds), Adal will renew the token instead of using the cached token. Defaults to 300 seconds.\r\n     *  @property {string} correlationId Unique identifier used to map the request with the response. Defaults to RFC4122 version 4 guid (128 bits).\r\n     *  @property {number} loadFrameTimeout The number of milliseconds of inactivity before a token renewal response from AAD should be considered timed out.\r\n     */\r\n\r\n    /**\r\n     * Creates a new AuthenticationContext object.\r\n     * @constructor\r\n     * @param {config}  config               Configuration options for AuthenticationContext\r\n     */\r\n\r\n    AuthenticationContext = function (config) {\r\n        /**\r\n         * Enum for request type\r\n         * @enum {string}\r\n         */\r\n        this.REQUEST_TYPE = {\r\n            LOGIN: 'LOGIN',\r\n            RENEW_TOKEN: 'RENEW_TOKEN',\r\n            UNKNOWN: 'UNKNOWN'\r\n        };\r\n\r\n        this.RESPONSE_TYPE = {\r\n            ID_TOKEN_TOKEN: 'id_token token',\r\n            TOKEN: 'token'\r\n        };\r\n\r\n        /**\r\n         * Enum for storage constants\r\n         * @enum {string}\r\n         */\r\n        this.CONSTANTS = {\r\n            ACCESS_TOKEN: 'access_token',\r\n            EXPIRES_IN: 'expires_in',\r\n            ID_TOKEN: 'id_token',\r\n            ERROR_DESCRIPTION: 'error_description',\r\n            SESSION_STATE: 'session_state',\r\n            ERROR: 'error',\r\n            STORAGE: {\r\n                TOKEN_KEYS: 'adal.token.keys',\r\n                ACCESS_TOKEN_KEY: 'adal.access.token.key',\r\n                EXPIRATION_KEY: 'adal.expiration.key',\r\n                STATE_LOGIN: 'adal.state.login',\r\n                STATE_RENEW: 'adal.state.renew',\r\n                NONCE_IDTOKEN: 'adal.nonce.idtoken',\r\n                SESSION_STATE: 'adal.session.state',\r\n                USERNAME: 'adal.username',\r\n                IDTOKEN: 'adal.idtoken',\r\n                ERROR: 'adal.error',\r\n                ERROR_DESCRIPTION: 'adal.error.description',\r\n                LOGIN_REQUEST: 'adal.login.request',\r\n                LOGIN_ERROR: 'adal.login.error',\r\n                RENEW_STATUS: 'adal.token.renew.status',\r\n                ANGULAR_LOGIN_REQUEST: 'adal.angular.login.request'\r\n            },\r\n            RESOURCE_DELIMETER: '|',\r\n            CACHE_DELIMETER: '||',\r\n            LOADFRAME_TIMEOUT: 6000,\r\n            TOKEN_RENEW_STATUS_CANCELED: 'Canceled',\r\n            TOKEN_RENEW_STATUS_COMPLETED: 'Completed',\r\n            TOKEN_RENEW_STATUS_IN_PROGRESS: 'In Progress',\r\n            LOGGING_LEVEL: {\r\n                ERROR: 0,\r\n                WARN: 1,\r\n                INFO: 2,\r\n                VERBOSE: 3\r\n            },\r\n            LEVEL_STRING_MAP: {\r\n                0: 'ERROR:',\r\n                1: 'WARNING:',\r\n                2: 'INFO:',\r\n                3: 'VERBOSE:'\r\n            },\r\n            POPUP_WIDTH: 483,\r\n            POPUP_HEIGHT: 600\r\n        };\r\n\r\n        if (AuthenticationContext.prototype._singletonInstance) {\r\n            return AuthenticationContext.prototype._singletonInstance;\r\n        }\r\n        AuthenticationContext.prototype._singletonInstance = this;\r\n\r\n        // public\r\n        this.instance = 'https://login.microsoftonline.com/';\r\n        this.config = {};\r\n        this.callback = null;\r\n        this.popUp = false;\r\n        this.isAngular = false;\r\n\r\n        // private\r\n        this._user = null;\r\n        this._activeRenewals = {};\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n        this._renewStates = [];\r\n        this._callBackMappedToRenewStates = {};\r\n        this._callBacksMappedToRenewStates = {};\r\n        this._openedWindows = [];\r\n        this._requestType = this.REQUEST_TYPE.LOGIN;\r\n        window._adalInstance = this;\r\n\r\n        // validate before constructor assignments\r\n        if (config.displayCall && typeof config.displayCall !== 'function') {\r\n            throw new Error('displayCall is not a function');\r\n        }\r\n\r\n        if (!config.clientId) {\r\n            throw new Error('clientId is required');\r\n        }\r\n\r\n        this.config = this._cloneConfig(config);\r\n\r\n        if (this.config.navigateToLoginRequestUrl === undefined)\r\n            this.config.navigateToLoginRequestUrl = true;\r\n\r\n        if (this.config.popUp)\r\n            this.popUp = true;\r\n\r\n        if (this.config.callback && typeof this.config.callback === 'function')\r\n            this.callback = this.config.callback;\r\n\r\n        if (this.config.instance) {\r\n            this.instance = this.config.instance;\r\n        }\r\n\r\n        // App can request idtoken for itself using clientid as resource\r\n        if (!this.config.loginResource) {\r\n            this.config.loginResource = this.config.clientId;\r\n        }\r\n\r\n        // redirect and logout_redirect are set to current location by default\r\n        if (!this.config.redirectUri) {\r\n            // strip off query parameters or hashes from the redirect uri as AAD does not allow those.\r\n            this.config.redirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.postLogoutRedirectUri) {\r\n            // strip off query parameters or hashes from the post logout redirect uri as AAD does not allow those.\r\n            this.config.postLogoutRedirectUri = window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n        }\r\n\r\n        if (!this.config.anonymousEndpoints) {\r\n            this.config.anonymousEndpoints = [];\r\n        }\r\n\r\n        if (this.config.isAngular) {\r\n            this.isAngular = this.config.isAngular;\r\n        }\r\n\r\n        if (this.config.loadFrameTimeout) {\r\n            this.CONSTANTS.LOADFRAME_TIMEOUT = this.config.loadFrameTimeout;\r\n        }\r\n    };\r\n\r\n    if (typeof window !== 'undefined') {\r\n        window.Logging = {\r\n            piiLoggingEnabled: false,\r\n            level: 0,\r\n            log: function (message) { }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initiates the login process by redirecting the user to Azure AD authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.login = function () {\r\n        if (this._loginInProgress) {\r\n            this.info(\"Login in progress\");\r\n            return;\r\n        }\r\n\r\n        this._loginInProgress = true;\r\n\r\n        // Token is not present and user needs to login\r\n        var expectedState = this._guid();\r\n        this.config.state = expectedState;\r\n        this._idTokenNonce = this._guid();\r\n        var loginStartPage = this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);\r\n\r\n        if (!loginStartPage || loginStartPage === \"\") {\r\n            loginStartPage = window.location.href;\r\n        }\r\n        else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, \"\")\r\n        }\r\n\r\n        this.verbose('Expected state: ' + expectedState + ' startPage:' + loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, loginStartPage);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, expectedState, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        var urlNavigate = this._getNavigateUrl('id_token', null) + '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n\r\n        if (this.config.displayCall) {\r\n            // User defined way of handling the navigation\r\n            this.config.displayCall(urlNavigate);\r\n        }\r\n        else if (this.popUp) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');// so requestInfo does not match redirect case\r\n            this._renewStates.push(expectedState);\r\n            this.registerCallback(expectedState, this.config.clientId, this.callback);\r\n            this._loginPopup(urlNavigate);\r\n        }\r\n        else {\r\n            this.promptUser(urlNavigate);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Configures popup window for login.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n            * adding winLeft and winTop to account for dual monitor\r\n            * using screenLeft and screenTop for IE8 and earlier\r\n            */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n            * window.innerWidth displays browser window's height and width excluding toolbars\r\n            * using document.documentElement.clientWidth for IE8 and earlier\r\n            */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n\r\n            var popupWindow = window.open(urlNavigate, title, 'width=' + popUpWidth + ', height=' + popUpHeight + ', top=' + top + ', left=' + left);\r\n\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.warn('Error opening popup, ' + e.message);\r\n            this._loginInProgress = false;\r\n            this._acquireTokenInProgress = false;\r\n            return null;\r\n        }\r\n    }\r\n\r\n    AuthenticationContext.prototype._handlePopupError = function (loginCallback, resource, error, errorDesc, loginError) {\r\n        this.warn(errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, error);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, errorDesc);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, loginError);\r\n\r\n        if (resource && this._activeRenewals[resource]) {\r\n            this._activeRenewals[resource] = null;\r\n        }\r\n\r\n        this._loginInProgress = false;\r\n        this._acquireTokenInProgress = false;\r\n\r\n        if (loginCallback) {\r\n            loginCallback(errorDesc, null, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After authorization, the user will be sent to your specified redirect_uri with the user's bearer token\r\n     * attached to the URI fragment as an id_token field. It closes popup window after redirection.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loginPopup = function (urlNavigate, resource, callback) {\r\n        var popupWindow = this._openPopup(urlNavigate, \"login\", this.CONSTANTS.POPUP_WIDTH, this.CONSTANTS.POPUP_HEIGHT);\r\n        var loginCallback = callback || this.callback;\r\n\r\n        if (popupWindow == null) {\r\n            var error = 'Error opening popup';\r\n            var errorDesc = 'Popup Window is null. This can happen if you are using IE';\r\n            this._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n            return;\r\n        }\r\n\r\n        this._openedWindows.push(popupWindow);\r\n\r\n        if (this.config.redirectUri.indexOf('#') != -1) {\r\n            var registeredRedirectUri = this.config.redirectUri.split(\"#\")[0];\r\n        }\r\n\r\n        else {\r\n            var registeredRedirectUri = this.config.redirectUri;\r\n        }\r\n\r\n        var that = this;\r\n\r\n        var pollTimer = window.setInterval(function () {\r\n            if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                var error = 'Popup Window closed';\r\n                var errorDesc = 'Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge'\r\n\r\n                if (that.isAngular) {\r\n                    that._broadcast('adal:popUpClosed', errorDesc + that.CONSTANTS.RESOURCE_DELIMETER + error);\r\n                }\r\n\r\n                that._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);\r\n                window.clearInterval(pollTimer);\r\n                return;\r\n            }\r\n            try {\r\n                var popUpWindowLocation = popupWindow.location;\r\n                if (encodeURI(popUpWindowLocation.href).indexOf(encodeURI(registeredRedirectUri)) != -1) {\r\n                    if (that.isAngular) {\r\n                        that._broadcast('adal:popUpHashChanged', popUpWindowLocation.hash);\r\n                    }\r\n                    else {\r\n                        that.handleWindowCallback(popUpWindowLocation.hash);\r\n                    }\r\n\r\n                    window.clearInterval(pollTimer);\r\n                    that._loginInProgress = false;\r\n                    that._acquireTokenInProgress = false;\r\n                    that.info(\"Closing popup window\");\r\n                    that._openedWindows = [];\r\n                    popupWindow.close();\r\n                    return;\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }, 1);\r\n    };\r\n\r\n    AuthenticationContext.prototype._broadcast = function (eventName, data) {\r\n        // Custom Event is not supported in IE, below IIFE will polyfill the CustomEvent() constructor functionality in Internet Explorer 9 and higher\r\n        (function () {\r\n\r\n            if (typeof window.CustomEvent === \"function\") {\r\n                return false;\r\n            }\r\n\r\n            function CustomEvent(event, params) {\r\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n                var evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n\r\n    AuthenticationContext.prototype.loginInProgress = function () {\r\n        return this._loginInProgress;\r\n    };\r\n\r\n    /**\r\n     * Checks for the resource in the cache. By default, cache location is Session Storage\r\n     * @ignore\r\n     * @returns {Boolean} 'true' if login is in progress, else returns 'false'.\r\n     */\r\n    AuthenticationContext.prototype._hasResource = function (key) {\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n        return keys && !this._isEmpty(keys) && (keys.indexOf(key + this.CONSTANTS.RESOURCE_DELIMETER) > -1);\r\n    };\r\n\r\n    /**\r\n     * Gets token for the specified resource from the cache.\r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @returns {string} token if if it exists and not expired, otherwise null.\r\n     */\r\n    AuthenticationContext.prototype.getCachedToken = function (resource) {\r\n        if (!this._hasResource(resource)) {\r\n            return null;\r\n        }\r\n\r\n        var token = this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource);\r\n        var expiry = this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource);\r\n\r\n        // If expiration is within offset, it will force renew\r\n        var offset = this.config.expireOffsetSeconds || 300;\r\n\r\n        if (expiry && (expiry > this._now() + offset)) {\r\n            return token;\r\n        } else {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n    * User information from idtoken.\r\n    *  @class User\r\n    *  @property {string} userName - username assigned from upn or email.\r\n    *  @property {object} profile - properties parsed from idtoken.\r\n    */\r\n\r\n    /**\r\n     * If user object exists, returns it. Else creates a new user object by decoding id_token from the cache.\r\n     * @returns {User} user object\r\n     */\r\n    AuthenticationContext.prototype.getCachedUser = function () {\r\n        if (this._user) {\r\n            return this._user;\r\n        }\r\n\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n        this._user = this._createUser(idtoken);\r\n        return this._user;\r\n    };\r\n\r\n    /**\r\n     * Adds the passed callback to the array of callbacks for the specified resource and puts the array on the window object. \r\n     * @param {string}   resource A URI that identifies the resource for which the token is requested.\r\n     * @param {string}   expectedState A unique identifier (guid).\r\n     * @param {tokenCallback} callback - The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.registerCallback = function (expectedState, resource, callback) {\r\n        this._activeRenewals[resource] = expectedState;\r\n\r\n        if (!this._callBacksMappedToRenewStates[expectedState]) {\r\n            this._callBacksMappedToRenewStates[expectedState] = [];\r\n        }\r\n\r\n        var self = this;\r\n        this._callBacksMappedToRenewStates[expectedState].push(callback);\r\n\r\n        if (!this._callBackMappedToRenewStates[expectedState]) {\r\n            this._callBackMappedToRenewStates[expectedState] = function (errorDesc, token, error, tokenType) {\r\n                self._activeRenewals[resource] = null;\r\n\r\n                for (var i = 0; i < self._callBacksMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        self._callBacksMappedToRenewStates[expectedState][i](errorDesc, token, error, tokenType);\r\n                    }\r\n                    catch (error) {\r\n                        self.warn(error);\r\n                    }\r\n                }\r\n\r\n                self._callBacksMappedToRenewStates[expectedState] = null;\r\n                self._callBackMappedToRenewStates[expectedState] = null;\r\n            };\r\n        }\r\n    };\r\n\r\n    // var errorResponse = {error:'', error_description:''};\r\n    // var token = 'string token';\r\n    // callback(errorResponse, token)\r\n    // with callback\r\n    /**\r\n     * Acquires access token with hidden iframe\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewToken = function (resource, callback, responseType) {\r\n        // use iframe to try to renew token\r\n        // use given resource to create new authz url\r\n        this.info('renewToken is called for resource:' + resource);\r\n        var frameHandle = this._addAdalFrame('adalRenewFrame' + resource);\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        responseType = responseType || 'token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n\r\n        if (responseType === this.RESPONSE_TYPE.ID_TOKEN_TOKEN) {\r\n            this._idTokenNonce = this._guid();\r\n            this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n            urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        }\r\n\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalRenewFrame' + resource, resource);\r\n\r\n    };\r\n\r\n    /**\r\n     * Renews idtoken for app's own backend when resource is clientId and calls the callback with token/error\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._renewIdToken = function (callback, responseType) {\r\n        // use iframe to try to renew token\r\n        this.info('renewIdToken is called');\r\n        var frameHandle = this._addAdalFrame('adalIdTokenFrame');\r\n        var expectedState = this._guid() + '|' + this.config.clientId;\r\n        this._idTokenNonce = this._guid();\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);\r\n        this.config.state = expectedState;\r\n        // renew happens in iframe, so it keeps javascript context\r\n        this._renewStates.push(expectedState);\r\n        this.verbose('Renew Idtoken Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=none\r\n        var resource = responseType === null || typeof (responseType) === \"undefined\" ? null : this.config.clientId;\r\n        var responseType = responseType || 'id_token';\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=none';\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);\r\n        this.registerCallback(expectedState, this.config.clientId, callback);\r\n        this.verbosePii('Navigate to:' + urlNavigate);\r\n        frameHandle.src = 'about:blank';\r\n        this._loadFrameTimeout(urlNavigate, 'adalIdTokenFrame', this.config.clientId);\r\n    };\r\n\r\n    /**\r\n     * Checks if the authorization endpoint URL contains query string parameters\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlContainsQueryStringParameter = function (name, url) {\r\n        // regex to detect pattern of a ? or & followed by the name parameter and an equals character\r\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=\");\r\n        return regex.test(url);\r\n    }\r\n\r\n    /**\r\n     * Removes the query string parameter from the authorization endpoint URL if it exists\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._urlRemoveQueryStringParameter = function (url, name) {\r\n        // we remove &name=value, name=value& and name=value\r\n        // &name=value\r\n        var regex = new RegExp('(\\\\&' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        // name=value&\r\n        regex = new RegExp('(' + name + '=)[^\\&]+&');\r\n        url = url.replace(regex, '');\r\n        // name=value\r\n        regex = new RegExp('(' + name + '=)[^\\&]+');\r\n        url = url.replace(regex, '');\r\n        return url;\r\n    }\r\n\r\n    // Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left\r\n    // registered when network errors occur and subsequent token requests for same resource are registered to the pending request\r\n    /**\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrameTimeout = function (urlNavigation, frameName, resource) {\r\n        //set iframe session to pending\r\n        this.verbose('Set loading state to pending for: ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS);\r\n        this._loadFrame(urlNavigation, frameName);\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self._getItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource) === self.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS) {\r\n                // fail the iframe session if it's in pending state\r\n                self.verbose('Loading frame has timed out after: ' + (self.CONSTANTS.LOADFRAME_TIMEOUT / 1000) + ' seconds for resource ' + resource);\r\n                var expectedState = self._activeRenewals[resource];\r\n\r\n                if (expectedState && self._callBackMappedToRenewStates[expectedState]) {\r\n                    self._callBackMappedToRenewStates[expectedState]('Token renewal operation failed due to timeout', null, 'Token Renewal Failed');\r\n                }\r\n\r\n                self._saveItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource, self.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED);\r\n            }\r\n        }, self.CONSTANTS.LOADFRAME_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._loadFrame = function (urlNavigate, frameName) {\r\n        // This trick overcomes iframe navigation in IE\r\n        // IE does not load the page consistently in iframe\r\n        var self = this;\r\n        self.info('LoadFrame: ' + frameName);\r\n        var frameCheck = frameName;\r\n        setTimeout(function () {\r\n            var frameHandle = self._addAdalFrame(frameCheck);\r\n\r\n            if (frameHandle.src === '' || frameHandle.src === 'about:blank') {\r\n                frameHandle.src = urlNavigate;\r\n                self._loadFrame(urlNavigate, frameCheck);\r\n            }\r\n\r\n        }, 500);\r\n    };\r\n\r\n    /**\r\n     * @callback tokenCallback\r\n     * @param {string} error_description error description returned from AAD if token request fails.\r\n     * @param {string} token token returned from AAD if token request is successful.\r\n     * @param {string} error error message returned from AAD if token request fails.\r\n     */\r\n\r\n    /**\r\n     * Acquires token from the cache if it is not expired. Otherwise sends request to AAD to obtain a new token.\r\n     * @param {string}   resource  ResourceUri identifying the target resource\r\n     * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n     */\r\n    AuthenticationContext.prototype.acquireToken = function (resource, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var token = this.getCachedToken(resource);\r\n\r\n        if (token) {\r\n            this.info('Token is already in cache for resource:' + resource);\r\n            callback(null, token, null);\r\n            return;\r\n        }\r\n\r\n        if (!this._user && !(this.config.extraQueryParameter && this.config.extraQueryParameter.indexOf('login_hint') !== -1)) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        // renew attempt with iframe\r\n        // Already renewing for this resource, callback when we get the token.\r\n        if (this._activeRenewals[resource]) {\r\n            // Active renewals contains the state for each renewal.\r\n            this.registerCallback(this._activeRenewals[resource], resource, callback);\r\n        }\r\n        else {\r\n            this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n            if (resource === this.config.clientId) {\r\n                // App uses idtoken to send to api endpoints\r\n                // Default resource is tracked as clientid to store this token\r\n                if (this._user) {\r\n                    this.verbose('renewing idtoken');\r\n                    this._renewIdToken(callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewIdToken(callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            } else {\r\n                if (this._user) {\r\n                    this.verbose('renewing access_token');\r\n                    this._renewToken(resource, callback);\r\n                }\r\n                else {\r\n                    this.verbose('renewing idtoken and access_token');\r\n                    this._renewToken(resource, callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n  * Acquires token (interactive flow using a popUp window) by sending request to AAD to obtain a new token.\r\n  * @param {string}   resource  ResourceUri identifying the target resource\r\n  * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n  * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.\r\n  */\r\n    AuthenticationContext.prototype.acquireTokenPopup = function (resource, extraQueryParameters, claims, callback) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this._renewStates.push(expectedState);\r\n        this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this.registerCallback(expectedState, resource, callback);\r\n        this._loginPopup(urlNavigate, resource, callback);\r\n\r\n    };\r\n\r\n    /**\r\n      * Acquires token (interactive flow using a redirect) by sending request to AAD to obtain a new token. In this case the callback passed in the Authentication\r\n      * request constructor will be called.\r\n      * @param {string}   resource  ResourceUri identifying the target resource\r\n      * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request\r\n      */\r\n    AuthenticationContext.prototype.acquireTokenRedirect = function (resource, extraQueryParameters, claims) {\r\n        if (this._isEmpty(resource)) {\r\n            this.warn('resource is required');\r\n            callback('resource is required', null, 'resource is required');\r\n            return;\r\n        }\r\n\r\n        var callback = this.callback;\r\n\r\n        if (!this._user) {\r\n            this.warn('User login is required');\r\n            callback('User login is required', null, 'login required');\r\n            return;\r\n        }\r\n\r\n        if (this._acquireTokenInProgress) {\r\n            this.warn(\"Acquire token interactive is already in progress\")\r\n            callback(\"Acquire token interactive is already in progress\", null, \"Acquire token interactive is already in progress\");\r\n            return;\r\n        }\r\n\r\n        var expectedState = this._guid() + '|' + resource;\r\n        this.config.state = expectedState;\r\n        this.verbose('Renew token Expected state: ' + expectedState);\r\n\r\n        // remove the existing prompt=... query parameter and add prompt=select_account\r\n        var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');\r\n        urlNavigate = urlNavigate + '&prompt=select_account';\r\n        if (extraQueryParameters) {\r\n            urlNavigate += extraQueryParameters;\r\n        }\r\n\r\n        if (claims && (urlNavigate.indexOf(\"&claims\") === -1)) {\r\n            urlNavigate += '&claims=' + encodeURIComponent(claims);\r\n        }\r\n        else if (claims && (urlNavigate.indexOf(\"&claims\") !== -1)) {\r\n            throw new Error('Claims cannot be passed as an extraQueryParameter');\r\n        }\r\n\r\n        urlNavigate = this._addHintParameters(urlNavigate);\r\n        this._acquireTokenInProgress = true;\r\n        this.info('acquireToken interactive is called for the resource ' + resource);\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, window.location.href);\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, expectedState, true);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n    /**\r\n     * Redirects the browser to Azure AD authorization endpoint.\r\n     * @param {string}   urlNavigate  Url of the authorization endpoint.\r\n     */\r\n    AuthenticationContext.prototype.promptUser = function (urlNavigate) {\r\n        if (urlNavigate) {\r\n            this.infoPii('Navigate to:' + urlNavigate);\r\n            window.location.replace(urlNavigate);\r\n        } else {\r\n            this.info('Navigate url is empty');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears cache items.\r\n     */\r\n    AuthenticationContext.prototype.clearCache = function () {\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._renewStates = [];\r\n        this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');\r\n        var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);\r\n\r\n        if (!this._isEmpty(keys)) {\r\n            keys = keys.split(this.CONSTANTS.RESOURCE_DELIMETER);\r\n            for (var i = 0; i < keys.length && keys[i] !== \"\"; i++) {\r\n                this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + keys[i], '');\r\n                this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + keys[i], 0);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, '');\r\n    };\r\n\r\n    /**\r\n     * Clears cache items for a given resource.\r\n     * @param {string}  resource a URI that identifies the resource.\r\n     */\r\n    AuthenticationContext.prototype.clearCacheForResource = function (resource) {\r\n        this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        if (this._hasResource(resource)) {\r\n            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');\r\n            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Redirects user to logout endpoint.\r\n     * After logout, it will redirect to postLogoutRedirectUri if added as a property on the config object.\r\n     */\r\n    AuthenticationContext.prototype.logOut = function () {\r\n        this.clearCache();\r\n        this._user = null;\r\n        var urlNavigate;\r\n\r\n        if (this.config.logOutUri) {\r\n            urlNavigate = this.config.logOutUri;\r\n        } else {\r\n            var tenant = 'common';\r\n            var logout = '';\r\n\r\n            if (this.config.tenant) {\r\n                tenant = this.config.tenant;\r\n            }\r\n\r\n            if (this.config.postLogoutRedirectUri) {\r\n                logout = 'post_logout_redirect_uri=' + encodeURIComponent(this.config.postLogoutRedirectUri);\r\n            }\r\n\r\n            urlNavigate = this.instance + tenant + '/oauth2/logout?' + logout;\r\n        }\r\n\r\n        this.infoPii('Logout navigate to: ' + urlNavigate);\r\n        this.promptUser(urlNavigate);\r\n    };\r\n\r\n    AuthenticationContext.prototype._isEmpty = function (str) {\r\n        return (typeof str === 'undefined' || !str || 0 === str.length);\r\n    };\r\n\r\n    /**\r\n     * @callback userCallback\r\n     * @param {string} error error message if user info is not available.\r\n     * @param {User} user user object retrieved from the cache.\r\n     */\r\n\r\n    /**\r\n     * Calls the passed in callback with the user object or error message related to the user.\r\n     * @param {userCallback} callback - The callback provided by the caller. It will be called with user or error.\r\n     */\r\n    AuthenticationContext.prototype.getUser = function (callback) {\r\n        // IDToken is first call\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('callback is not a function');\r\n        }\r\n\r\n        // user in memory\r\n        if (this._user) {\r\n            callback(null, this._user);\r\n            return;\r\n        }\r\n\r\n        // frame is used to get idtoken\r\n        var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);\r\n\r\n        if (!this._isEmpty(idtoken)) {\r\n            this.info('User exists in cache: ');\r\n            this._user = this._createUser(idtoken);\r\n            callback(null, this._user);\r\n        } else {\r\n            this.warn('User information is not available');\r\n            callback('User information is not available', null);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time.\r\n     * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addHintParameters = function (urlNavigate) {\r\n        //If you don�t use prompt=none, then if the session does not exist, there will be a failure.\r\n        //If sid is sent alongside domain or login hints, there will be a failure since request is ambiguous.\r\n        //If sid is sent with a prompt value other than none or attempt_none, there will be a failure since the request is ambiguous.\r\n\r\n        if (this._user && this._user.profile) {\r\n            if (this._user.profile.sid && urlNavigate.indexOf('&prompt=none') !== -1) {\r\n                // don't add sid twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"sid\", urlNavigate)) {\r\n                    // add sid\r\n                    urlNavigate += '&sid=' + encodeURIComponent(this._user.profile.sid);\r\n                }\r\n            }\r\n            else if (this._user.profile.upn) {\r\n                // don't add login_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"login_hint\", urlNavigate)) {\r\n                    // add login_hint\r\n                    urlNavigate += '&login_hint=' + encodeURIComponent(this._user.profile.upn);\r\n                }\r\n                // don't add domain_hint twice if user provided it in the extraQueryParameter value\r\n                if (!this._urlContainsQueryStringParameter(\"domain_hint\", urlNavigate) && this._user.profile.upn.indexOf('@') > -1) {\r\n                    var parts = this._user.profile.upn.split('@');\r\n                    // local part can include @ in quotes. Sending last part handles that.\r\n                    urlNavigate += '&domain_hint=' + encodeURIComponent(parts[parts.length - 1]);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return urlNavigate;\r\n    }\r\n\r\n    /**\r\n     * Creates a user object by decoding the id_token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._createUser = function (idToken) {\r\n        var user = null;\r\n        var parsedJson = this._extractIdToken(idToken);\r\n        if (parsedJson && parsedJson.hasOwnProperty('aud')) {\r\n            if (parsedJson.aud.toLowerCase() === this.config.clientId.toLowerCase()) {\r\n\r\n                user = {\r\n                    userName: '',\r\n                    profile: parsedJson\r\n                };\r\n\r\n                if (parsedJson.hasOwnProperty('upn')) {\r\n                    user.userName = parsedJson.upn;\r\n                } else if (parsedJson.hasOwnProperty('email')) {\r\n                    user.userName = parsedJson.email;\r\n                }\r\n            } else {\r\n                this.warn('IdToken has invalid aud field');\r\n            }\r\n\r\n        }\r\n\r\n        return user;\r\n    };\r\n\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHash = function (hash) {\r\n        if (hash.indexOf('#/') > -1) {\r\n            hash = hash.substring(hash.indexOf('#/') + 2);\r\n        } else if (hash.indexOf('#') > -1) {\r\n            hash = hash.substring(1);\r\n        }\r\n\r\n        return hash;\r\n    };\r\n\r\n    /**\r\n     * Checks if the URL fragment contains access token, id token or error_description.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {Boolean} true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    AuthenticationContext.prototype.isCallback = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        return (\r\n            parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n            parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets login error\r\n     * @returns {string} error message related to login.\r\n     */\r\n    AuthenticationContext.prototype.getLoginError = function () {\r\n        return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR);\r\n    };\r\n\r\n    /**\r\n     * Request info object created from the response received from AAD.\r\n     *  @class RequestInfo\r\n     *  @property {object} parameters - object comprising of fields such as id_token/error, session_state, state, e.t.c.\r\n     *  @property {REQUEST_TYPE} requestType - either LOGIN, RENEW_TOKEN or UNKNOWN.\r\n     *  @property {boolean} stateMatch - true if state is valid, false otherwise.\r\n     *  @property {string} stateResponse - unique guid used to match the response with the request.\r\n     *  @property {boolean} valid - true if requestType contains id_token, access_token or error, false otherwise.\r\n     */\r\n\r\n    /**\r\n     * Creates a requestInfo object from the URL fragment and returns it.\r\n     * @returns {RequestInfo} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     */\r\n    AuthenticationContext.prototype.getRequestInfo = function (hash) {\r\n        hash = this._getHash(hash);\r\n        var parameters = this._deserialize(hash);\r\n        var requestInfo = {\r\n            valid: false,\r\n            parameters: {},\r\n            stateMatch: false,\r\n            stateResponse: '',\r\n            requestType: this.REQUEST_TYPE.UNKNOWN,\r\n        };\r\n\r\n        if (parameters) {\r\n            requestInfo.parameters = parameters;\r\n            if (parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) ||\r\n                parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n\r\n                requestInfo.valid = true;\r\n\r\n                // which call\r\n                var stateResponse = '';\r\n                if (parameters.hasOwnProperty('state')) {\r\n                    this.verbose('State: ' + parameters.state);\r\n                    stateResponse = parameters.state;\r\n                } else {\r\n                    this.warn('No state returned');\r\n                    return requestInfo;\r\n                }\r\n\r\n                requestInfo.stateResponse = stateResponse;\r\n\r\n                // async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n                // incoming callback needs to be looked up to find the request type\r\n                if (this._matchState(requestInfo)) { // loginRedirect or acquireTokenRedirect\r\n                    return requestInfo;\r\n                }\r\n\r\n                // external api requests may have many renewtoken requests for different resource\r\n                if (!requestInfo.stateMatch && window.parent) {\r\n                    requestInfo.requestType = this._requestType;\r\n                    var statesInParentContext = this._renewStates;\r\n                    for (var i = 0; i < statesInParentContext.length; i++) {\r\n                        if (statesInParentContext[i] === requestInfo.stateResponse) {\r\n                            requestInfo.stateMatch = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return requestInfo;\r\n    };\r\n\r\n    /**\r\n    * Matches nonce from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchNonce = function (user) {\r\n        var requestNonce = this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);\r\n\r\n        if (requestNonce) {\r\n            requestNonce = requestNonce.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < requestNonce.length; i++) {\r\n                if (requestNonce[i] === user.profile.nonce) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n    * Matches state from the request with the response.\r\n    * @ignore\r\n    */\r\n    AuthenticationContext.prototype._matchState = function (requestInfo) {\r\n        var loginStates = this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);\r\n\r\n        if (loginStates) {\r\n            loginStates = loginStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < loginStates.length; i++) {\r\n                if (loginStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.LOGIN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        var acquireTokenStates = this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);\r\n\r\n        if (acquireTokenStates) {\r\n            acquireTokenStates = acquireTokenStates.split(this.CONSTANTS.CACHE_DELIMETER);\r\n            for (var i = 0; i < acquireTokenStates.length; i++) {\r\n                if (acquireTokenStates[i] === requestInfo.stateResponse) {\r\n                    requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;\r\n                    requestInfo.stateMatch = true;\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Extracts resource value from state.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getResourceFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf('|');\r\n\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n\r\n        return '';\r\n    };\r\n\r\n    /**\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.\r\n     */\r\n    AuthenticationContext.prototype.saveTokenFromHash = function (requestInfo) {\r\n        this.info('State status:' + requestInfo.stateMatch + '; Request type:' + requestInfo.requestType);\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');\r\n        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');\r\n\r\n        var resource = this._getResourceFromState(requestInfo.stateResponse);\r\n\r\n        // Record error\r\n        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)) {\r\n            this.infoPii('Error :' + requestInfo.parameters.error + '; Error description:' + requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR, requestInfo.parameters.error);\r\n            this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);\r\n\r\n            if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                this._loginInProgress = false;\r\n                this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, requestInfo.parameters.error_description);\r\n            }\r\n        } else {\r\n            // It must verify the state from redirect\r\n            if (requestInfo.stateMatch) {\r\n                // record tokens to storage if exists\r\n                this.info('State is right');\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)) {\r\n                    this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, requestInfo.parameters[this.CONSTANTS.SESSION_STATE]);\r\n                }\r\n\r\n                var keys;\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)) {\r\n                    this.info('Fragment has access token');\r\n\r\n                    if (!this._hasResource(resource)) {\r\n                        keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                        this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                    }\r\n\r\n                    // save token with related resource\r\n                    this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN]);\r\n                    this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._expiresIn(requestInfo.parameters[this.CONSTANTS.EXPIRES_IN]));\r\n                }\r\n\r\n                if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {\r\n                    this.info('Fragment has id token');\r\n                    this._loginInProgress = false;\r\n                    this._user = this._createUser(requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    if (this._user && this._user.profile) {\r\n                        if (!this._matchNonce(this._user)) {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Nonce received: ' + this._user.profile.nonce + ' is not same as requested: ' +\r\n                                this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN));\r\n                            this._user = null;\r\n                        } else {\r\n                            this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n\r\n                            // Save idtoken as access token for app itself\r\n                            resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\r\n\r\n                            if (!this._hasResource(resource)) {\r\n                                keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\r\n                                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\r\n                            }\r\n\r\n                            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);\r\n                        }\r\n                    }\r\n                    else {\r\n                        requestInfo.parameters['error'] = 'invalid id_token';\r\n                        requestInfo.parameters['error_description'] = 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN];\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'invalid id_token');\r\n                        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\r\n                    }\r\n                }\r\n            } else {\r\n                requestInfo.parameters['error'] = 'Invalid_state';\r\n                requestInfo.parameters['error_description'] = 'Invalid_state. state: ' + requestInfo.stateResponse;\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Invalid_state');\r\n                this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid_state. state: ' + requestInfo.stateResponse);\r\n            }\r\n        }\r\n\r\n        this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED);\r\n    };\r\n\r\n    /**\r\n     * Gets resource for given endpoint if mapping is provided with config.\r\n     * @param {string} endpoint  -  The URI for which the resource Id is requested.\r\n     * @returns {string} resource for this API endpoint.\r\n     */\r\n    AuthenticationContext.prototype.getResourceForEndpoint = function (endpoint) {\r\n\r\n        // if user specified list of anonymous endpoints, no need to send token to these endpoints, return null.\r\n        if (this.config && this.config.anonymousEndpoints) {\r\n            for (var i = 0; i < this.config.anonymousEndpoints.length; i++) {\r\n                if (endpoint.indexOf(this.config.anonymousEndpoints[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.config && this.config.endpoints) {\r\n            for (var configEndpoint in this.config.endpoints) {\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(configEndpoint) > -1) {\r\n                    return this.config.endpoints[configEndpoint];\r\n                }\r\n            }\r\n        }\r\n\r\n        // default resource will be clientid if nothing specified\r\n        // App will use idtoken for calls to itself\r\n        // check if it's staring from http or https, needs to match with app host\r\n        if (endpoint.indexOf('http://') > -1 || endpoint.indexOf('https://') > -1) {\r\n            if (this._getHostFromUri(endpoint) === this._getHostFromUri(this.config.redirectUri)) {\r\n                return this.config.loginResource;\r\n            }\r\n        }\r\n        else {\r\n            // in angular level, the url for $http interceptor call could be relative url,\r\n            // if it's relative call, we'll treat it as app backend call.            \r\n            return this.config.loginResource;\r\n        }\r\n\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Strips the protocol part of the URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getHostFromUri = function (uri) {\r\n        // remove http:// or https:// from uri\r\n        var extractedUri = String(uri).replace(/^(https?:)\\/\\//, '');\r\n        extractedUri = extractedUri.split('/')[0];\r\n        return extractedUri;\r\n    };\r\n\r\n    /**\r\n     * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    AuthenticationContext.prototype.handleWindowCallback = function (hash) {\r\n        // This is for regular javascript usage for redirect handling\r\n        // need to make sure this is for callback\r\n        if (hash == null) {\r\n            hash = window.location.hash;\r\n        }\r\n\r\n        if (this.isCallback(hash)) {\r\n            var self = null;\r\n            var isPopup = false;\r\n\r\n            if (this._openedWindows.length > 0 && this._openedWindows[this._openedWindows.length - 1].opener\r\n                && this._openedWindows[this._openedWindows.length - 1].opener._adalInstance) {\r\n                self = this._openedWindows[this._openedWindows.length - 1].opener._adalInstance;\r\n                isPopup = true;\r\n            }\r\n            else if (window.parent && window.parent._adalInstance) {\r\n                self = window.parent._adalInstance;\r\n            }\r\n\r\n            var requestInfo = self.getRequestInfo(hash);\r\n            var token, tokenReceivedCallback, tokenType = null;\r\n\r\n            if (isPopup || window.parent !== window) {\r\n                tokenReceivedCallback = self._callBackMappedToRenewStates[requestInfo.stateResponse];\r\n            }\r\n            else {\r\n                tokenReceivedCallback = self.callback;\r\n            }\r\n\r\n            self.info(\"Returned from redirect url\");\r\n            self.saveTokenFromHash(requestInfo);\r\n\r\n            if ((requestInfo.requestType === this.REQUEST_TYPE.RENEW_TOKEN) && window.parent) {\r\n                if (window.parent !== window) {\r\n                    self.verbose(\"Window is in iframe, acquiring token silently\");\r\n                } else {\r\n                    self.verbose(\"acquiring token interactive in progress\");\r\n                }\r\n\r\n                token = requestInfo.parameters[self.CONSTANTS.ACCESS_TOKEN] || requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ACCESS_TOKEN;\r\n            } else if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {\r\n                token = requestInfo.parameters[self.CONSTANTS.ID_TOKEN];\r\n                tokenType = self.CONSTANTS.ID_TOKEN;\r\n            }\r\n\r\n            var errorDesc = requestInfo.parameters[self.CONSTANTS.ERROR_DESCRIPTION];\r\n            var error = requestInfo.parameters[self.CONSTANTS.ERROR];\r\n            try {\r\n                if (tokenReceivedCallback) {\r\n                    tokenReceivedCallback(errorDesc, token, error, tokenType);\r\n                }\r\n\r\n            } catch (err) {\r\n                self.error(\"Error occurred in user defined callback function: \" + err);\r\n            }\r\n\r\n            if (window.parent === window && !isPopup) {\r\n                if (self.config.navigateToLoginRequestUrl) {\r\n                    window.location.href = self._getItem(self.CONSTANTS.STORAGE.LOGIN_REQUEST);\r\n                } else window.location.hash = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Constructs the authorization endpoint URL and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getNavigateUrl = function (responseType, resource) {\r\n        var tenant = 'common';\r\n        if (this.config.tenant) {\r\n            tenant = this.config.tenant;\r\n        }\r\n\r\n        var urlNavigate = this.instance + tenant + '/oauth2/authorize' + this._serialize(responseType, this.config, resource) + this._addLibMetadata();\r\n        this.info('Navigate url:' + urlNavigate);\r\n        return urlNavigate;\r\n    };\r\n\r\n    /**\r\n     * Returns the decoded id_token.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._extractIdToken = function (encodedIdToken) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = this._decodeJwt(encodedIdToken);\r\n\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            var base64IdToken = decodedToken.JWSPayload;\r\n            var base64Decoded = this._base64DecodeStringUrlSafe(base64IdToken);\r\n\r\n            if (!base64Decoded) {\r\n                this.info('The returned id_token could not be base64 url safe decoded.');\r\n                return null;\r\n            }\r\n\r\n            // ECMA script has JSON built-in support\r\n            return JSON.parse(base64Decoded);\r\n        } catch (err) {\r\n            this.error('The returned id_token could not be decoded', err);\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Decodes a string of data which has been encoded using base-64 encoding.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._base64DecodeStringUrlSafe = function (base64IdToken) {\r\n        // html5 should support atob function for decoding\r\n        base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n        if (window.atob) {\r\n            return decodeURIComponent(escape(window.atob(base64IdToken))); // jshint ignore:line\r\n        }\r\n        else {\r\n            return decodeURIComponent(escape(this._decode(base64IdToken)));\r\n        }\r\n    };\r\n\r\n    //Take https://cdnjs.cloudflare.com/ajax/libs/Base64/0.3.0/base64.js and https://en.wikipedia.org/wiki/Base64 as reference. \r\n    AuthenticationContext.prototype._decode = function (base64IdToken) {\r\n        var codes = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        base64IdToken = String(base64IdToken).replace(/=+$/, '');\r\n\r\n        var length = base64IdToken.length;\r\n\r\n        if (length % 4 === 1) {\r\n            throw new Error('The token to be decoded is not correctly encoded.');\r\n        }\r\n\r\n        var h1, h2, h3, h4, bits, c1, c2, c3, decoded = '';\r\n\r\n        for (var i = 0; i < length; i += 4) {\r\n            //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits\r\n            // then 6 bits per base64 encoded character\r\n            h1 = codes.indexOf(base64IdToken.charAt(i));\r\n            h2 = codes.indexOf(base64IdToken.charAt(i + 1));\r\n            h3 = codes.indexOf(base64IdToken.charAt(i + 2));\r\n            h4 = codes.indexOf(base64IdToken.charAt(i + 3));\r\n\r\n            // For padding, if last two are '='\r\n            if (i + 2 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12 | h3 << 6;\r\n                c1 = bits >> 16 & 255;\r\n                c2 = bits >> 8 & 255;\r\n                decoded += String.fromCharCode(c1, c2);\r\n                break;\r\n            }\r\n            // if last one is '='\r\n            else if (i + 1 === length - 1) {\r\n                bits = h1 << 18 | h2 << 12\r\n                c1 = bits >> 16 & 255;\r\n                decoded += String.fromCharCode(c1);\r\n                break;\r\n            }\r\n\r\n            bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n\r\n            // then convert to 3 byte chars\r\n            c1 = bits >> 16 & 255;\r\n            c2 = bits >> 8 & 255;\r\n            c3 = bits & 255;\r\n\r\n            decoded += String.fromCharCode(c1, c2, c3);\r\n        }\r\n\r\n        return decoded;\r\n    };\r\n\r\n    /**\r\n     * Decodes an id token into an object with header, payload and signature fields.\r\n     * @ignore\r\n     */\r\n    // Adal.node js crack function\r\n    AuthenticationContext.prototype._decodeJwt = function (jwtToken) {\r\n        if (this._isEmpty(jwtToken)) {\r\n            return null;\r\n        };\r\n\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n\r\n        if (!matches || matches.length < 4) {\r\n            this.warn('The returned id_token is not parseable.');\r\n            return null;\r\n        }\r\n\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n\r\n        return crackedToken;\r\n    };\r\n\r\n    /**\r\n     * Converts string to represent binary data in ASCII string format by translating it into a radix-64 representation and returns it\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString = function (str) {\r\n        return str.replace('-', '+').replace('_', '/');\r\n    };\r\n\r\n    /**\r\n     * Serializes the parameters for the authorization endpoint URL and returns the serialized uri string.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._serialize = function (responseType, obj, resource) {\r\n        var str = [];\r\n\r\n        if (obj !== null) {\r\n            str.push('?response_type=' + responseType);\r\n            str.push('client_id=' + encodeURIComponent(obj.clientId));\r\n            if (resource) {\r\n                str.push('resource=' + encodeURIComponent(resource));\r\n            }\r\n\r\n            str.push('redirect_uri=' + encodeURIComponent(obj.redirectUri));\r\n            str.push('state=' + encodeURIComponent(obj.state));\r\n\r\n            if (obj.hasOwnProperty('slice')) {\r\n                str.push('slice=' + encodeURIComponent(obj.slice));\r\n            }\r\n\r\n            if (obj.hasOwnProperty('extraQueryParameter')) {\r\n                str.push(obj.extraQueryParameter);\r\n            }\r\n\r\n            var correlationId = obj.correlationId ? obj.correlationId : this._guid();\r\n            str.push('client-request-id=' + encodeURIComponent(correlationId));\r\n        }\r\n\r\n        return str.join('&');\r\n    };\r\n\r\n    /**\r\n     * Parses the query string parameters into a key-value pair object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._deserialize = function (query) {\r\n        var match,\r\n            pl = /\\+/g,  // Regex for replacing addition symbol with a space\r\n            search = /([^&=]+)=([^&]*)/g,\r\n            decode = function (s) {\r\n                return decodeURIComponent(s.replace(pl, ' '));\r\n            },\r\n            obj = {};\r\n        match = search.exec(query);\r\n\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Converts decimal value to hex equivalent\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._decimalToHex = function (number) {\r\n        var hex = number.toString(16);\r\n\r\n        while (hex.length < 2) {\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n\r\n    /**\r\n     * Generates RFC4122 version 4 guid (128 bits)\r\n     * @ignore\r\n     */\r\n    /* jshint ignore:start */\r\n    AuthenticationContext.prototype._guid = function () {\r\n        // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n        // pseudo-random numbers.\r\n        // The algorithm is as follows:\r\n        //     Set the two most significant bits (bits 6 and 7) of the\r\n        //        clock_seq_hi_and_reserved to zero and one, respectively.\r\n        //     Set the four most significant bits (bits 12 through 15) of the\r\n        //        time_hi_and_version field to the 4-bit version number from\r\n        //        Section 4.1.3. Version4\r\n        //     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n        //     values.\r\n        // UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n        // time-low               = 4hexOctet\r\n        // time-mid               = 2hexOctet\r\n        // time-high-and-version  = 2hexOctet\r\n        // clock-seq-and-reserved = hexOctet:\r\n        // clock-seq-low          = hexOctet\r\n        // node                   = 6hexOctet\r\n        // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n        // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n        // y values are 8, 9, A, B\r\n        var cryptoObj = window.crypto || window.msCrypto; // for IE 11\r\n        if (cryptoObj && cryptoObj.getRandomValues) {\r\n            var buffer = new Uint8Array(16);\r\n            cryptoObj.getRandomValues(buffer);\r\n            //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return this._decimalToHex(buffer[0]) + this._decimalToHex(buffer[1]) + this._decimalToHex(buffer[2]) + this._decimalToHex(buffer[3]) + '-' + this._decimalToHex(buffer[4]) + this._decimalToHex(buffer[5]) + '-' + this._decimalToHex(buffer[6]) + this._decimalToHex(buffer[7]) + '-' +\r\n                this._decimalToHex(buffer[8]) + this._decimalToHex(buffer[9]) + '-' + this._decimalToHex(buffer[10]) + this._decimalToHex(buffer[11]) + this._decimalToHex(buffer[12]) + this._decimalToHex(buffer[13]) + this._decimalToHex(buffer[14]) + this._decimalToHex(buffer[15]);\r\n        }\r\n        else {\r\n            var guidHolder = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n            var hex = '0123456789abcdef';\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== '-' && guidHolder[i] !== '4') {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === 'x') {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === 'y') {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /* jshint ignore:end */\r\n\r\n    /**\r\n     * Calculates the expires in value in milliseconds for the acquired token\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._expiresIn = function (expires) {\r\n        // if AAD did not send \"expires_in\" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as \"expires_in\" value instead of 3600\r\n        if (!expires) expires = 3599;\r\n        return this._now() + parseInt(expires, 10);\r\n    };\r\n\r\n    /**\r\n     * Return the number of milliseconds since 1970/01/01\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._now = function () {\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n\r\n    /**\r\n     * Adds the hidden iframe for silent token renewal\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addAdalFrame = function (iframeId) {\r\n        if (typeof iframeId === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.info('Add adal frame to document:' + iframeId);\r\n        var adalFrame = document.getElementById(iframeId);\r\n\r\n        if (!adalFrame) {\r\n            if (document.createElement && document.documentElement &&\r\n                (window.opera || window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {\r\n                var ifr = document.createElement('iframe');\r\n                ifr.setAttribute('id', iframeId);\r\n                ifr.setAttribute('aria-hidden', 'true');\r\n                ifr.style.visibility = 'hidden';\r\n                ifr.style.position = 'absolute';\r\n                ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';\r\n\r\n                adalFrame = document.getElementsByTagName('body')[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML('beforeEnd', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                adalFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n\r\n        return adalFrame;\r\n    };\r\n\r\n    /**\r\n     * Saves the key-value pair in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._saveItem = function (key, obj, preserve) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return false;\r\n            }\r\n\r\n            if (preserve) {\r\n                var value = this._getItem(key) || '';\r\n                localStorage.setItem(key, value + obj + this.CONSTANTS.CACHE_DELIMETER);\r\n            }\r\n            else {\r\n                localStorage.setItem(key, obj);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return false;\r\n        }\r\n\r\n        sessionStorage.setItem(key, obj);\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Searches the value for the given key in the cache\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._getItem = function (key) {\r\n\r\n        if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {\r\n\r\n            if (!this._supportsLocalStorage()) {\r\n                this.info('Local storage is not supported');\r\n                return null;\r\n            }\r\n\r\n            return localStorage.getItem(key);\r\n        }\r\n\r\n        // Default as session storage\r\n        if (!this._supportsSessionStorage()) {\r\n            this.info('Session storage is not supported');\r\n            return null;\r\n        }\r\n\r\n        return sessionStorage.getItem(key);\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports localStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsLocalStorage = function () {\r\n        try {\r\n            if (!window.localStorage) return false; // Test availability\r\n            window.localStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.localStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.localStorage.removeItem('storageTest'); // Try delete\r\n            if (window.localStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns true if browser supports sessionStorage, false otherwise.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._supportsSessionStorage = function () {\r\n        try {\r\n            if (!window.sessionStorage) return false; // Test availability\r\n            window.sessionStorage.setItem('storageTest', 'A'); // Try write\r\n            if (window.sessionStorage.getItem('storageTest') != 'A') return false; // Test read/write\r\n            window.sessionStorage.removeItem('storageTest'); // Try delete\r\n            if (window.sessionStorage.getItem('storageTest')) return false; // Test delete\r\n            return true; // Success\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a cloned copy of the passed object.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._cloneConfig = function (obj) {\r\n        if (null === obj || 'object' !== typeof obj) {\r\n            return obj;\r\n        }\r\n\r\n        var copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) {\r\n                copy[attr] = obj[attr];\r\n            }\r\n        }\r\n        return copy;\r\n    };\r\n\r\n    /**\r\n     * Adds the library version and returns it.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._addLibMetadata = function () {\r\n        // x-client-SKU\r\n        // x-client-Ver\r\n        return '&x-client-SKU=Js&x-client-Ver=' + this._libVersion();\r\n    };\r\n\r\n    /**\r\n     * Checks the Logging Level, constructs the Log message and logs it. Users need to implement/override this method to turn on Logging. \r\n     * @param {number} level  -  Level can be set 0,1,2 and 3 which turns on 'error', 'warning', 'info' or 'verbose' level logging respectively.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.log = function (level, message, error, containsPii) {\r\n\r\n        if (level <= Logging.level) {\r\n\r\n            if (!Logging.piiLoggingEnabled && containsPii)\r\n                return;\r\n\r\n            var timestamp = new Date().toUTCString();\r\n            var formattedMessage = '';\r\n\r\n            if (this.config.correlationId)\r\n                formattedMessage = timestamp + ':' + this.config.correlationId + '-' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n            else\r\n                formattedMessage = timestamp + ':' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;\r\n\r\n            if (error) {\r\n                formattedMessage += '\\nstack:\\n' + error.stack;\r\n            }\r\n\r\n            Logging.log(formattedMessage);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 0.\r\n     * @param {string} message  -  Message to log.\r\n     * @param {string} error  -  Error to log.\r\n     */\r\n    AuthenticationContext.prototype.error = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 1.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warn = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.info = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbose = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null);\r\n    };\r\n\r\n    /**\r\n    * Logs Pii messages when Logging Level is set to 0 and window.piiLoggingEnabled is set to true.\r\n    * @param {string} message  -  Message to log.\r\n    * @param {string} error  -  Error to log.\r\n    */\r\n    AuthenticationContext.prototype.errorPii = function (message, error) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error, true);\r\n    };\r\n\r\n    /**\r\n     * Logs  Pii messages when Logging Level is set to 1 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.warnPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 2 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.infoPii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null, true);\r\n    };\r\n\r\n    /**\r\n     * Logs messages when Logging Level is set to 3 and window.piiLoggingEnabled is set to true.\r\n     * @param {string} message  -  Message to log.\r\n     */\r\n    AuthenticationContext.prototype.verbosePii = function (message) {\r\n        this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null, true);\r\n    };\r\n    /**\r\n     * Returns the library version.\r\n     * @ignore\r\n     */\r\n    AuthenticationContext.prototype._libVersion = function () {\r\n        return '1.0.17';\r\n    };\r\n\r\n    /**\r\n     * Returns a reference of Authentication Context as a result of a require call.\r\n     * @ignore\r\n     */\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        module.exports = AuthenticationContext;\r\n        module.exports.inject = function (conf) {\r\n            return new AuthenticationContext(conf);\r\n        };\r\n    }\r\n\r\n    return AuthenticationContext;\r\n\r\n}());\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/adal-angular/lib/adal.js\n// module id = 15\n// module chunks = 0","export var StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nexport var ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nexport var ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\r\n//# sourceMappingURL=types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./build/packages/sp-taxonomy/es5/src/types.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}