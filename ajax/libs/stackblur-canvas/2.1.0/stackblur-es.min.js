const mulTable=[512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,289,287,285,282,280,278,275,273,271,269,267,265,263,261,259],shgTable=[9,11,12,13,13,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24];function processImage(t,e,a,n){if("string"==typeof t&&(t=document.getElementById(t)),!(t&&"naturalWidth"in t))return;const r=t.naturalWidth,s=t.naturalHeight;if("string"==typeof e&&(e=document.getElementById(e)),!(e&&"getContext"in e))return;e.style.width=r+"px",e.style.height=s+"px",e.width=r,e.height=s;const o=e.getContext("2d");o.clearRect(0,0,r,s),o.drawImage(t,0,0),isNaN(a)||a<1||(n?processCanvasRGBA(e,0,0,r,s,a):processCanvasRGB(e,0,0,r,s,a))}function getImageDataFromCanvas(t,e,a,n,r){if("string"==typeof t&&(t=document.getElementById(t)),!(t&&"object"==typeof t&&"getContext"in t))throw new TypeError("Expecting canvas with `getContext` method in processCanvasRGB(A) calls!");const s=t.getContext("2d");try{return s.getImageData(e,a,n,r)}catch(t){throw new Error("unable to access image data: "+t)}}function processCanvasRGBA(t,e,a,n,r,s){if(isNaN(s)||s<1)return;s|=0;let o=getImageDataFromCanvas(t,e,a,n,r);o=processImageDataRGBA(o,e,a,n,r,s),t.getContext("2d").putImageData(o,e,a)}function processImageDataRGBA(t,e,a,n,r,s){const o=t.data;let g,c,l,i,u,f,m,x,b,p,B,h,d,I,R,C,G,D,v,w,y,A,T,k;const E=s+s+1,N=n-1,S=r-1,F=s+1,W=F*(F+1)/2,j=new BlurStack;let H,q=j;for(l=1;l<E;l++)q=q.next=new BlurStack,l===F&&(H=q);q.next=j;let z=null,J=null;m=f=0;const K=mulTable[s],L=shgTable[s];for(c=0;c<r;c++){for(C=G=D=v=x=b=p=B=0,h=F*(w=o[f]),d=F*(y=o[f+1]),I=F*(A=o[f+2]),R=F*(T=o[f+3]),x+=W*w,b+=W*y,p+=W*A,B+=W*T,q=j,l=0;l<F;l++)q.r=w,q.g=y,q.b=A,q.a=T,q=q.next;for(l=1;l<F;l++)i=f+((N<l?N:l)<<2),x+=(q.r=w=o[i])*(k=F-l),b+=(q.g=y=o[i+1])*k,p+=(q.b=A=o[i+2])*k,B+=(q.a=T=o[i+3])*k,C+=w,G+=y,D+=A,v+=T,q=q.next;for(z=j,J=H,g=0;g<n;g++)o[f+3]=T=B*K>>L,0!==T?(T=255/T,o[f]=(x*K>>L)*T,o[f+1]=(b*K>>L)*T,o[f+2]=(p*K>>L)*T):o[f]=o[f+1]=o[f+2]=0,x-=h,b-=d,p-=I,B-=R,h-=z.r,d-=z.g,I-=z.b,R-=z.a,i=m+((i=g+s+1)<N?i:N)<<2,x+=C+=z.r=o[i],b+=G+=z.g=o[i+1],p+=D+=z.b=o[i+2],B+=v+=z.a=o[i+3],z=z.next,h+=w=J.r,d+=y=J.g,I+=A=J.b,R+=T=J.a,C-=w,G-=y,D-=A,v-=T,J=J.next,f+=4;m+=n}for(g=0;g<n;g++){for(G=D=v=C=b=p=B=x=0,h=F*(w=o[f=g<<2]),d=F*(y=o[f+1]),I=F*(A=o[f+2]),R=F*(T=o[f+3]),x+=W*w,b+=W*y,p+=W*A,B+=W*T,q=j,l=0;l<F;l++)q.r=w,q.g=y,q.b=A,q.a=T,q=q.next;for(u=n,l=1;l<=s;l++)f=u+g<<2,x+=(q.r=w=o[f])*(k=F-l),b+=(q.g=y=o[f+1])*k,p+=(q.b=A=o[f+2])*k,B+=(q.a=T=o[f+3])*k,C+=w,G+=y,D+=A,v+=T,q=q.next,l<S&&(u+=n);for(f=g,z=j,J=H,c=0;c<r;c++)o[(i=f<<2)+3]=T=B*K>>L,T>0?(T=255/T,o[i]=(x*K>>L)*T,o[i+1]=(b*K>>L)*T,o[i+2]=(p*K>>L)*T):o[i]=o[i+1]=o[i+2]=0,x-=h,b-=d,p-=I,B-=R,h-=z.r,d-=z.g,I-=z.b,R-=z.a,i=g+((i=c+F)<S?i:S)*n<<2,x+=C+=z.r=o[i],b+=G+=z.g=o[i+1],p+=D+=z.b=o[i+2],B+=v+=z.a=o[i+3],z=z.next,h+=w=J.r,d+=y=J.g,I+=A=J.b,R+=T=J.a,C-=w,G-=y,D-=A,v-=T,J=J.next,f+=n}return t}function processCanvasRGB(t,e,a,n,r,s){if(isNaN(s)||s<1)return;s|=0;let o=getImageDataFromCanvas(t,e,a,n,r);o=processImageDataRGB(o,e,a,n,r,s),t.getContext("2d").putImageData(o,e,a)}function processImageDataRGB(t,e,a,n,r,s){const o=t.data;let g,c,l,i,u,f,m,x,b,p,B,h,d,I,R,C,G,D,v,w;const y=s+s+1,A=n-1,T=r-1,k=s+1,E=k*(k+1)/2,N=new BlurStack;let S,F=N;for(l=1;l<y;l++)F=F.next=new BlurStack,l===k&&(S=F);F.next=N;let W=null,j=null;m=f=0;const H=mulTable[s],q=shgTable[s];for(c=0;c<r;c++){for(I=R=C=x=b=p=0,B=k*(G=o[f]),h=k*(D=o[f+1]),d=k*(v=o[f+2]),x+=E*G,b+=E*D,p+=E*v,F=N,l=0;l<k;l++)F.r=G,F.g=D,F.b=v,F=F.next;for(l=1;l<k;l++)i=f+((A<l?A:l)<<2),x+=(F.r=G=o[i])*(w=k-l),b+=(F.g=D=o[i+1])*w,p+=(F.b=v=o[i+2])*w,I+=G,R+=D,C+=v,F=F.next;for(W=N,j=S,g=0;g<n;g++)o[f]=x*H>>q,o[f+1]=b*H>>q,o[f+2]=p*H>>q,x-=B,b-=h,p-=d,B-=W.r,h-=W.g,d-=W.b,i=m+((i=g+s+1)<A?i:A)<<2,x+=I+=W.r=o[i],b+=R+=W.g=o[i+1],p+=C+=W.b=o[i+2],W=W.next,B+=G=j.r,h+=D=j.g,d+=v=j.b,I-=G,R-=D,C-=v,j=j.next,f+=4;m+=n}for(g=0;g<n;g++){for(R=C=I=b=p=x=0,B=k*(G=o[f=g<<2]),h=k*(D=o[f+1]),d=k*(v=o[f+2]),x+=E*G,b+=E*D,p+=E*v,F=N,l=0;l<k;l++)F.r=G,F.g=D,F.b=v,F=F.next;for(u=n,l=1;l<=s;l++)f=u+g<<2,x+=(F.r=G=o[f])*(w=k-l),b+=(F.g=D=o[f+1])*w,p+=(F.b=v=o[f+2])*w,I+=G,R+=D,C+=v,F=F.next,l<T&&(u+=n);for(f=g,W=N,j=S,c=0;c<r;c++)o[i=f<<2]=x*H>>q,o[i+1]=b*H>>q,o[i+2]=p*H>>q,x-=B,b-=h,p-=d,B-=W.r,h-=W.g,d-=W.b,i=g+((i=c+k)<T?i:T)*n<<2,x+=I+=W.r=o[i],b+=R+=W.g=o[i+1],p+=C+=W.b=o[i+2],W=W.next,B+=G=j.r,h+=D=j.g,d+=v=j.b,I-=G,R-=D,C-=v,j=j.next,f+=n}return t}class BlurStack{constructor(){this.r=0,this.g=0,this.b=0,this.a=0,this.next=null}}export{BlurStack,processImage as image,processCanvasRGBA as canvasRGBA,processCanvasRGB as canvasRGB,processImageDataRGBA as imageDataRGBA,processImageDataRGB as imageDataRGB};
//# sourceMappingURL=stackblur-es.min.js.map
