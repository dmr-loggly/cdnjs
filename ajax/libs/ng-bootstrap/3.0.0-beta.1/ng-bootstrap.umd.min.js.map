{"version":3,"sources":["ng://@ng-bootstrap/ng-bootstrap/util/util.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","ng://@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.ts","ng://@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/label.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/radio.ts","ng://@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","ng://@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","ng://@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","null","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","ng://@ng-bootstrap/ng-bootstrap/util/key.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keymap-service.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","ng://@ng-bootstrap/ng-bootstrap/util/positioning.ts","ng://@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-toggle.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","ng://@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/popup.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.ts","ng://@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","ng://@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","ng://@ng-bootstrap/ng-bootstrap/util/triggers.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.ts","ng://@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","ng://@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.ts","ng://@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","ng://@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","ng://@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","ng://@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","ng://@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","ng://@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","ng://@ng-bootstrap/ng-bootstrap/index.ts"],"names":["toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","Injectable","nextId","NgbPanelTitle","templateRef","this","Directive","args","selector","TemplateRef","NgbPanelContent","NgbPanel","prototype","ngAfterContentChecked","titleTpl","titleTpls","first","contentTpl","contentTpls","Input","ContentChildren","descendants","NgbAccordion","config","EventEmitter","type","closeOtherPanels","closeOthers","toggle","panelId","panel","panels","find","p","id","disabled","defaultPrevented_1","panelChange","emit","nextState","isOpen","preventDefault","_closeOthers","_updateActiveIds","_this","activeIds","split","forEach","indexOf","length","filter","map","Component","exportAs","host","class","role","[attr.aria-multiselectable]","template","NgbAccordionConfig","Output","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","forRoot","ngModule","providers","NgModule","declarations","exports","imports","CommonModule","NgbAlert","dismissible","closeHandler","close","changeDetection","ChangeDetectionStrategy","OnPush","NgbAlertConfig","NgbAlertModule","entryComponents","NgbButtonLabel","[class.btn]","[class.active]","[class.disabled]","[class.focus]","NGB_CHECKBOX_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NgbCheckBox","multi","_label","_","Object","defineProperty","isFocused","focused","onTouched","onInputChange","$event","modelToPropagate","target","checked","valueChecked","valueUnChecked","onChange","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","active","autocomplete","[checked]","[disabled]","(change)","(focus)","(blur)","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","Set","_disabled","onRadioChange","radio","onRadioValueUpdate","_updateRadiosValue","register","_radios","add","_updateRadiosDisabled","unregister","delete","_value","updateValue","updateDisabled","NgbRadio","_group","_renderer","_element","stringValue","setProperty","nativeElement","_checked","name","ngOnDestroy","[name]","Renderer2","ElementRef","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbSlide","tplRef","NgbCarousel","interval","wrap","keyboard","pauseOnHover","showNavigationArrows","showNavigationIndicators","activeSlide","_getSlideById","activeId","slides","ngOnInit","_startTimer","ngOnChanges","changes","isFirstChange","_restartTimer","clearInterval","_slideChangeInterval","select","slideId","cycleToSelected","getSlideEventDirection","prev","cycleToPrev","next","cycleToNext","pause","_stopTimer","cycle","_getNextSlide","NgbSlideEventDirection","LEFT","_getPrevSlide","RIGHT","slideIdx","direction","selectedSlide","slide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","keyPrev","keyNext","onMouseEnter","onMouseLeave","setInterval","slideWithId","toArray","currentSlideId","slideArr","currentSlideIdx","[style.display]","tabIndex","(mouseenter)","(mouseleave)","(keydown.arrowLeft)","(keydown.arrowRight)","NgbCarouselConfig","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","[class.collapse]","[class.show]","NgbCollapseModule","NgbCollapse","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","push","error","NgbDate","year","month","day","from","date","equals","other","before","after","toStruct","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","tslib_1.__extends","NgbCalendarGregorian","getDaysPerWeek","getMonths","getWeeksPerMonth","getNext","period","number","setDate","getPrev","getWeekday","getDay","getWeekNumber","week","firstDayOfWeek","time","setMonth","round","getToday","isValid","NgbCalendar","isChangedDate","checkDateInRange","minDate","maxDate","isDateSelectable","state","markDisabled","buildMonths","calendar","i18n","force","displayMonths","months","monthsToReuse","splice","firstDate","reusedIndex","findIndex","outsideDays","lastDate","weeks","weekdays","daysPerWeek","firstMonthDate","dayOfWeek","weekObject","days","collapsed","newDate","nextDate","ariaLabel","getDayAriaLabel","dayObject","context","assign","currentMonth","selected","tabindex","hidden","buildMonth","shift","NgbDatepickerI18nDefault","_locale","_datePipe","_super","weekdaysStartingOnSunday","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Short","_weekdaysShort","index","_monthsShort","getLocaleMonthNames","Abbreviated","_monthsFull","Wide","getWeekdayShortName","weekday","getMonthShortName","getMonthFullName","transform","Inject","LOCALE_ID","DatePipe","NgbDatepickerI18n","NgbDatepickerService","_calendar","_i18n","Subject","focusVisible","navigation","prevDisabled","nextDisabled","selectBoxes","years","selectedDate","_model$","pipe","model","_select$","_state","_nextState","toValidDate","focus","focusDate","focusMove","focusSelect","emitEvent","open","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","prevDate","startDate","Error","checkMinBeforeMax","forceRebuild","yearChanged","monthChanged","start","end","generateSelectBoxYears","generateSelectBoxMonths","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","subscribe","_minDate","_maxDate","_firstViewDate","_lastViewDate","processKey","event","Key","which","shiftKey","stopPropagation","PREV","NEXT","NgbDateStructAdapter","fromModel","toModel","NgbDateAdapter","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_cd","_elementRef","_ngbDateAdapter","_ngZone","input","_selectSubscription","select$","_subscription","oldDate","newSelectedDate","oldSelectedDate","newFocusedDate","oldFocusedDate","navigate","markForCheck","onStable","asObservable","take","elementToFocus","querySelector","navigateTo","unsubscribe","onDateSelect","onKeyDown","onNavigateDateSelect","onNavigateEvent","NavigationEvent","showFocus","styles","NgbDatepickerConfig","ChangeDetectorRef","NgZone","NgbDatepickerMonthView","doSelect","NgbDatepickerNavigation","NgbDateParserFormatter","NgbDateISOParserFormatter","parse","dateParts","trim","format","positionService","Positioning","getAllStyles","element","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","document","documentElement","position","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","placement","appendToBody","hostElPosition","targetElStyles","targetElBCR","placementPrimary","placementSecondary","targetElPosition","parseFloat","marginBottom","marginRight","getAvailablePlacements","availablePlacements","hostElemClientRect","targetElemClientRect","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","hostElemClientRectHorCenter","hostElemClientRectVerCenter","setSecondaryPlacementForLeftRight","setSecondaryPlacementForTopBottom","primaryPlacement","availablePlacementArr","placementVals","isArray","hasAuto","val","obj","search","appliedPlacement","topVal","leftVal","item","pos","_a","tslib_1.__values","_b","_c","style","FOCUSABLE_ELEMENTS_SELECTOR","join","ngbFocusTrap","stopFocusTrap$","lastFocusedElement$","fromEvent","takeUntil","withLatestFrom","list","tabEvent","focusedElement","querySelectorAll","last","arr","lastFocusedElement","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","NG_VALIDATORS","_parserFormatter","_elRef","_vcRef","_cfr","ngZone","_document","_zoneSubscription","_cRef","location","container","instance","_onChange","_onTouched","registerOnValidatorChange","_validatorChange","validate","c","_fromDateStruct","requiredBefore","requiredAfter","invalid","_model","_writeModelValue","manualDateChange","updateView","cf","resolveComponentFactory","createComponent","_applyPopupStyling","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","detectChanges","appendChild","_closed$","escapes$","outsideClicks$","autoClose","arguments","concat","__spread","_clickableElements","some","el","contains","race","remove","hostView","registerClickableElement","onBlur","datepickerInstance","optionName","addClass","setStyle","dateSelect","(input)","ViewContainerRef","ComponentFactoryResolver","DOCUMENT","NgbDatepickerToggle","datepicker","NgbDatepickerDayView","isMuted","[class.bg-primary]","[class.text-white]","[class.text-muted]","[class.outside]","NgbDatepickerNavigationSelect","changeMonth","changeYear","NgbCalendarHijri","toGregorian","setDay","mDays","getDaysInIslamicMonth","setYear","yearValue","_isIslamicLeapYear","_getMonthStart","ceil","_getYearStart","isGregorianLeapYear","mod","a","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","fromGregorian","gdate","gYear","gMonth","gDay","julianDay","hYear","hMonth","hDay","hijriDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","tjd2","MuhDate","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","ISLAMIC_CIVIL","MONTH_LENGTH","NgbCalendarIslamicUmalqura","gDate","date1","date2","diff","daysDiff","abs","j","numOfDays","dayDiff","y","charAt","NgbDateNativeAdapter","NgbDatepickerModule","useClass","FormsModule","NgbDropdownMenu","dropdown","isEventFrom","triggerEl","applyPlacement","_placement","removeClass","parentNode","[class.dropdown-menu]","[attr.x-placement]","NgbDropdown","NgbDropdownAnchor","anchorEl","aria-haspopup","[attr.aria-expanded]","NgbDropdownToggle","elementRef","toggleOpen","(click)","_changeDetector","_positionMenu","_menu","_open","openChange","runOutsideAngular","closeFromOutsideEsc","closeFromClick","button","_isEventFromToggle","_isEventFromMenu","_anchor","(document:click)","NgbDropdownConfig","ContentChild","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbModalBackdrop","[class]","BACKDROP_CLICK","ESC","NgbModalWindow","dismissEvent","backdropClick","backdrop","dismiss","ModalDismissReasons","escKey","defaultPrevented","reason","_elWithFocus","activeElement","body","ngAfterViewInit","apply","elWithFocus","(keyup.esc)","[attr.aria-labelledby]","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","content","_windowRef","_contentRef","_getContentRef","createEmbeddedView","rootNodes","createText","NgbActiveModal","result","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","removeChild","destroy","backdropNativeEl","NgbModalStack","_applicationRef","moduleCFR","contentInjector","containerEl","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_applyWindowOptions","_applyBackdropOptions","attachView","windowInstance","_windowAttributes","backdropInstance","_backdropAttributes","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","contentCmptFactory","modalContentInjector","Injector","useValue","ApplicationRef","NgbModal","_moduleCFR","_modalStack","NgbModalModule","NgbPagination","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","size","hasPrevious","page","hasNext","pageCount","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","pages","unshift","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","pageChange","newPage","NgbPaginationConfig","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","noopFn","listenToTriggers","renderer","triggers","openFn","closeFn","toggleFn","parsedTriggers","aliases","trimmedTriggers","trigger","triggerPair","alias","manualTriggers","parseTriggers","listeners","listen","unsubscribeFn","NgbPopoverWindow","[id]","NgbPopover","componentFactoryResolver","viewContainerRef","disablePopover","popoverClass","_popupService","_isDisabled","ngbPopover","popoverTitle","title","_ngbPopoverWindowId","setAttribute","shown","removeAttribute","_unregisterListenersFn","bind","NgbPopoverConfig","NgbPopoverModule","NgbProgressbar","animated","striped","showValue","getValue","getPercentValue","NgbProgressbarConfig","NgbProgressbarModule","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","readonly","ariaValueText","nextRate","enter","handleBlur","handleClick","update","resettable","rate","handleKeyDown","contexts","v","k","fill","reset","leave","internalChange","newRate","rateChange","_getFillValue","Number","toFixed","nextValue","aria-valuemin","[attr.aria-valuemax]","[attr.aria-valuenow]","[attr.aria-valuetext]","[attr.aria-disabled]","(keydown)","NgbRatingConfig","NgbRatingModule","NgbTabTitle","NgbTabContent","NgbTab","NgbTabset","justify","orientation","className","justifyClass","tabId","selectedTab","_getTabById","tabChange","activeTab","tabs","tabsWithId","tab","NgbTabsetConfig","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTime","hour","minute","second","changeHour","step","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatHour","formatMinSec","setFormControlSize","form-control-sm","form-control-lg","setButtonSize","btn-sm","btn-lg","touched","NgbTimepickerConfig","NgbTimepickerModule","NgbTooltipWindow","NgbTooltip","disableTooltip","_ngbTooltip","_ngbTooltipWindowId","NgbTooltipConfig","NgbTooltipModule","NgbHighlight","text","resultStr","resultLC","toLowerCase","termLC","term","currentIdx","parts","RegExp","replace","part","originalPart","substr","NgbTypeaheadWindow","hasActive","activeIdx","results","getActive","markActive","_activeChanged","focusFirst","resetActive","selectEvent","activeChangeEvent","ARIA_LIVE_DELAY","InjectionToken","getLiveElement","lazyCreate","createElement","classList","Live","_delay","parentElement","say","message","delay","textContent","setText","setTimeout","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","_live","editable","showHint","_valueChanges","_resubscribeTypeahead","BehaviorSubject","isPopupOpen","processedResults$","tap","_inputValueBackup","ngbTypeahead","userInput$","switchMap","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","onDocumentClick","dismissPopup","_showHint","_selectResult","_openPopup","popupId","_selectResultClosePopup","activeDescendant","selectItem","userInputLowerCase","formattedVal","inputFormatter","resultFormatter","formatter","resultTemplate","count","[class.open]","[autocomplete]","autocapitalize","autocorrect","aria-multiline","[attr.aria-autocomplete]","[attr.aria-activedescendant]","[attr.aria-owns]","NgbTypeaheadConfig","NgbTypeaheadModule","NGB_MODULES","NgbModule","NgbRootModule"],"mappings":"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,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB,eAEhE,eAAgB,eAAgB,eAAgB,eAAgB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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAccordion component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the accordions used in the application.\n */\n@Injectable()\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap accordion panel titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * The NgbPanel directive represents an individual panel with the title and collapsible\n * content\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  A flag determining whether the panel is disabled or not.\n   *  When disabled, the panel cannot be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel. The id should be unique.\n   *  If not provided, it will be auto-generated.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  /**\n   * A flag telling if the panel is currently open\n   */\n  isOpen = false;\n\n  /**\n   *  The title for the panel.\n   */\n  @Input() title: string;\n\n  /**\n   *  Accordion's types of panels to be applied per panel basis.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\"\n   */\n  @Input() type: string;\n\n  titleTpl: NgbPanelTitle | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before toggling an accordion panel\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * Id of the accordion panel that is toggled\n   */\n  panelId: string;\n\n  /**\n   * Whether the panel will be opened (true) or closed (false)\n   */\n  nextState: boolean;\n\n  /**\n   * Function that will prevent panel toggling if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * The NgbAccordion directive is a collection of panels.\n * It can assure that only one panel can be opened at a time.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <h5 class=\"mb-0\">\n            <button class=\"btn btn-link\" (click)=\"!!toggle(panel.id)\" [disabled]=\"panel.disabled\" [class.collapsed]=\"panel.isOpen\"\n              [attr.aria-expanded]=\"panel.isOpen\" [attr.aria-controls]=\"panel.id\">\n              {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n            </button>\n          </h5>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"card-body collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n             <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel identifiers that should be opened\n   */\n  @Input() activeIds: string | string[] = [];\n\n  /**\n   *  Whether the other panels should be closed when a panel is opened\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * Whether the closed panels should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   *  Accordion's types of panels to be applied globally.\n   *  Bootstrap recognizes the following types: \"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\", \"light\"\n   * and \"dark\n   */\n  @Input() type: string;\n\n  /**\n   * A panel change event fired right before the panel toggle happens. See NgbPanelChangeEvent for payload details\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Programmatically toggle a panel with a given id.\n   */\n  toggle(panelId: string) {\n    const panel = this.panels.find(p => p.id === panelId);\n\n    if (panel && !panel.disabled) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panelId, nextState: !panel.isOpen, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = !panel.isOpen;\n\n        if (this.closeOtherPanels) {\n          this._closeOthers(panelId);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nimport {NgbAccordionConfig} from './accordion-config';\n\nexport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelChangeEvent} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAccordionModule, providers: [NgbAccordionConfig]}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbAlert component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the alerts used in the application.\n */\n@Injectable()\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alerts can be used to provide feedback messages.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div [class]=\"'alert alert-' + type + (dismissible ? ' alert-dismissible' : '')\" role=\"alert\">\n      <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n        (click)=\"closeHandler()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <ng-content></ng-content>\n    </div>\n    `\n})\nexport class NgbAlert {\n  /**\n   * A flag indicating if a given alert can be dismissed (closed) by a user. If this flag is set, a close button (in a\n   * form of an Ã) will be displayed.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Alert type (CSS class). Bootstrap 4 recognizes the following types: \"success\", \"info\", \"warning\", \"danger\",\n   * \"primary\", \"secondary\", \"light\", \"dark\".\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. This event has no payload. Only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter();\n\n  constructor(config: NgbAlertConfig) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\nimport {NgbAlertConfig} from './alert-config';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbAlertModule, providers: [NgbAlertConfig]}; }\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Easily create Bootstrap-style checkbox buttons. A value of a checked button is bound to a variable\n * specified via ngModel.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    'autocomplete': 'off',\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * A flag indicating if a given checkbox button is disabled.\n   */\n  @Input() disabled = false;\n\n  /**\n   * Value to be propagated as model when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * Value to be propagated as model when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n  }\n}\n","import {Directive, forwardRef, Input, Renderer2, ElementRef, OnDestroy} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Easily create Bootstrap-style radio buttons. A value of a selected button is bound to a variable\n * specified via ngModel.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'group'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * The name of the group. Unless enclosed inputs specify a name, this name is used as the name of the\n   * enclosed inputs. If not specified, a name is generated automatically.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * Marks an input of type \"radio\" as part of the NgbRadioGroup.\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The name of the input. All inputs of a group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * You can specify model value of a given radio by binding to the value property.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * A flag indicating if a given radio button is disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>) {\n    this._group.register(this);\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbButtonsModule, providers: []}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbCarousel component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the carousels used in the application.\n */\n@Injectable()\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  Component,\n  Directive,\n  TemplateRef,\n  ContentChildren,\n  QueryList,\n  Input,\n  AfterContentChecked,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbCarouselConfig} from './carousel-config';\n\nlet nextId = 0;\n\n/**\n * Represents an individual slide to be used within a carousel.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n   * Will be auto-generated if not provided.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Directive to easily create carousels based on Bootstrap's markup.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(mouseenter)': 'onMouseEnter()',\n    '(mouseleave)': 'onMouseLeave()',\n    '(keydown.arrowLeft)': 'keyPrev()',\n    '(keydown.arrowRight)': 'keyNext()'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"cycleToSelected(slide.id, getSlideEventDirection(activeId, slide.id))\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"cycleToPrev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"cycleToNext()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n    `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    OnDestroy, OnInit, OnChanges {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n  private _slideChangeInterval;\n\n  /**\n   * The active slide id.\n   */\n  @Input() activeId: string;\n\n\n  /**\n   * Amount of time in milliseconds before next slide is shown.\n   */\n  @Input() interval: number;\n\n  /**\n   * Whether can wrap from the last to the first slide.\n   */\n  @Input() wrap: boolean;\n\n  /**\n   * A flag for allowing navigation via keyboard\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * A flag to enable slide cycling pause/resume on mouseover.\n   * @since 2.2.0\n   */\n  @Input() pauseOnHover: boolean;\n\n  /**\n   * A flag to show / hide navigation arrows.\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * A flag to show / hide navigation indicators.\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * A carousel slide event fired when the slide transition is completed.\n   * See NgbSlideEvent for payload details\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(config: NgbCarouselConfig) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnInit() { this._startTimer(); }\n\n  ngOnChanges(changes) {\n    if ('interval' in changes && !changes['interval'].isFirstChange()) {\n      this._restartTimer();\n    }\n  }\n\n  ngOnDestroy() { clearInterval(this._slideChangeInterval); }\n\n  /**\n   * Navigate to a slide with the specified identifier.\n   */\n  select(slideId: string) {\n    this.cycleToSelected(slideId, this.getSlideEventDirection(this.activeId, slideId));\n    this._restartTimer();\n  }\n\n  /**\n   * Navigate to the next slide.\n   */\n  prev() {\n    this.cycleToPrev();\n    this._restartTimer();\n  }\n\n  /**\n   * Navigate to the next slide.\n   */\n  next() {\n    this.cycleToNext();\n    this._restartTimer();\n  }\n\n  /**\n   * Stops the carousel from cycling through items.\n   */\n  pause() { this._stopTimer(); }\n\n  /**\n   * Restarts cycling through the carousel slides from left to right.\n   */\n  cycle() { this._startTimer(); }\n\n  cycleToNext() { this.cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n\n  cycleToPrev() { this.cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n\n  cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide) {\n      if (selectedSlide.id !== this.activeId) {\n        this.slide.emit({prev: this.activeId, current: selectedSlide.id, direction: direction});\n      }\n      this.activeId = selectedSlide.id;\n    }\n  }\n\n  getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  keyPrev() {\n    if (this.keyboard) {\n      this.prev();\n    }\n  }\n\n  keyNext() {\n    if (this.keyboard) {\n      this.next();\n    }\n  }\n\n  onMouseEnter() {\n    if (this.pauseOnHover) {\n      this.pause();\n    }\n  }\n\n  onMouseLeave() {\n    if (this.pauseOnHover) {\n      this.cycle();\n    }\n  }\n\n  private _restartTimer() {\n    this._stopTimer();\n    this._startTimer();\n  }\n\n  private _startTimer() {\n    if (this.interval > 0) {\n      this._slideChangeInterval = setInterval(() => { this.cycleToNext(); }, this.interval);\n    }\n  }\n\n  private _stopTimer() { clearInterval(this._slideChangeInterval); }\n\n  private _getSlideById(slideId: string): NgbSlide {\n    let slideWithId: NgbSlide[] = this.slides.filter(slide => slide.id === slideId);\n    return slideWithId.length ? slideWithId[0] : null;\n  }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n* The payload of the slide event fired when the slide transition is completed\n*/\nexport interface NgbSlideEvent {\n  /**\n   * Previous slide id\n   */\n  prev: string;\n\n  /**\n   * New slide ids\n   */\n  current: string;\n\n  /**\n   * Slide event direction\n   */\n  direction: NgbSlideEventDirection;\n}\n\n/**\n * Enum to define the carousel slide event direction\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES, NgbSlideEvent} from './carousel';\nimport {NgbCarouselConfig} from './carousel-config';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCarouselModule, providers: [NgbCarouselConfig]}; }\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * The NgbCollapse directive provides a simple way to hide and show an element with animations.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * A flag indicating collapsed (true) or open (false) state.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbCollapseModule, providers: []}; }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class NgbDate {\n  static from(date: {year: number, month: number, day?: number}) {\n    return date ? new NgbDate(date.year, date.month, date.day ? date.day : 1) : null;\n  }\n\n  constructor(public year: number, public month: number, public day: number) {}\n\n  equals(other: NgbDate) {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  before(other: NgbDate) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  after(other: NgbDate) {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n\n  toStruct() { return {year: this.year, month: this.month, day: this.day}; }\n\n  toString() { return `${this.year}-${this.month}-${this.day}`; }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nfunction fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\n@Injectable()\nexport abstract class NgbCalendar {\n  abstract getDaysPerWeek(): number;\n  abstract getMonths(): number[];\n  abstract getWeeksPerMonth(): number;\n  abstract getWeekday(date: NgbDate): number;\n\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  abstract getToday(): NgbDate;\n\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n\n    switch (period) {\n      case 'y':\n        return new NgbDate(date.year + number, 1, 1);\n      case 'm':\n        jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        break;\n      default:\n        return date;\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return NgbDate.from(minDate);\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return NgbDate.from(maxDate);\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths();\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate && minDate.year || date.year - 10;\n  const end = maxDate && maxDate.year || date.year + 10;\n\n  return Array.from({length: end - start + 1}, (e, i) => start + i);\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = calendar.getPrev(date, 'm');\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = calendar.getNext(date, 'm', i);\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        date: {year: newDate.year, month: newDate.month, day: newDate.day},\n        currentMonth: month.number, disabled,\n        focused: false,\n        selected: false\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => NgbDate.from(day.date)), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth} from '@angular/common';\nimport {DatePipe} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Type of the service supplying month and weekday names to to NgbDatepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * See the i18n demo for how to extend this class and define a custom provider for i18n.\n */\n@Injectable()\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec\n   */\n  abstract getMonthShortName(month: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   * With default calendar we use ISO 8601: 'month' is 1=January ... 12=December\n   */\n  abstract getMonthFullName(month: number): string;\n\n  /**\n   * Returns the value of the 'aria-label' attribute for a specific date\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string, private _datePipe: DatePipe) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return this._datePipe.transform(jsDate, 'fullDate', null, this._locale);\n  }\n}\n","import {NgbCalendar, NgbPeriod} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _select$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get select$(): Observable<NgbDate> { return this._select$.pipe(filter(date => date !== null)); }\n\n  set disabled(disabled: boolean) {\n    if (this._state.disabled !== disabled) {\n      this._nextState({disabled});\n    }\n  }\n\n  set displayMonths(displayMonths: number) {\n    displayMonths = toInteger(displayMonths);\n    if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n      this._nextState({displayMonths});\n    }\n  }\n\n  set firstDayOfWeek(firstDayOfWeek: number) {\n    firstDayOfWeek = toInteger(firstDayOfWeek);\n    if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n      this._nextState({firstDayOfWeek});\n    }\n  }\n\n  set focusVisible(focusVisible: boolean) {\n    if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n      this._nextState({focusVisible});\n    }\n  }\n\n  set maxDate(date: NgbDateStruct) {\n    const maxDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.maxDate, maxDate)) {\n      this._nextState({maxDate});\n    }\n  }\n\n  set markDisabled(markDisabled: NgbMarkDisabled) {\n    if (this._state.markDisabled !== markDisabled) {\n      this._nextState({markDisabled});\n    }\n  }\n\n  set minDate(date: NgbDateStruct) {\n    const minDate = this.toValidDate(date, null);\n    if (isChangedDate(this._state.minDate, minDate)) {\n      this._nextState({minDate});\n    }\n  }\n\n  set navigation(navigation: 'select' | 'arrows' | 'none') {\n    if (this._state.navigation !== navigation) {\n      this._nextState({navigation});\n    }\n  }\n\n  set outsideDays(outsideDays: 'visible' | 'collapsed' | 'hidden') {\n    if (this._state.outsideDays !== outsideDays) {\n      this._nextState({outsideDays});\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusMove(period?: NgbPeriod, number?: number) {\n    this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._select$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: {year: number, month: number, day?: number}, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate))\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch ||\n          'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbCalendar} from './ngb-calendar';\nimport {toString} from '../util/util';\nimport {Key} from '../util/key';\nimport {NgbDate} from './ngb-date';\n\n@Injectable()\nexport class NgbDatepickerKeyMapService {\n  private _minDate: NgbDate;\n  private _maxDate: NgbDate;\n  private _firstViewDate: NgbDate;\n  private _lastViewDate: NgbDate;\n\n  constructor(private _service: NgbDatepickerService, private _calendar: NgbCalendar) {\n    _service.model$.subscribe(model => {\n      this._minDate = model.minDate;\n      this._maxDate = model.maxDate;\n      this._firstViewDate = model.firstDate;\n      this._lastViewDate = model.lastDate;\n    });\n  }\n\n  processKey(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.PageUp:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n          break;\n        case Key.PageDown:\n          this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n          break;\n        case Key.End:\n          this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n          break;\n        case Key.Home:\n          this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n          break;\n        case Key.ArrowLeft:\n          this._service.focusMove('d', -1);\n          break;\n        case Key.ArrowUp:\n          this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n          break;\n        case Key.ArrowRight:\n          this._service.focusMove('d', 1);\n          break;\n        case Key.ArrowDown:\n          this._service.focusMove('d', this._calendar.getDaysPerWeek());\n          break;\n        case Key.Enter:\n        case Key.Space:\n          this._service.focusSelect();\n          break;\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n}\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n}\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n}\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Configuration service for the NgbDatepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable()\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Date model to internal\n * NgbDateStruct model.\n * A default implementation converting from and to NgbDateStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n */\n@Injectable()\nexport abstract class NgbDateAdapter<T> {\n  /**\n   * Converts user-model date into an NgbDateStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbDateStruct;\n\n  /**\n   * Converts internal date value NgbDateStruct to user-model date\n   * The returned type is suposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(date: NgbDateStruct): T;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && date.year && date.month && date.day) ? {year: date.year, month: date.month, day: date.day} : null;\n  }\n}\n","import {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  TemplateRef,\n  forwardRef,\n  OnInit,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  ElementRef,\n  NgZone\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {NgbDatepickerKeyMapService} from './datepicker-keymap-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate} from './datepicker-tools';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * The payload of the datepicker navigation event\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * Currently displayed month\n   */\n  current: {year: number, month: number};\n\n  /**\n   * Month we're navigating to\n   */\n  next: {year: number, month: number};\n}\n\n/**\n * A lightweight and highly configurable datepicker directive\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      border: 1px solid #dfdfdf;\n      border-radius: 0.25rem;\n      display: inline-block;\n    }\n    .ngb-dp-month {\n      pointer-events: none;\n    }\n    .ngb-dp-header {\n      border-bottom: 0;\n      border-radius: 0.25rem 0.25rem 0 0;\n      padding-top: 0.25rem;\n    }\n    ngb-datepicker-month-view {\n      pointer-events: auto;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month + .ngb-dp-month > .ngb-dp-month-name {\n      padding-left: 1rem;\n    }\n    /deep/ .ngb-dp-month:last-child .ngb-dp-week {\n      padding-right: .25rem;\n    }\n    /deep/ .ngb-dp-month:first-child .ngb-dp-week {\n      padding-left: .25rem;\n    }\n    /deep/ .ngb-dp-month > ngb-datepicker-month-view > .ngb-dp-week:last-child {\n      padding-bottom: .25rem;\n    }\n    .ngb-dp-months {\n      display: -ms-flexbox;\n      display: flex;\n    }\n  `],\n  template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\" (focusin)=\"showFocus(true)\" (focusout)=\"showFocus(false)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  private _subscription: Subscription;\n  private _selectSubscription: Subscription;\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Max date for the navigation. If not provided, 'year' select box will display 10 years after current month\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Min date for the navigation. If not provided, 'year' select box will display 10 years before current month\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDateStruct.\n   */\n  @Output() select = new EventEmitter<NgbDateStruct>();\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _keyMapService: NgbDatepickerKeyMapService, public _service: NgbDatepickerService,\n      private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n, config: NgbDatepickerConfig,\n      private _cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n     'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    this._selectSubscription = _service.select$.subscribe(date => { this.select.emit(date.toStruct()); });\n\n    this._subscription = _service.model$.subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n      const newSelectedDate = model.selectedDate;\n      const oldSelectedDate = this.model ? this.model.selectedDate : null;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, oldSelectedDate)) {\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month}\n        });\n      }\n      _cd.markForCheck();\n    });\n  }\n\n  /**\n   * Manually focus the focusable day in the datepicker\n   */\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) { this._service.open(NgbDate.from(date)); }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n    this._selectSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(\n          input => this._service[input] = this[input]);\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    ['displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays']\n        .filter(input => input in changes)\n        .forEach(input => this._service[input] = this[input]);\n\n    if ('startDate' in changes) {\n      this.navigateTo(this.startDate);\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onKeyDown(event: KeyboardEvent) { this._keyMapService.processKey(event); }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this._service.disabled = isDisabled; }\n\n  showFocus(focusVisible: boolean) { this._service.focusVisible = focusVisible; }\n\n  writeValue(value) { this._service.select(NgbDate.from(this._ngbDateAdapter.fromModel(value))); }\n}\n","import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n@Component({\n  selector: 'ngb-datepicker-month-view',\n  host: {'role': 'grid'},\n  styles: [`\n    :host {\n      display: block;\n    }\n    .ngb-dp-weekday, .ngb-dp-week-number {\n      line-height: 2rem;\n      text-align: center;\n      font-style: italic;\n    }\n    .ngb-dp-weekday {\n      color: #5bc0de;\n      color: var(--info);\n    }\n    .ngb-dp-week {\n      border-radius: 0.25rem;\n      display: -ms-flexbox;\n      display: flex;\n    }\n    .ngb-dp-weekdays {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n      border-radius: 0;\n    }\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-day {\n      cursor: pointer;\n    }\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden {\n      cursor: default;\n    }\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ week.number }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonthView {\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n  @Input() month: MonthViewModel;\n  @Input() showWeekdays;\n  @Input() showWeekNumbers;\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.select.emit(NgbDate.from(day.date));\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n// The -ms- and -webkit- element for the CSS can be removed if we are generating the CSS using SASS.\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      display: -ms-flexbox;\n      display: flex;\n      align-items: center;\n    }\n    .ngb-dp-navigation-chevron {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      display: inline-block;\n      width: 0.75em;\n      height: 0.75em;\n      margin-left: 0.25em;\n      margin-right: 0.15em;\n      transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n    }\n    .right .ngb-dp-navigation-chevron {\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin-left: 0.15em;\n      margin-right: 0.25em;\n    }\n    .ngb-dp-arrow {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 auto;\n      flex-grow: 1;\n      padding-right: 0;\n      padding-left: 0;\n      margin: 0;\n      width: 2rem;\n      height: 2rem;\n    }\n    .ngb-dp-arrow.right {\n      -ms-flex-pack: end;\n      justify-content: flex-end;\n    }\n    .ngb-dp-arrow-btn {\n      padding: 0 0.25rem;\n      margin: 0 0.5rem;\n      border: none;\n      background-color: transparent;\n      z-index: 1;\n    }\n    .ngb-dp-arrow-btn:focus {\n      outline: auto 1px;\n    }\n    .ngb-dp-month-name {\n      font-size: larger;\n      height: 2rem;\n      line-height: 2rem;\n      text-align: center;\n    }\n    .ngb-dp-navigation-select {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex: 1 1 9rem;\n      flex-grow: 1;\n      flex-basis: 9rem;\n    }\n  `],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number) }} {{ month.year }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"!!navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n}\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * Abstract type serving as a DI token for the service parsing and formatting dates for the NgbInputDatepicker\n * directive. A default implementation using the ISO 8601 format is provided, but you can provide another implementation\n * to use an alternative format.\n */\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given value to an NgbDateStruct. Implementations should try their best to provide a result, even\n   * partial. They must return null if the value can't be parsed.\n   * @param value the value to parse\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given date to a string. Implementations should return an empty string if the given date is null,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   * @param date the date to format as a string\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      ClientRect {\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const placementPrimary = placement.split('-')[0] || 'top';\n    const placementSecondary = placement.split('-')[1] || 'center';\n\n    let targetElPosition: ClientRect = {\n      'height': targetElBCR.height || targetElement.offsetHeight,\n      'width': targetElBCR.width || targetElement.offsetWidth,\n      'top': 0,\n      'bottom': targetElBCR.height || targetElement.offsetHeight,\n      'left': 0,\n      'right': targetElBCR.width || targetElement.offsetWidth\n    };\n\n    switch (placementPrimary) {\n      case 'top':\n        targetElPosition.top =\n            hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height;\n        break;\n      case 'left':\n        targetElPosition.left =\n            hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width;\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        targetElPosition.top = hostElPosition.top;\n        break;\n      case 'bottom':\n        targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        targetElPosition.left = hostElPosition.left;\n        break;\n      case 'right':\n        targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n        } else {\n          targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n        }\n        break;\n    }\n\n    targetElPosition.top = Math.round(targetElPosition.top);\n    targetElPosition.bottom = Math.round(targetElPosition.bottom);\n    targetElPosition.left = Math.round(targetElPosition.left);\n    targetElPosition.right = Math.round(targetElPosition.right);\n\n    return targetElPosition;\n  }\n\n  // get the availble placements of the target element in the viewport dependeing on the host element\n  getAvailablePlacements(hostElement: HTMLElement, targetElement: HTMLElement): string[] {\n    let availablePlacements: Array<string> = [];\n    let hostElemClientRect = hostElement.getBoundingClientRect();\n    let targetElemClientRect = targetElement.getBoundingClientRect();\n    let html = document.documentElement;\n    let windowHeight = window.innerHeight || html.clientHeight;\n    let windowWidth = window.innerWidth || html.clientWidth;\n    let hostElemClientRectHorCenter = hostElemClientRect.left + hostElemClientRect.width / 2;\n    let hostElemClientRectVerCenter = hostElemClientRect.top + hostElemClientRect.height / 2;\n\n    // left: check if target width can be placed between host left and viewport start and also height of target is\n    // inside viewport\n    if (targetElemClientRect.width < hostElemClientRect.left) {\n      // check for left only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'left');\n      }\n      // check for left-top and left-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'left', availablePlacements);\n    }\n\n    // top: target height is less than host top\n    if (targetElemClientRect.height < hostElemClientRect.top) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'top');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'top', availablePlacements);\n    }\n\n    // right: check if target width can be placed between host right and viewport end and also height of target is\n    // inside viewport\n    if (windowWidth - hostElemClientRect.right > targetElemClientRect.width) {\n      // check for right only\n      if (hostElemClientRectVerCenter > targetElemClientRect.height / 2 &&\n          windowHeight - hostElemClientRectVerCenter > targetElemClientRect.height / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'right');\n      }\n      // check for right-top and right-bottom\n      this.setSecondaryPlacementForLeftRight(hostElemClientRect, targetElemClientRect, 'right', availablePlacements);\n    }\n\n    // bottom: check if there is enough space between host bottom and viewport end for target height\n    if (windowHeight - hostElemClientRect.bottom > targetElemClientRect.height) {\n      if (hostElemClientRectHorCenter > targetElemClientRect.width / 2 &&\n          windowWidth - hostElemClientRectHorCenter > targetElemClientRect.width / 2) {\n        availablePlacements.splice(availablePlacements.length, 1, 'bottom');\n      }\n      this.setSecondaryPlacementForTopBottom(hostElemClientRect, targetElemClientRect, 'bottom', availablePlacements);\n    }\n\n    return availablePlacements;\n  }\n\n  /**\n   * check if secondary placement for left and right are available i.e. left-top, left-bottom, right-top, right-bottom\n   * primaryplacement: left|right\n   * availablePlacementArr: array in which available placemets to be set\n   */\n  private setSecondaryPlacementForLeftRight(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if (targetElemClientRect.height <= hostElemClientRect.bottom) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-bottom');\n    }\n    if ((window.innerHeight || html.clientHeight) - hostElemClientRect.top >= targetElemClientRect.height) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-top');\n    }\n  }\n\n  /**\n   * check if secondary placement for top and bottom are available i.e. top-left, top-right, bottom-left, bottom-right\n   * primaryplacement: top|bottom\n   * availablePlacementArr: array in which available placemets to be set\n   */\n  private setSecondaryPlacementForTopBottom(\n      hostElemClientRect: ClientRect, targetElemClientRect: ClientRect, primaryPlacement: string,\n      availablePlacementArr: Array<string>) {\n    let html = document.documentElement;\n    // check for left-bottom\n    if ((window.innerWidth || html.clientWidth) - hostElemClientRect.left >= targetElemClientRect.width) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-left');\n    }\n    if (targetElemClientRect.width <= hostElemClientRect.right) {\n      availablePlacementArr.splice(availablePlacementArr.length, 1, primaryPlacement + '-right');\n    }\n  }\n}\n\nconst positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean): Placement {\n  let placementVals: Array<Placement> = Array.isArray(placement) ? placement : [placement as Placement];\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top',\n     'left-bottom', 'right-top', 'right-bottom',\n    ].forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n  let topVal = 0, leftVal = 0;\n  let appliedPlacement: Placement;\n  // get available placements\n  let availablePlacements = positionService.getAvailablePlacements(hostElement, targetElement);\n  // iterate over all the passed placements\n  for (let { item, index } of toItemIndexes(placementVals)) {\n    // check if passed placement is present in the available placement or otherwise apply the last placement in the\n    // passed placement list\n    if ((availablePlacements.find(val => val === item) != null) || (placementVals.length === index + 1)) {\n      appliedPlacement = <Placement>item;\n      const pos = positionService.positionElements(hostElement, targetElement, item, appendToBody);\n      topVal = pos.top;\n      leftVal = pos.left;\n      break;\n    }\n  }\n  targetElement.style.top = `${topVal}px`;\n  targetElement.style.left = `${leftVal}px`;\n  return appliedPlacement;\n}\n\n// function to get index and item of an array\nfunction toItemIndexes<T>(a: T[]) {\n  return a.map((item, index) => ({item, index}));\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>;\n","import {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {Key} from '../util/key';\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: NodeListOf<HTMLElement> = element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n */\nexport const ngbFocusTrap = (element: HTMLElement, stopFocusTrap$: Observable<any>) => {\n  // last focused element\n  const lastFocusedElement$ =\n      fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n  // 'tab' / 'shift+tab' stream\n  fromEvent<KeyboardEvent>(element, 'keydown')\n      .pipe(takeUntil(stopFocusTrap$), filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n      .subscribe(([tabEvent, focusedElement]) => {\n        const[first, last] = getFocusableBoundaryElements(element);\n\n        if (focusedElement === first && tabEvent.shiftKey) {\n          last.focus();\n          tabEvent.preventDefault();\n        }\n\n        if (focusedElement === last && !tabEvent.shiftKey) {\n          first.focus();\n          tabEvent.preventDefault();\n        }\n      });\n\n  // inside click\n  fromEvent(element, 'click')\n      .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n      .subscribe(lastFocusedElement => lastFocusedElement.focus());\n};\n","import {\n  Directive,\n  Input,\n  ComponentRef,\n  ElementRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentFactoryResolver,\n  NgZone,\n  TemplateRef,\n  forwardRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  Inject\n} from '@angular/core';\nimport {AbstractControl, ControlValueAccessor, Validator, NG_VALUE_ACCESSOR, NG_VALIDATORS} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\n\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDatepickerService} from './datepicker-service';\n\nimport {Subject, fromEvent, race} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that makes it possible to have datepickers on input fields.\n * Manages integration with the input field itself (data entry) and ngModel (validation etc.).\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _clickableElements = new Set<HTMLElement>();\n  private _closed$ = new Subject();\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _model: NgbDate;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * By default the popup will close on both date selection and outside click. If the value is 'false' the popup has to\n   * be closed manually via '.close()' or '.toggle()' methods. If the value is set to 'inside' the popup will close on\n   * date selection only. For the 'outside' the popup will close only on the outside click.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside' = true;\n\n  /**\n   * Reference for the custom template for the day display\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * Number of months to display\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * First day of the week. With default calendar we use ISO 8601: 1=Mon ... 7=Sun\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * Callback to mark a given date as disabled.\n   * 'Current' contains the month that will be displayed in the view\n   */\n  @Input() markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n\n  /**\n   * Min date for the navigation. If not provided will be 10 years before today or `startDate`\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Max date for the navigation. If not provided will be 10 years from today or `startDate`\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type: `select` (default with select boxes for month and year), `arrows`\n   * (without select boxes, only navigation arrows) or `none` (no navigation at all)\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way to display days that don't belong to current month: `visible` (default),\n   * `hidden` (not displayed) or `collapsed` (not displayed with empty space collapsed)\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * Placement of a datepicker popup accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * Whether to display days of the week\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * Whether to display week numbers\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * Date to open calendar with.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided, calendar will open with current month.\n   * Use 'navigateTo(date)' as an alternative\n   */\n  @Input() startDate: {year: number, month: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * An event fired when user selects a date using keyboard or mouse.\n   * The payload of the event is currently selected NgbDateStruct.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDateStruct>();\n\n  /**\n   * An event fired when navigation happens and currently displayed month changes.\n   * See NgbDatepickerNavigateEvent for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      ngZone: NgZone, private _service: NgbDatepickerService, private _calendar: NgbCalendar,\n      private _ngbDateAdapter: NgbDateAdapter<any>, @Inject(DOCUMENT) private _document: any) {\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._cRef) {\n        positionElements(\n            this._elRef.nativeElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n      }\n    });\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; };\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const value = c.value;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: c.value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {requiredBefore: this.minDate}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {requiredAfter: this.maxDate}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._ngbDateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    this._onChange(this._model ? this._ngbDateAdapter.toModel(this._model) : (value === '' ? null : value));\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker with the selected date indicated by the ngModel value.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      ngbFocusTrap(this._cRef.location.nativeElement, this._closed$);\n\n      this._cRef.instance.focus();\n\n      // closing on ESC\n      // clang-format off\n      const escapes$ = fromEvent<KeyboardEvent>(this._document, 'keyup')\n        .pipe(\n          takeUntil(this._closed$),\n          filter(e => e.which === Key.Escape)\n        );\n\n      // closing on outside clicks\n      const outsideClicks$ = this.autoClose === true || this.autoClose === 'outside' ?\n        fromEvent<MouseEvent>(this._document, 'click')\n          .pipe(\n            takeUntil(this._closed$),\n            filter(e => {\n              const clickableElements = [\n                this._elRef.nativeElement,\n                this._cRef.location.nativeElement,\n                ...Array.from(this._clickableElements)\n              ];\n              return !clickableElements.some(el => el && el.contains(e.target))\n            })\n          ) : null;\n      // clang-format on\n\n      race<Event>([escapes$, outsideClicks$]).pipe(take(1)).subscribe(() => this.close());\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this._closed$.next();\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup (opens when closed and closes when opened).\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Registers an html element outside of the datepicker popup as clickable.\n   * Clicking on this element will not close the datepicker popup\n   *\n   * @since 3.0.0\n   */\n  registerClickableElement(element: HTMLElement) {\n    if (element) {\n      this._clickableElements.add(element);\n    }\n  }\n\n  /**\n   * Navigates current view to provided date.\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   * Use 'startDate' input as an alternative\n   */\n  navigateTo(date?: {year: number, month: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'displayMonths', 'firstDayOfWeek', 'markDisabled', 'minDate', 'maxDate', 'navigation',\n     'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.setStyle(nativeElement, 'padding', '0');\n    this._renderer.addClass(nativeElement, 'show');\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(date => this.navigate.emit(date));\n    datepickerInstance.select.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', this._parserFormatter.format(model));\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._ngbDateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n}\n","import {NgbInputDatepicker} from './datepicker-input';\nimport {Directive, ElementRef, Input} from '@angular/core';\n\n/**\n * A directive to mark an element that triggers the datepicker popup opening and closing\n *\n * @since 3.0.0\n */\n@Directive({selector: '[ngbDatepickerToggle]'})\nexport class NgbDatepickerToggle {\n  /**\n   * A reference to the `NgbInputDatepicker` instance\n   */\n  @Input()\n  set ngbDatepickerToggle(datepicker: NgbInputDatepicker) {\n    datepicker.registerClickableElement(this._element.nativeElement);\n  };\n\n  constructor(private _element: ElementRef<HTMLElement>) {}\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host {\n      text-align: center;\n      width: 2rem;\n      height: 2rem;\n      line-height: 2rem;\n      border-radius: 0.25rem;\n      background: transparent;\n    }\n    :host.outside {\n      opacity: 0.5;\n    }\n  `],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ date.day }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDateStruct;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    :host>select {\n      display: flex;\n      display: -ms-flexbox;\n      -ms-flex: 1 1 auto;\n      width: 100%;\n      padding: 0 0.5rem;\n      font-size: 0.875rem;\n      height: 1.85rem;\n    }\n  `],\n  template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m)\" [value]=\"m\">{{ i18n.getMonthShortName(m) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ y }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysInIslamicMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this.setMonth(date, date.month - 1);\n        mDays = this.getDaysInIslamicMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this.setMonth(date, date.month + 1);\n        mDays = this.getDaysInIslamicMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  setYear(date: NgbDate, yearValue: number): NgbDate {\n    date.year = +yearValue;\n    return date;\n  }\n\n  abstract getWeekday(date: NgbDate): number;\n\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  abstract getWeekNumber(week: NgbDate[], firstDayOfWeek: number): number;\n\n  abstract getToday(): NgbDate;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hijriDate: NgbDate): Date;\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysInIslamicMonth(month: number, year: number): number;\n\n  protected _isIslamicLeapYear(year: number): boolean { return (14 + 11 * year) % 30 < 11; }\n\n  /**\n   * Returns the start of Hijri Month.\n   * `month` is 0 for Muharram, 1 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  protected _getMonthStart(year: number, month: number): number {\n    return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n  }\n\n  /**\n   * Returns the start of Hijri year.\n   * `year` is any Hijri year.\n   */\n  protected _getYearStart(year: number): number { return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0); }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\n\nfunction isGregorianLeapYear(date: Date): boolean {\n  const year = date.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gdate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gdate: Date): NgbDate {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(date) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - this._getYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - this._getMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hijriDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hijriDate: NgbDate): Date {\n    const hYear = hijriDate.year;\n    const hMonth = hijriDate.month - 1;\n    const hDate = hijriDate.day;\n    const julianDay =\n        hDate + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysInIslamicMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && this._isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = NgbDate.from(date);\n\n    switch (period) {\n      case 'y':\n        date = this.setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this.setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this.setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {NgbPeriod} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst ISLAMIC_CIVIL = new NgbCalendarIslamicCivil();\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  const diff = Math.abs(date1.getTime() - date2.getTime());\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarHijri {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return ISLAMIC_CIVIL.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hijriDate: NgbDate): Date {\n    const hYear = hijriDate.year;\n    const hMonth = hijriDate.month - 1;\n    const hDay = hijriDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = ISLAMIC_CIVIL.toGregorian(hijriDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri month.\n  * `month` is 1 for Muharram, 2 for Safar, etc.\n  * `year` is any Hijri year.\n  */\n  getDaysInIslamicMonth(month: number, year: number): number {\n    if (year >= HIJRI_BEGIN && year <= HIJRI_END) {\n      const pos = year - HIJRI_BEGIN;\n      return MONTH_LENGTH[pos].charAt(month - 1) === '1' ? 30 : 29;\n    }\n    return ISLAMIC_CIVIL.getDaysInIslamicMonth(month, year);\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = NgbDate.from(date);\n\n    switch (period) {\n      case 'y':\n        date = this.setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this.setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this.setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / ONE_DAY) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  fromModel(date: Date): NgbDateStruct {\n    return (date && date.getFullYear) ? {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()} :\n                                        null;\n  }\n\n  toModel(date: NgbDateStruct): Date {\n    return date && date.year && date.month ? new Date(date.year, date.month - 1, date.day) : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule, DatePipe} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {NgbDatepickerMonthView} from './datepicker-month-view';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerToggle} from './datepicker-toggle';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerI18n, NgbDatepickerI18nDefault} from './datepicker-i18n';\nimport {NgbCalendar, NgbCalendarGregorian} from './ngb-calendar';\nimport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nimport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nimport {NgbDateParserFormatter, NgbDateISOParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateAdapter, NgbDateStructAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nimport {NgbDatepickerConfig} from './datepicker-config';\n\nexport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbDatepickerToggle} from './datepicker-toggle';\nexport {NgbCalendar} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbDatepickerMonthView} from './datepicker-month-view';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n    NgbInputDatepicker, NgbDatepickerToggle\n  ],\n  exports: [NgbDatepicker, NgbInputDatepicker, NgbDatepickerToggle],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgbDatepickerModule,\n      providers: [\n        {provide: NgbCalendar, useClass: NgbCalendarGregorian},\n        {provide: NgbDatepickerI18n, useClass: NgbDatepickerI18nDefault},\n        {provide: NgbDateParserFormatter, useClass: NgbDateISOParserFormatter},\n        {provide: NgbDateAdapter, useClass: NgbDateStructAdapter}, NgbDatepickerConfig, DatePipe\n      ]\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbDropdown directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable()\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  forwardRef,\n  Inject,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ContentChild,\n  NgZone,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {NgbDropdownConfig} from './dropdown-config';\nimport {positionElements, PlacementArray, Placement} from '../util/positioning';\nimport {Key} from '../util/key';\n\n/**\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {'[class.dropdown-menu]': 'true', '[class.show]': 'dropdown.isOpen()', '[attr.x-placement]': 'placement'}\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  constructor(\n      @Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>,\n      private _renderer: Renderer2) {}\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n\n  position(triggerEl, placement) {\n    this.applyPlacement(positionElements(triggerEl, this._elementRef.nativeElement, placement));\n  }\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    this._renderer.removeClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    this.placement = _placement;\n    /**\n     * apply the new placement\n     * in case of top use up-arrow or down-arrow otherwise\n     */\n    if (_placement.search('^top') !== -1) {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropup');\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement.parentNode, 'dropdown');\n    }\n  }\n}\n\n/**\n * Marks an element to which dropdown menu will be anchored. This is a simple version\n * of the NgbDropdownToggle directive. It plays the same role as NgbDropdownToggle but\n * doesn't listen to click events to toggle dropdown menu thus enabling support for\n * events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  isEventFrom($event) { return this._elementRef.nativeElement.contains($event.target); }\n}\n\n/**\n * Allows the dropdown to be toggled via click. This directive is optional: you can use NgbDropdownAnchor as an\n * alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'toggleOpen()'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n\n  toggleOpen() { this.dropdown.toggle(); }\n}\n\n/**\n * Transforms a node into a dropdown.\n */\n@Directive({\n  selector: '[ngbDropdown]',\n  exportAs: 'ngbDropdown',\n  host: {'[class.show]': 'isOpen()', '(document:click)': 'closeFromClick($event)'}\n})\nexport class NgbDropdown implements OnInit,\n    OnDestroy {\n  private _zoneSubscription: any;\n\n  @ContentChild(NgbDropdownMenu) private _menu: NgbDropdownMenu;\n\n  @ContentChild(NgbDropdownAnchor) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates that dropdown should be closed when selecting one of dropdown items (click) or pressing ESC.\n   * When it is true (default) dropdowns are automatically closed on both outside and inside (menu) clicks.\n   * When it is false dropdowns are never automatically closed.\n   * When it is 'outside' dropdowns are automatically closed on outside clicks but not on menu clicks.\n   * When it is 'inside' dropdowns are automatically on menu clicks but not on outside clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   *  Defines whether or not the dropdown-menu is open initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   *  An event fired when the dropdown is opened or closed.\n   *  Event's payload equals whether dropdown is open.\n   */\n  @Output() openChange = new EventEmitter();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone) {\n    this.placement = config.placement;\n    this.autoClose = config.autoClose;\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngOnInit() {\n    if (this._menu) {\n      this._menu.applyPlacement(Array.isArray(this.placement) ? (this.placement[0]) : this.placement as Placement);\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open or not.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu of a given navbar or tabbed navigation.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._positionMenu();\n      this.openChange.emit(true);\n      this._ngZone.runOutsideAngular(\n          () => fromEvent<KeyboardEvent>(this._document, 'keyup')\n                    .pipe(\n                        takeUntil(this.openChange.pipe(filter(open => open === false))),\n                        filter(event => event.which === Key.Escape))\n                    .subscribe(() => {\n                      this.closeFromOutsideEsc();\n                      this._changeDetector.detectChanges();\n                    }));\n    }\n  }\n\n  /**\n   * Closes the dropdown menu of a given navbar or tabbed navigation.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this.openChange.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  closeFromClick($event) {\n    if (this.autoClose && $event.button !== 2 && !this._isEventFromToggle($event)) {\n      if (this.autoClose === true) {\n        this.close();\n      } else if (this.autoClose === 'inside' && this._isEventFromMenu($event)) {\n        this.close();\n      } else if (this.autoClose === 'outside' && !this._isEventFromMenu($event)) {\n        this.close();\n      }\n    }\n  }\n\n  closeFromOutsideEsc() {\n    if (this.autoClose) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() { this._zoneSubscription.unsubscribe(); }\n\n  private _isEventFromToggle($event) { return this._anchor.isEventFrom($event); }\n\n  private _isEventFromMenu($event) { return this._menu ? this._menu.isEventFrom($event) : false; }\n\n  private _positionMenu() {\n    if (this.isOpen() && this._menu) {\n      this._menu.position(this._anchor.anchorEl, this.placement);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nimport {NgbDropdownConfig} from './dropdown-config';\n\nexport {NgbDropdown, NgbDropdownToggle, NgbDropdownMenu} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbDropdownModule, providers: [NgbDropdownConfig]}; }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  template: '',\n  host: {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  Inject,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  AfterViewInit,\n  OnDestroy\n} from '@angular/core';\n\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\nimport {ngbFocusTrap} from '../util/focus-trap';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '(keyup.esc)': 'escKey($event)',\n    '(click)': 'backdropClick($event)',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _document: any;\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(@Inject(DOCUMENT) document, private _elRef: ElementRef<HTMLElement>, private _renderer: Renderer2) {\n    this._document = document;\n    ngbFocusTrap(this._elRef.nativeElement, this.dismissEvent);\n  }\n\n  backdropClick($event): void {\n    if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n      this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  escKey($event): void {\n    if (this.keyboard && !$event.defaultPrevented) {\n      this.dismiss(ModalDismissReasons.ESC);\n    }\n  }\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n    this._renderer.addClass(this._document.body, 'modal-open');\n  }\n\n  ngAfterViewInit() {\n    if (!this._elRef.nativeElement.contains(document.activeElement)) {\n      this._elRef.nativeElement['focus'].apply(this._elRef.nativeElement, []);\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    elementToFocus['focus'].apply(elementToFocus, []);\n\n    this._elWithFocus = null;\n    this._renderer.removeClass(body, 'modal-open');\n  }\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), 0, this._injector,\n          this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = this._viewContainerRef.createEmbeddedView(<TemplateRef<T>>content, context);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to an active (currently opened) modal. Instances of this class\n * can be injected into components passed as modal content.\n */\nexport class NgbActiveModal {\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to a newly opened modal.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of component used as modal's content.\n   * Undefined when a TemplateRef is used as modal's content.\n   */\n  get componentInstance(): any {\n    if (this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  // only needed to keep TS1.8 compatibility\n  set componentInstance(instance: any) {}\n\n  /**\n   * A promise that is resolved when a modal is closed and rejected when a modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Can be used to close a modal, passing an optional result.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Can be used to dismiss a modal, passing an optional reason.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  Injectable,\n  Injector,\n  Inject,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  TemplateRef\n} from '@angular/core';\n\nimport {ContentRef} from '../util/popup';\nimport {isDefined, isString} from '../util/util';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\n\n@Injectable()\nexport class NgbModalStack {\n  private _document: any;\n  private _windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n  private _backdropAttributes = ['backdropClass'];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector,\n      private _componentFactoryResolver: ComponentFactoryResolver, @Inject(DOCUMENT) document) {\n    this._document = document;\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl =\n        isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  private _attachBackdrop(containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory: ComponentFactory<NgbModalBackdrop> =\n        this._componentFactoryResolver.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(containerEl: any, contentRef: any): ComponentRef<NgbModalWindow> {\n    let windowFactory = this._componentFactoryResolver.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, context);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, context);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, context: NgbActiveModal): ContentRef {\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any,\n      context: NgbActiveModal): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector = Injector.create([{provide: NgbActiveModal, useValue: context}], contentInjector);\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    this._applicationRef.attachView(componentRef.hostView);\n    return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModalRef} from './modal-ref';\n\n/**\n * Represent options available when opening new modal windows.\n */\nexport interface NgbModalOptions {\n  /**\n   * Sets the aria attribute aria-labelledby to a modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * Whether a backdrop element should be created for a given modal (true by default).\n   * Alternatively, specify 'static' for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Function called when a modal will be dismissed.\n   * If this function returns false, the promise is resolved with false or the promise is rejected, the modal is not\n   * dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * To center the modal vertically (false by default).\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * An element to which to attach newly opened modal windows.\n   */\n  container?: string;\n\n  /**\n   * Injector to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * Whether to close the modal when escape key is pressed (true by default).\n   */\n  keyboard?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg';\n\n  /**\n   * Custom class to append to the modal window\n   */\n  windowClass?: string;\n\n  /**\n   * Custom class to append to the modal backdrop\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A service to open modal windows. Creating a modal is straightforward: create a template and pass it as an argument to\n * the \"open\" method!\n */\n@Injectable()\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack) {}\n\n  /**\n   * Opens a new modal window with the specified content and using supplied options. Content can be provided\n   * as a TemplateRef or a component type. If you pass a component type as content than instances of those\n   * components can be injected with an instance of the NgbActiveModal class. You can use methods on the\n   * NgbActiveModal class to close / dismiss modals from \"inside\" of a component.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    return this._modalStack.open(this._moduleCFR, this._injector, content, options);\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\nimport {NgbModalStack} from './modal-stack';\nimport {NgbModal} from './modal';\n\nexport {NgbModal, NgbModalOptions} from './modal';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbModalModule, providers: [NgbModal, NgbModalStack]}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbPagination component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable()\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {Component, EventEmitter, Input, Output, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A directive that will take care of visualising a pagination bar and enable / disable buttons correctly!\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"!hasPrevious() || disabled\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page-1)\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">...</a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"!!selectPage(pageNumber)\">\n          {{pageNumber}}\n          <span *ngIf=\"pageNumber === page\" class=\"sr-only\">(current)</span>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(page+1)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"!hasNext() || disabled\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"!!selectPage(pageCount)\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  /**\n   * Whether to disable buttons from user input\n   */\n  @Input() disabled: boolean;\n\n  /**\n   *  Whether to show the \"First\" and \"Last\" page links\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   *  Whether to show the \"Next\" and \"Previous\" page links\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   *  Whether to show ellipsis symbols and first/last page numbers when maxSize > number of pages\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   *  Whether to rotate pages when maxSize > number of pages.\n   *  Current page will be in the middle\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  Number of items in collection.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  Maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  Current page. Page numbers start with 1\n   */\n  @Input() page = 1;\n\n  /**\n   *  Number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed.\n   *  Event's payload equals to the newly selected page.\n   *  Will fire only if collection size is set and all values are valid.\n   *  Page numbers start with 1\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * Pagination display size: small or large\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        if (start > 1) {\n          this.pages.unshift(-1);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        if (end < (this.pageCount - 1)) {\n          this.pages.push(-1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbPagination} from './pagination';\nimport {NgbPaginationConfig} from './pagination-config';\n\nexport {NgbPagination} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\n@NgModule({declarations: [NgbPagination], exports: [NgbPagination], imports: [CommonModule]})\nexport class NgbPaginationModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPaginationModule, providers: [NgbPaginationConfig]}; }\n}\n","export class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave']\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nconst noopFn = () => {};\n\nexport function listenToTriggers(renderer: any, nativeElement: any, triggers: string, openFn, closeFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return noopFn;\n  }\n\n  parsedTriggers.forEach((trigger: Trigger) => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n    } else {\n      listeners.push(\n          renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n    }\n  });\n\n  return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbPopover directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable()\nexport class NgbPopoverConfig {\n  placement: PlacementArray = 'top';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges\n} from '@angular/core';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]':\n        '\"popover bs-popover-\" + placement.split(\"-\")[0]+\" bs-popover-\" + placement + (popoverClass ? \" \" + popoverClass : \"\")',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\">{{title}}</h3><div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styles: [`\n    :host.bs-popover-top .arrow, :host.bs-popover-bottom .arrow {\n      left: 50%;\n      margin-left: -5px;\n    }\n\n    :host.bs-popover-top-left .arrow, :host.bs-popover-bottom-left .arrow {\n      left: 2em;\n    }\n\n    :host.bs-popover-top-right .arrow, :host.bs-popover-bottom-right .arrow {\n      left: auto;\n      right: 2em;\n    }\n\n    :host.bs-popover-left .arrow, :host.bs-popover-right .arrow {\n      top: 50%;\n      margin-top: -5px;\n    }\n\n    :host.bs-popover-left-top .arrow, :host.bs-popover-right-top .arrow {\n      top: 0.7em;\n    }\n\n    :host.bs-popover-left-bottom .arrow, :host.bs-popover-right-bottom .arrow {\n      top: auto;\n      bottom: 0.7em;\n    }\n  `]\n})\nexport class NgbPopoverWindow {\n  @Input() placement: Placement = 'top';\n  @Input() title: string;\n  @Input() id: string;\n  @Input() popoverClass: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-popover-' + this.placement.toString());\n  }\n}\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Content to be displayed as popover. If title and content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n  /**\n   * Title of a popover. If title and content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n   */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given popover is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n  /**\n   * An optional class applied to ngb-popover-window\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Opens an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   * The context is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position popover along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs popover. This is considered a âmanualâ triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._unregisterListenersFn();\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {NgbPopoverConfig} from './popover-config';\nimport {Placement} from '../util/positioning';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbPopover, NgbPopoverWindow], exports: [NgbPopover], entryComponents: [NgbPopoverWindow]})\nexport class NgbPopoverModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbPopoverModule, providers: [NgbPopoverConfig]}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbProgressbar component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable()\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {getValueInRange} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * Directive that can be used to provide feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  /**\n   * Maximal value to be displayed in the progressbar.\n   */\n  @Input() max: number;\n\n  /**\n   * A flag indicating if the stripes of the progress bar should be animated. Takes effect only for browsers\n   * supporting CSS3 animations, and if striped is true.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * A flag indicating if a progress bar should be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * A flag indicating if the current percentage value should be shown.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Type of progress bar, can be one of \"success\", \"info\", \"warning\" or \"danger\".\n   */\n  @Input() type: string;\n\n  /**\n   * Current value to be displayed in the progressbar. Should be smaller or equal to \"max\" value.\n   */\n  @Input() value = 0;\n\n  /**\n   * Height of the progress bar. Accepts any valid CSS height values, ex. '2rem'\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbProgressbarModule, providers: [NgbProgressbarConfig]}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbRating component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable()\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges,\n  ContentChild,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {toString, getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Context for the custom star display template\n */\nexport interface StarTemplateContext {\n  /**\n   * Star fill percentage. An integer value between 0 and 100\n   */\n  fill: number;\n\n  /**\n   * Index of the star.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * Rating directive that will take care of visualising a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'd-inline-flex',\n    'tabindex': '0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || t\" [ngTemplateOutletContext]=\"contexts[index]\"></ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * Maximal rating that can be given using this widget.\n   */\n  @Input() max: number;\n\n  /**\n   * Current rating. Can be a decimal value like 3.75\n   */\n  @Input() rate: number;\n\n  /**\n   * A flag indicating if rating can be updated.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * A flag indicating if rating can be reset to 0 on mouse click\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * A template to override star display.\n   * Alternatively put a <ng-template> as the only child of <ngb-rating> element\n   */\n  @Input() @ContentChild(TemplateRef) starTemplate: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) { this.update(this.resettable && this.rate === value ? 0 : value); }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (Key[toString(event.which)]) {\n      event.preventDefault();\n\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n        case Key.Home:\n          this.update(0);\n          break;\n        case Key.End:\n          this.update(this.max);\n          break;\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return Number.parseInt((diff * 100).toFixed(2));\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NgbRatingConfig} from './rating-config';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRatingModule, providers: [NgbRatingConfig]}; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTabset component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\n@Injectable()\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","import {\n  Component,\n  Input,\n  ContentChildren,\n  QueryList,\n  Directive,\n  TemplateRef,\n  ContentChild,\n  AfterContentChecked,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * This directive should be used to wrap tab titles that need to contain HTML markup or other directives.\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * This directive must be used to wrap content to be displayed in a tab.\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab {\n  /**\n   * Unique tab identifier. Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n  /**\n   * Simple (string only) title. Use the \"NgbTabTitle\" directive for more complex use-cases.\n   */\n  @Input() title: string;\n  /**\n   * Allows toggling disabled state of a given state. Disabled tabs can't be selected.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContantChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * Id of the currently active tab\n   */\n  activeId: string;\n\n  /**\n   * Id of the newly selected tab\n   */\n  nextId: string;\n\n  /**\n   * Function that will prevent tab switch if called\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"!!select(tab.id)\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-expanded]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\"\n          [attr.aria-expanded]=\"tab.id === activeId\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * An identifier of an initially selected (active) tab. Use the \"select\" method to switch a tab programmatically.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Whether the closed tabs should be hidden without destroying them\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the nav with flexbox utilities. Can be one of 'start', 'center', 'end', 'fill' or\n   * 'justified'\n   * The default value is 'start'.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the nav (horizontal or vertical).\n   * The default value is 'horizontal'.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs. Can be one of 'tabs' or 'pills'.\n   */\n  @Input() type: 'tabs' | 'pills';\n\n  /**\n   * A tab change event fired right before the tab selection happens. See NgbTabChangeEvent for payload details\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated pane.\n   * Any other tab that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nimport {NgbTabsetConfig} from './tabset-config';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTabsetModule, providers: [NgbTabsetConfig]}; }\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Configuration service for the NgbTimepicker component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable()\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * Abstract type serving as a DI token for the service converting from your application Time model to internal\n * NgbTimeStruct model.\n * A default implementation converting from and to NgbTimeStruct is provided for retro-compatibility,\n * but you can provide another implementation to use an alternative format, ie for using with native Date Object.\n *\n * @since 2.2.0\n */\n@Injectable()\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts user-model date into an NgbTimeStruct for internal use in the library\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts internal time value NgbTimeStruct to user-model date\n   * The returned type is supposed to be of the same type as fromModel() input-value param\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Component, forwardRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A lightweight & configurable timepicker directive.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  styles: [`\n\n    :host {\n      font-size: 1rem;\n    }\n\n    .ngb-tp {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-align: center;\n      align-items: center;\n    }\n\n    .ngb-tp-input-container {\n      width: 4em;\n    }\n\n    .ngb-tp-hour, .ngb-tp-minute, .ngb-tp-second, .ngb-tp-meridian {\n      display: -ms-flexbox;\n      display: flex;\n      -ms-flex-direction: column;\n      flex-direction: column;\n      -ms-flex-align: center;\n      align-items: center;\n      -ms-flex-pack: distribute;\n      justify-content: space-around;\n    }\n\n    .ngb-tp-spacer {\n      width: 1em;\n      text-align: center;\n    }\n\n    .chevron::before {\n      border-style: solid;\n      border-width: 0.29em 0.29em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.69em;\n      left: 0.05em;\n      position: relative;\n      top: 0.15em;\n      transform: rotate(-45deg);\n      -webkit-transform: rotate(-45deg);\n      -ms-transform: rotate(-45deg);\n      vertical-align: middle;\n      width: 0.71em;\n    }\n\n    .chevron.bottom:before {\n      top: -.3em;\n      -webkit-transform: rotate(135deg);\n      -ms-transform: rotate(135deg);\n      transform: rotate(135deg);\n    }\n\n    input {\n      text-align: center;\n    }\n  `],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeHour(-hourStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeMinute(-minuteStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"setFormControlSize()\" maxlength=\"2\"\n            placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readonly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\">\n          <button *ngIf=\"spinners\" type=\"button\" class=\"btn btn-link\" [ngClass]=\"setButtonSize()\" (click)=\"changeSecond(-secondStep)\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n            <span class=\"chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [ngClass]=\"setButtonSize()\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * Whether to display the spinners above and below the inputs.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * Whether to display seconds input.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * Number of hours to increase or decrease when using a button.\n   */\n  @Input() hourStep: number;\n\n  /**\n   * Number of minutes to increase or decrease when using a button.\n   */\n  @Input() minuteStep: number;\n\n  /**\n   * Number of seconds to increase or decrease when using a button.\n   */\n  @Input() secondStep: number;\n\n  /**\n   * To make timepicker readonly\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * To set the size of the inputs and button\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>) {\n    this.meridian = config.meridian;\n    this.spinners = config.spinners;\n    this.seconds = config.seconds;\n    this.hourStep = config.hourStep;\n    this.minuteStep = config.minuteStep;\n    this.secondStep = config.secondStep;\n    this.disabled = config.disabled;\n    this.readonlyInputs = config.readonlyInputs;\n    this.size = config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  setFormControlSize() { return {'form-control-sm': this.size === 'small', 'form-control-lg': this.size === 'large'}; }\n\n  setButtonSize() { return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'}; }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter, NgbTimeStructAdapter} from './ngb-time-adapter';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgbTimepickerModule,\n      providers: [NgbTimepickerConfig, {provide: NgbTimeAdapter, useClass: NgbTimeStructAdapter}]\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTooltip directive.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable()\nexport class NgbTooltipConfig {\n  placement: PlacementArray = 'top';\n  triggers = 'hover';\n  container: string;\n  disableTooltip = false;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport {listenToTriggers} from '../util/triggers';\nimport {positionElements, Placement, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class]': '\"tooltip show bs-tooltip-\" + placement.split(\"-\")[0]+\" bs-tooltip-\" + placement',\n    'role': 'tooltip',\n    '[id]': 'id'\n  },\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styles: [`\n    :host.bs-tooltip-top .arrow, :host.bs-tooltip-bottom .arrow {\n      left: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-top-left .arrow, :host.bs-tooltip-bottom-left .arrow {\n      left: 1em;\n    }\n\n    :host.bs-tooltip-top-right .arrow, :host.bs-tooltip-bottom-right .arrow {\n      left: auto;\n      right: 0.8rem;\n    }\n\n    :host.bs-tooltip-left .arrow, :host.bs-tooltip-right .arrow {\n      top: calc(50% - 0.4rem);\n    }\n\n    :host.bs-tooltip-left-top .arrow, :host.bs-tooltip-right-top .arrow {\n      top: 0.4rem;\n    }\n\n    :host.bs-tooltip-left-bottom .arrow, :host.bs-tooltip-right-bottom .arrow {\n      top: auto;\n      bottom: 0.4rem;\n    }\n  `]\n})\nexport class NgbTooltipWindow {\n  @Input() placement: Placement = 'top';\n  @Input() id: string;\n\n  constructor(private _element: ElementRef<HTMLElement>, private _renderer: Renderer2) {}\n\n  applyPlacement(_placement: Placement) {\n    // remove the current placement classes\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.removeClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n\n    // set the new placement classes\n    this.placement = _placement;\n\n    // apply the new placement\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString().split('-')[0]);\n    this._renderer.addClass(this._element.nativeElement, 'bs-tooltip-' + this.placement.toString());\n  }\n}\n\n/**\n * A lightweight, extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy {\n  /**\n    * Placement of a popover accepts:\n    *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n    *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n    * and array of above values.\n    */\n  @Input() placement: PlacementArray;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n  /**\n   * A flag indicating if a given tooltip is disabled and should not be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      ngZone: NgZone) {\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        this._windowRef.instance.applyPlacement(\n            positionElements(\n                this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n                this.container === 'body'));\n      }\n    });\n  }\n\n  /**\n   * Content to be displayed as tooltip. If falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   * The context is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._windowRef.instance.placement = Array.isArray(this.placement) ? this.placement[0] : this.placement;\n\n      // apply styling to set basic css-classes on target element, before going for positioning\n      this._windowRef.changeDetectorRef.detectChanges();\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      // position tooltip along the element\n      this._windowRef.instance.applyPlacement(\n          positionElements(\n              this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n              this.container === 'body'));\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n    }\n  }\n\n  /**\n   * Toggles an elementâs tooltip. This is considered a âmanualâ triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.open.bind(this), this.close.bind(this),\n        this.toggle.bind(this));\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\nimport {NgbTooltipConfig} from './tooltip-config';\nimport {Placement} from '../util/positioning';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbTooltipModule, providers: [NgbTooltipConfig]}; }\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd\" class=\"{{highlightClass}}\">{{part}}</span><ng-template [ngIf]=\"!isOdd\">{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styles: [`\n    .ngb-highlight {\n      font-weight: bold;\n    }\n  `]\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  @Input() highlightClass = 'ngb-highlight';\n  @Input() result: string;\n  @Input() term: string;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const resultStr = toString(this.result);\n    const resultLC = resultStr.toLowerCase();\n    const termLC = toString(this.term).toLowerCase();\n    let currentIdx = 0;\n\n    if (termLC.length > 0) {\n      this.parts = resultLC.split(new RegExp(`(${regExpEscape(termLC)})`)).map((part) => {\n        const originalPart = resultStr.substr(currentIdx, part.length);\n        currentIdx += part.length;\n        return originalPart;\n      });\n    } else {\n      this.parts = [resultStr];\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, TemplateRef, OnInit} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * Context for the typeahead result template in case you want to override the default one\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result data model\n   */\n  result: any;\n\n  /**\n   * Search term from the input used to get current result\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  host: {'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead widnow. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>('live announcer delay');\nexport const DEFAULT_ARIA_LIVE_DELAY: ARIA_LIVE_DELAY_TYPE = 100;\n\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable()\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * Configuration service for the NgbTypeahead component.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable()\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = 'bottom-left';\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {Observable, BehaviorSubject, Subscription, fromEvent} from 'rxjs';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\nimport {PopupService} from '../util/popup';\nimport {toString, isDefined} from '../util/util';\nimport {Key} from '../util/key';\nimport {Live} from '../util/accessibility/live';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * Payload of the selectItem event.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * An item about to be selected\n   */\n  item: any;\n\n  /**\n   * Function that will prevent item selection if called\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * NgbTypeahead directive provides a simple way of creating powerful typeaheads from any text input\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(document:click)': 'onDocumentClick($event)',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * Value for the configurable autocomplete attribute.\n   * Defaults to 'off' to disable the native browser autocomplete, but this standard value does not seem\n   * to be always correctly taken into account.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   * Currently only supports \"body\".\n   */\n  @Input() container: string;\n\n  /**\n   * A flag indicating if model values should be restricted to the ones selected from the popup only.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * A flag indicating if the first match should automatically be focused as you type.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * A function to convert a given value into string to display in the input field\n   */\n  @Input() inputFormatter: (value: any) => string;\n\n  /**\n   * A function to transform the provided observable text into the array of results.  Note that the \"this\" argument\n   * is undefined so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<any[]>;\n\n  /**\n   * A function to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() resultFormatter: (value: any) => string;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Show hint when an option in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /** Placement of a typeahead accepts:\n   *    \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\n   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\n   * and array of above values.\n  */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted when a match is selected. Event payload is of type NgbTypeaheadSelectItemEvent.\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = value;\n      if (this.editable) {\n        this._onChange(value);\n      }\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const processedResults$ = results$.pipe(tap(() => {\n      if (!this.editable) {\n        this._onChange(undefined);\n      }\n    }));\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) { this._writeInputValue(this._formatItemForInput(value)); }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  onDocumentClick(event) {\n    if (event.target !== this._elementRef.nativeElement) {\n      this.dismissPopup();\n    }\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._closePopup();\n      this._writeInputValue(this._inputValueBackup);\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    if (Key[toString(event.which)]) {\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n          this._windowRef.instance.next();\n          this._showHint();\n          break;\n        case Key.ArrowUp:\n          event.preventDefault();\n          this._windowRef.instance.prev();\n          this._showHint();\n          break;\n        case Key.Enter:\n        case Key.Tab:\n          const result = this._windowRef.instance.getActive();\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n            this._selectResult(result);\n          }\n          this._closePopup();\n          break;\n        case Key.Escape:\n          event.preventDefault();\n          this._resubscribeTypeahead.next(null);\n          this.dismissPopup();\n          break;\n      }\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n    }\n  }\n\n  private _closePopup() {\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this.writeValue(this._windowRef.instance.getActive());\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n      const count = results.length;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {Live, ARIA_LIVE_DELAY, DEFAULT_ARIA_LIVE_DELAY} from './../util/accessibility/live';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgbTypeaheadModule,\n      providers: [Live, NgbTypeaheadConfig, {provide: ARIA_LIVE_DELAY, useValue: DEFAULT_ARIA_LIVE_DELAY}]\n    };\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\n\nimport {NgbAccordionModule, NgbPanelChangeEvent} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule, NgbModal, NgbModalOptions, NgbModalRef, ModalDismissReasons} from './modal/modal.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule, NgbTabChangeEvent} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule, NgbTypeaheadSelectItemEvent} from './typeahead/typeahead.module';\n\nexport {\n  NgbAccordionModule,\n  NgbPanelChangeEvent,\n  NgbAccordionConfig,\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent\n} from './accordion/accordion.module';\nexport {NgbAlertModule, NgbAlertConfig, NgbAlert} from './alert/alert.module';\nexport {NgbButtonsModule, NgbCheckBox, NgbRadioGroup} from './buttons/buttons.module';\nexport {NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide} from './carousel/carousel.module';\nexport {NgbCollapseModule, NgbCollapse} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbDatepickerModule,\n  NgbDatepickerI18n,\n  NgbDatepickerConfig,\n  NgbDateStruct,\n  NgbDateParserFormatter,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDatepicker,\n  NgbInputDatepicker,\n  NgbDatepickerToggle\n} from './datepicker/datepicker.module';\nexport {NgbDropdownModule, NgbDropdownConfig, NgbDropdown} from './dropdown/dropdown.module';\nexport {\n  NgbModalModule,\n  NgbModal,\n  NgbModalOptions,\n  NgbActiveModal,\n  NgbModalRef,\n  ModalDismissReasons\n} from './modal/modal.module';\nexport {NgbPaginationModule, NgbPaginationConfig, NgbPagination} from './pagination/pagination.module';\nexport {NgbPopoverModule, NgbPopoverConfig, NgbPopover} from './popover/popover.module';\nexport {NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar} from './progressbar/progressbar.module';\nexport {NgbRatingModule, NgbRatingConfig, NgbRating} from './rating/rating.module';\nexport {\n  NgbTabsetModule,\n  NgbTabChangeEvent,\n  NgbTabsetConfig,\n  NgbTabset,\n  NgbTab,\n  NgbTabContent,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimepickerModule,\n  NgbTimepickerConfig,\n  NgbTimeStruct,\n  NgbTimepicker,\n  NgbTimeAdapter\n} from './timepicker/timepicker.module';\nexport {NgbTooltipModule, NgbTooltipConfig, NgbTooltip} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeaheadModule,\n  NgbTypeaheadConfig,\n  NgbTypeaheadSelectItemEvent,\n  NgbTypeahead\n} from './typeahead/typeahead.module';\n\nexport {Placement} from './util/positioning';\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n  NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\n\n@NgModule({\n  imports: [\n    NgbAlertModule.forRoot(), NgbButtonsModule.forRoot(), NgbCollapseModule.forRoot(), NgbProgressbarModule.forRoot(),\n    NgbTooltipModule.forRoot(), NgbTypeaheadModule.forRoot(), NgbAccordionModule.forRoot(), NgbCarouselModule.forRoot(),\n    NgbDatepickerModule.forRoot(), NgbDropdownModule.forRoot(), NgbModalModule.forRoot(), NgbPaginationModule.forRoot(),\n    NgbPopoverModule.forRoot(), NgbProgressbarModule.forRoot(), NgbRatingModule.forRoot(), NgbTabsetModule.forRoot(),\n    NgbTimepickerModule.forRoot(), NgbTooltipModule.forRoot()\n  ],\n  exports: NGB_MODULES\n})\nexport class NgbRootModule {\n}\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n  static forRoot(): ModuleWithProviders { return {ngModule: NgbRootModule}; }\n}\n"]}